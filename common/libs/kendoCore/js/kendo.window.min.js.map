{"version":3,"sources":["kendo.window.js"],"names":["f","define","$","undefined","defined","x","toInt","element","property","parseInt","css","constrain","value","low","high","normalizedValue","isNaN","indexOf","Math","max","min","Infinity","executableScript","this","type","toLowerCase","getPosition","elem","parentOverflowX","parentOverflowY","result","top","offsetTop","left","offsetLeft","parent","offsetParent","scrollTop","scrollLeft","WindowResizing","wnd","that","owner","_preventDragging","_draggable","Draggable","wrapper","filter","KWINDOWRESIZEHANDLES","group","id","dragstart","proxy","drag","dragend","userEvents","bind","addOverlay","removeOverlay","WindowDragging","dragHandle","dragcancel","stopPropagation","kendo","window","Widget","ui","TabKeyTrap","Popup","isPlainObject","activeElement","_activeElement","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","each","template","BODY","NS","MODAL_NS","KWINDOW","KWINDOWTITLE","KWINDOWTITLEBAR","KWINDOWCONTENT","KDIALOGCONTENT","KOVERLAY","KCONTENTFRAME","LOADING","KHOVERSTATE","KFOCUSEDSTATE","MAXIMIZEDSTATE","VISIBLE","HIDDEN","CURSOR","OPEN","ACTIVATE","DEACTIVATE","CLOSE","REFRESH","MINIMIZE","MAXIMIZE","RESIZESTART","RESIZE","RESIZEEND","DRAGSTART","DRAGEND","KENDOKEYDOWN","ERROR","OVERFLOW","DATADOCOVERFLOWRULE","ZINDEX","MINIMIZE_MAXIMIZE","KPIN","KUNPIN","PIN_UNPIN","TITLEBAR_BUTTONS","REFRESHICON","WINDOWEVENTSHANDLED","zero","isLocalUrl","SIZE","small","medium","large","Window","init","options","visibility","display","position","content","windowContent","windowFrame","globalWindow","offset","isVisible","suppressActions","actions","length","fn","call","appendTo","containment","draggable","first","url","find","remove","is","visible","closest","addClass","_createWindow","title","_dimensions","minTop","minLeft","maxTop","maxLeft","_position","refresh","toFront","children","modal","_overlay","opacity","on","_buttonEnter","_buttonLeave","_windowActionHandler","_keydown","_focus","_blur","_keydownContent","data","windowInstance","document","widgetInstance","not","i","_resizable","pinned","pin","attr","role","aria-labelledby","add","touchScroller","_resizeHandler","_onDocumentResize","_marker","guid","substring","trigger","notify","_tabKeyTrap","trap","shouldTrap","e","currentTarget","removeClass","width","height","maxHeight","sizeClass","size","dimensions","contentBoxSizing","lrBorderWidth","tbBorderWidth","paddingTop","_isPinned","_updateBoundaries","maxWidth","minWidth","minHeight","hide","containmentTop","containmentLeft","parseFloat","innerWidth","innerHeight","clientWidth","support","scrollbar","clientHeight","_animationOptions","animation","basicAnimation","open","effects","close","_resize","resize","resizable","resizing","off","destroy","target","toggleMaximization","split","index","handler","append","templates","resizeHandle","dragging","_actions","titlebar","container","windowSpecificCommands","map","action","name","html","render","setOptions","scrollable","cachedOptions","JSON","parse","stringify","restore","_enableDocumentScrolling","events","zoom","direction","fade","duration","properties","scale","autoFocus","isMaximized","isMinimized","_closable","inArray","keys","keyCode","ESC","_close","handled","newWidth","newHeight","w","h","distance","_closing","altKey","unpin","UP","focus","maximize","DOWN","minimize","getOffset","ctrlKey","LEFT","RIGHT","preventDefault","overlay","insertBefore","toggle","preventScroll","_stopDocumentScrolling","_actionForIcon","icon","iconClass","exec","className","k-i-close","k-i-window-maximize","k-i-window-minimize","k-i-window-restore","k-i-refresh","k-i-pin","k-i-unpin","_modals","zStack","dom","object","_object","sort","a","b","widget","center","newTop","newLeft","documentWindow","_scrollIsAppended","titleBarHeight","encoded","titleBar","titleElement","arguments","text","htmlEncode","prepend","scrollContainer","angular","elements","empty","push","dataItem","otherModalsVisible","overlayFx","showOptions","contentElement","containmentContext","doc","kendoStop","Fade","fx","fadeIn","endValue","play","show","kendoAnimate","complete","_activate","_containerScrollTop","_containerScrollLeft","_removeOverlay","suppressAnimation","modals","hideOverlay","hideOptions","fadeOut","startValue","last","systemTriggered","defaultPrevented","userTriggered","reverse","_deactivate","iframe","blur","lastModal","_actionable","_shouldFocus","active","windowTop","currentWindow","zIndex","originalZIndex","windowObject","zIndexNew","style","setTimeout","shouldRestrictTop","restoreOptions","end","removeAttr","_sizingAction","actionId","callback","eq","before","$body","$html","_storeOverflowRule","_restoreOverflowRule","body","$element","_isOverflowStored","overflowRule","get","overflow","removeData","win","zoomLevel","showIframe","initOptions","src","contentFrame","unbind","_triggerRefresh","_ajaxRequest","toggleClass","_ajaxComplete","clearTimeout","_loadingIconTimeout","_ajaxError","xhr","status","_ajaxSuccess","contentTemplate","prop","_showLoading","ajax","dataType","cache","error","success","_destroy","iframeSrcAttributes","contentHtml","isRtl","getAttribute","editor","prototype","marginTop","marginLeft","hasMargin","wrapperPosition","relativeElMarginLeft","relativeElMarginTop","elementPadding","initialPosition","resizeDirection","replace","initialSize","containerOffset","test","_relativeElMarginLeft","_relativeElMarginTop","rtl","leftRtlOffset","scrollOffset","windowBottom","windowRight","y","newWindowTop","location","reset","initialWindowPosition","initialPointerPosition","startPosition","client","axis","transforms","_finishDrag","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.window.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.window', [\n        'kendo.draganddrop',\n        'kendo.popup'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'window',\n        name: 'Window',\n        category: 'web',\n        description: 'The Window widget displays content in a modal or non-modal HTML window.',\n        depends: [\n            'draganddrop',\n            'popup'\n        ],\n        features: [{\n                id: 'window-fx',\n                name: 'Animation',\n                description: 'Support for animation',\n                depends: ['fx']\n            }]\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, TabKeyTrap = kendo.ui.Popup.TabKeyTrap, Draggable = kendo.ui.Draggable, isPlainObject = $.isPlainObject, activeElement = kendo._activeElement, outerWidth = kendo._outerWidth, outerHeight = kendo._outerHeight, proxy = $.proxy, extend = $.extend, each = $.each, template = kendo.template, BODY = 'body', templates, NS = '.kendoWindow', MODAL_NS = '.kendoWindowModal', KWINDOW = '.k-window', KWINDOWTITLE = '.k-window-title', KWINDOWTITLEBAR = KWINDOWTITLE + 'bar', KWINDOWCONTENT = '.k-window-content', KDIALOGCONTENT = '.k-dialog-content', KWINDOWRESIZEHANDLES = '.k-resize-handle', KOVERLAY = '.k-overlay', KCONTENTFRAME = 'k-content-frame', LOADING = 'k-i-loading', KHOVERSTATE = 'k-state-hover', KFOCUSEDSTATE = 'k-state-focused', MAXIMIZEDSTATE = 'k-window-maximized', VISIBLE = ':visible', HIDDEN = 'hidden', CURSOR = 'cursor', OPEN = 'open', ACTIVATE = 'activate', DEACTIVATE = 'deactivate', CLOSE = 'close', REFRESH = 'refresh', MINIMIZE = 'minimize', MAXIMIZE = 'maximize', RESIZESTART = 'resizeStart', RESIZE = 'resize', RESIZEEND = 'resizeEnd', DRAGSTART = 'dragstart', DRAGEND = 'dragend', KENDOKEYDOWN = 'kendoKeydown', ERROR = 'error', OVERFLOW = 'overflow', DATADOCOVERFLOWRULE = 'original-overflow-rule', ZINDEX = 'zIndex', MINIMIZE_MAXIMIZE = '.k-window-actions .k-i-window-minimize,.k-window-actions .k-i-window-maximize', KPIN = '.k-i-pin', KUNPIN = '.k-i-unpin', PIN_UNPIN = KPIN + ',' + KUNPIN, TITLEBAR_BUTTONS = '.k-window-titlebar .k-window-action', REFRESHICON = '.k-window-titlebar .k-i-refresh', WINDOWEVENTSHANDLED = 'WindowEventsHandled', zero = /^0[a-z]*$/i, isLocalUrl = kendo.isLocalUrl, SIZE = {\n                small: 'k-window-sm',\n                medium: 'k-window-md',\n                large: 'k-window-lg'\n            };\n        function defined(x) {\n            return typeof x != 'undefined';\n        }\n        function toInt(element, property) {\n            return parseInt(element.css(property), 10) || 0;\n        }\n        function constrain(value, low, high) {\n            var normalizedValue;\n            if (value && isNaN(value) && value.toString().indexOf('px') < 0) {\n                normalizedValue = value;\n            } else {\n                normalizedValue = Math.max(Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)), low === -Infinity ? low : parseInt(low, 10));\n            }\n            return normalizedValue;\n        }\n        function executableScript() {\n            return !this.type || this.type.toLowerCase().indexOf('script') >= 0;\n        }\n        function getPosition(elem) {\n            var result = {\n                    top: elem.offsetTop,\n                    left: elem.offsetLeft\n                }, parent = elem.offsetParent;\n            while (parent) {\n                result.top += parent.offsetTop;\n                result.left += parent.offsetLeft;\n                var parentOverflowX = $(parent).css('overflowX');\n                var parentOverflowY = $(parent).css('overflowY');\n                if (parentOverflowY === 'auto' || parentOverflowY === 'scroll') {\n                    result.top -= parent.scrollTop;\n                }\n                if (parentOverflowX === 'auto' || parentOverflowX === 'scroll') {\n                    result.left -= parent.scrollLeft;\n                }\n                parent = parent.offsetParent;\n            }\n            return result;\n        }\n        var Window = Widget.extend({\n            init: function (element, options) {\n                var that = this, wrapper, offset = {}, visibility, display, position, isVisible = false, content, windowContent, windowFrame, globalWindow, suppressActions = options && options.actions && !options.actions.length, id;\n                Widget.fn.init.call(that, element, options);\n                options = that.options;\n                position = options.position;\n                element = that.element;\n                content = options.content;\n                globalWindow = $(window);\n                if (suppressActions) {\n                    options.actions = [];\n                }\n                that.appendTo = $(options.appendTo);\n                that.containment = options.draggable.containment ? $(options.draggable.containment).first() : null;\n                if (content && !isPlainObject(content)) {\n                    content = options.content = { url: content };\n                }\n                element.find('script').filter(executableScript).remove();\n                if (!element.parent().is(that.appendTo) && !that.containment && (position.top === undefined || position.left === undefined)) {\n                    if (element.is(VISIBLE)) {\n                        offset = element.offset();\n                        isVisible = true;\n                    } else {\n                        visibility = element.css('visibility');\n                        display = element.css('display');\n                        element.css({\n                            visibility: HIDDEN,\n                            display: ''\n                        });\n                        offset = element.offset();\n                        element.css({\n                            visibility: visibility,\n                            display: display\n                        });\n                    }\n                    if (position.top === undefined) {\n                        position.top = offset.top;\n                    }\n                    if (position.left === undefined) {\n                        position.left = offset.left;\n                    }\n                }\n                if (!defined(options.visible) || options.visible === null) {\n                    options.visible = element.is(VISIBLE);\n                }\n                wrapper = that.wrapper = element.closest(KWINDOW);\n                if (!element.is('.k-window-content') || !wrapper[0]) {\n                    element.addClass('k-window-content');\n                    that._createWindow(element, options);\n                    wrapper = that.wrapper = element.closest(KWINDOW);\n                    that.title(that.options.title);\n                    that._dimensions();\n                }\n                that.minTop = that.minLeft = -Infinity;\n                that.maxTop = that.maxLeft = Infinity;\n                that._position();\n                if (content) {\n                    that.refresh(content);\n                }\n                if (options.visible) {\n                    that.toFront();\n                }\n                windowContent = wrapper.children(KWINDOWCONTENT);\n                if (options.visible && options.modal) {\n                    that._overlay(wrapper.is(VISIBLE)).css({ opacity: 0.5 });\n                }\n                wrapper.on('mouseenter' + NS, TITLEBAR_BUTTONS, proxy(that._buttonEnter, that)).on('mouseleave' + NS, TITLEBAR_BUTTONS, proxy(that._buttonLeave, that)).on('click' + NS, '> ' + TITLEBAR_BUTTONS, proxy(that._windowActionHandler, that)).on('keydown' + NS, that, proxy(that._keydown, that)).on('focus' + NS, proxy(that._focus, that)).on('blur' + NS, proxy(that._blur, that));\n                windowContent.on('keydown' + NS, that, proxy(that._keydownContent, that));\n                windowFrame = windowContent.find('.' + KCONTENTFRAME)[0];\n                if (windowFrame && !globalWindow.data(WINDOWEVENTSHANDLED)) {\n                    globalWindow.on('blur' + NS, function () {\n                        var element = $(document.activeElement).parent(KWINDOWCONTENT);\n                        if (element.length) {\n                            var windowInstance = kendo.widgetInstance(element);\n                            windowInstance._focus();\n                        }\n                    });\n                    globalWindow.on('focus' + NS, function () {\n                        $(KWINDOWCONTENT).not(KDIALOGCONTENT).each(function (i, element) {\n                            kendo.widgetInstance($(element))._blur();\n                        });\n                    });\n                    globalWindow.data(WINDOWEVENTSHANDLED, true);\n                }\n                this._resizable();\n                this._draggable();\n                if (options.pinned && this.wrapper.is(':visible')) {\n                    that.pin();\n                }\n                id = element.attr('id');\n                if (id) {\n                    id = id + '_wnd_title';\n                    wrapper.children(KWINDOWTITLEBAR).children(KWINDOWTITLE).attr('id', id);\n                    windowContent.attr({\n                        'role': 'dialog',\n                        'aria-labelledby': id\n                    });\n                }\n                wrapper.add(wrapper.children('.k-resize-handle,' + KWINDOWTITLEBAR)).on('mousedown' + NS, proxy(that.toFront, that));\n                that.touchScroller = kendo.touchScroller(element);\n                that._resizeHandler = proxy(that._onDocumentResize, that);\n                that._marker = kendo.guid().substring(0, 8);\n                $(window).on('resize' + NS + that._marker, that._resizeHandler);\n                if (options.visible) {\n                    that.trigger(OPEN);\n                    that.trigger(ACTIVATE);\n                }\n                kendo.notify(that);\n                if (this.options.modal) {\n                    this._tabKeyTrap = new TabKeyTrap(wrapper);\n                    this._tabKeyTrap.trap();\n                    this._tabKeyTrap.shouldTrap = function () {\n                        return wrapper.data('isFront');\n                    };\n                }\n            },\n            _buttonEnter: function (e) {\n                $(e.currentTarget).addClass(KHOVERSTATE);\n            },\n            _buttonLeave: function (e) {\n                $(e.currentTarget).removeClass(KHOVERSTATE);\n            },\n            _focus: function () {\n                this.wrapper.addClass(KFOCUSEDSTATE);\n            },\n            _blur: function () {\n                this.wrapper.removeClass(KFOCUSEDSTATE);\n            },\n            _dimensions: function () {\n                var wrapper = this.wrapper;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var maxHeight = options.maxHeight;\n                var sizeClass = options.size;\n                var dimensions = [\n                    'minWidth',\n                    'minHeight',\n                    'maxWidth',\n                    'maxHeight'\n                ];\n                var contentBoxSizing = wrapper.css('box-sizing') == 'content-box';\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, 'border-left-width') + toInt(wrapper, 'border-right-width') : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, 'border-top-width') + toInt(wrapper, 'border-bottom-width') : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, 'padding-top') : 0;\n                if (this.containment && !this._isPinned) {\n                    this._updateBoundaries();\n                    options.maxHeight = Math.min(this.containment.height - (tbBorderWidth + paddingTop), maxHeight);\n                    options.maxWidth = Math.min(this.containment.width - lrBorderWidth, options.maxWidth);\n                }\n                for (var i = 0; i < dimensions.length; i++) {\n                    var value = options[dimensions[i]] || '';\n                    if (value != Infinity) {\n                        wrapper.css(dimensions[i], value);\n                    }\n                }\n                if (maxHeight != Infinity) {\n                    this.element.css('maxHeight', maxHeight);\n                }\n                if (width) {\n                    wrapper.width(constrain(width, options.minWidth, options.maxWidth));\n                } else {\n                    wrapper.width('');\n                }\n                if (height) {\n                    wrapper.height(constrain(height, options.minHeight, options.maxHeight));\n                } else {\n                    wrapper.height('');\n                }\n                if (!options.visible) {\n                    wrapper.hide();\n                }\n                if (sizeClass && SIZE[sizeClass]) {\n                    wrapper.addClass(SIZE[sizeClass]);\n                }\n            },\n            _position: function () {\n                var wrapper = this.wrapper, position = this.options.position, containmentTop, containmentLeft;\n                this._updateBoundaries();\n                if (this.containment) {\n                    position.top = position.top || 0;\n                    position.left = position.left || 0;\n                    containmentTop = position.top.toString().indexOf('%') > 0 ? parseInt(this.containment.height * (parseFloat(position.top) / 100), 10) : position.top;\n                    containmentLeft = position.left.toString().indexOf('%') > 0 ? parseInt(this.containment.width * (parseFloat(position.left) / 100), 10) : position.left;\n                    position.top = constrain(containmentTop, this.minTop, this.maxTop);\n                    position.left = constrain(containmentLeft, this.minLeft, this.maxLeft);\n                }\n                if (position.top === 0) {\n                    position.top = position.top.toString();\n                }\n                if (position.left === 0) {\n                    position.left = position.left.toString();\n                }\n                wrapper.css({\n                    top: position.top || '',\n                    left: position.left || ''\n                });\n            },\n            _updateBoundaries: function () {\n                var containment = this.containment;\n                if (!containment) {\n                    return null;\n                }\n                containment.width = containment.innerWidth();\n                containment.height = containment.innerHeight();\n                if (parseInt(containment.width, 10) > containment[0].clientWidth) {\n                    containment.width -= kendo.support.scrollbar();\n                }\n                if (parseInt(containment.height, 10) > containment[0].clientHeight) {\n                    containment.height -= kendo.support.scrollbar();\n                }\n                containment.position = getPosition(containment[0]);\n                if (this._isPinned) {\n                    this.minTop = this.minLeft = -Infinity;\n                    this.maxTop = this.maxLeft = Infinity;\n                } else {\n                    this.minTop = containment.scrollTop();\n                    this.minLeft = containment.scrollLeft();\n                    this.maxLeft = this.minLeft + containment.width - outerWidth(this.wrapper, true);\n                    this.maxTop = this.minTop + containment.height - outerHeight(this.wrapper, true);\n                }\n            },\n            _animationOptions: function (id) {\n                var animation = this.options.animation;\n                var basicAnimation = {\n                    open: { effects: {} },\n                    close: {\n                        hide: true,\n                        effects: {}\n                    }\n                };\n                return animation && animation[id] || basicAnimation[id];\n            },\n            _resize: function () {\n                kendo.resize(this.element.children());\n            },\n            _resizable: function () {\n                var resizable = this.options.resizable;\n                var wrapper = this.wrapper;\n                if (this.resizing) {\n                    wrapper.off('dblclick' + NS).children(KWINDOWRESIZEHANDLES).remove();\n                    this.resizing.destroy();\n                    this.resizing = null;\n                }\n                if (resizable) {\n                    wrapper.on('dblclick' + NS, KWINDOWTITLEBAR, proxy(function (e) {\n                        if (!$(e.target).closest('.k-window-action').length) {\n                            this.toggleMaximization();\n                        }\n                    }, this));\n                    each('n e s w se sw ne nw'.split(' '), function (index, handler) {\n                        wrapper.append(templates.resizeHandle(handler));\n                    });\n                    this.resizing = new WindowResizing(this);\n                }\n                wrapper = null;\n            },\n            _draggable: function () {\n                var draggable = this.options.draggable;\n                if (this.dragging) {\n                    this.dragging.destroy();\n                    this.dragging = null;\n                }\n                if (draggable) {\n                    this.dragging = new WindowDragging(this, draggable.dragHandle || KWINDOWTITLEBAR);\n                }\n            },\n            _actions: function () {\n                var options = this.options;\n                var actions = options.actions;\n                var pinned = options.pinned;\n                var titlebar = this.wrapper.children(KWINDOWTITLEBAR);\n                var container = titlebar.find('.k-window-actions');\n                var windowSpecificCommands = [\n                    'maximize',\n                    'minimize'\n                ];\n                actions = $.map(actions, function (action) {\n                    action = pinned && action.toLowerCase() === 'pin' ? 'unpin' : action;\n                    return { name: windowSpecificCommands.indexOf(action.toLowerCase()) > -1 ? 'window-' + action : action };\n                });\n                container.html(kendo.render(templates.action, actions));\n            },\n            setOptions: function (options) {\n                var that = this;\n                var sizeClass = that.options.size;\n                var cachedOptions = JSON.parse(JSON.stringify(options));\n                extend(options.position, that.options.position);\n                extend(options.position, cachedOptions.position);\n                Widget.fn.setOptions.call(that, options);\n                var scrollable = that.options.scrollable !== false;\n                that.restore();\n                if (typeof options.title !== 'undefined') {\n                    that.title(options.title);\n                }\n                that.wrapper.removeClass(SIZE[sizeClass]);\n                that._dimensions();\n                that._position();\n                that._resizable();\n                that._draggable();\n                that._actions();\n                if (typeof options.modal !== 'undefined') {\n                    var visible = that.options.visible !== false;\n                    that._enableDocumentScrolling();\n                    that._overlay(options.modal && visible);\n                }\n                that.element.css(OVERFLOW, scrollable ? '' : 'hidden');\n            },\n            events: [\n                OPEN,\n                ACTIVATE,\n                DEACTIVATE,\n                CLOSE,\n                MINIMIZE,\n                MAXIMIZE,\n                REFRESH,\n                RESIZESTART,\n                RESIZE,\n                RESIZEEND,\n                DRAGSTART,\n                DRAGEND,\n                KENDOKEYDOWN,\n                ERROR\n            ],\n            options: {\n                name: 'Window',\n                animation: {\n                    open: {\n                        effects: {\n                            zoom: { direction: 'in' },\n                            fade: { direction: 'in' }\n                        },\n                        duration: 350\n                    },\n                    close: {\n                        effects: {\n                            zoom: {\n                                direction: 'out',\n                                properties: { scale: 0.7 }\n                            },\n                            fade: { direction: 'out' }\n                        },\n                        duration: 350,\n                        hide: true\n                    }\n                },\n                title: '',\n                actions: ['Close'],\n                autoFocus: true,\n                modal: false,\n                size: 'auto',\n                resizable: true,\n                draggable: true,\n                minWidth: 90,\n                minHeight: 50,\n                maxWidth: Infinity,\n                maxHeight: Infinity,\n                pinned: false,\n                scrollable: true,\n                position: {},\n                content: null,\n                visible: null,\n                height: null,\n                width: null,\n                appendTo: 'body',\n                isMaximized: false,\n                isMinimized: false\n            },\n            _closable: function () {\n                return $.inArray('close', $.map(this.options.actions, function (x) {\n                    return x.toLowerCase();\n                })) > -1;\n            },\n            _keydownContent: function (e) {\n                var that = this, keys = kendo.keys, keyCode = e.keyCode;\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n            },\n            _keydown: function (e) {\n                var that = this, options = that.options, keys = kendo.keys, keyCode = e.keyCode, wrapper = that.wrapper, offset, handled, distance = 10, isMaximized = options.isMaximized, isMinimized = options.isMinimized, newWidth, newHeight, w, h;\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n                if (e.target != e.currentTarget || that._closing) {\n                    return;\n                }\n                if (e.altKey && keyCode == 82) {\n                    that.refresh();\n                }\n                if (e.altKey && keyCode == 80) {\n                    if (that.options.pinned) {\n                        that.unpin();\n                    } else {\n                        that.pin();\n                    }\n                }\n                if (e.altKey && keyCode == keys.UP) {\n                    if (isMinimized) {\n                        that.restore();\n                        that.wrapper.focus();\n                    } else if (!isMaximized) {\n                        that.maximize();\n                        that.wrapper.focus();\n                    }\n                } else if (e.altKey && keyCode == keys.DOWN) {\n                    if (!isMinimized && !isMaximized) {\n                        that.minimize();\n                        that.wrapper.focus();\n                    } else if (isMaximized) {\n                        that.restore();\n                    }\n                }\n                offset = kendo.getOffset(wrapper);\n                if (that.containment && !that._isPinned) {\n                    offset = that.options.position;\n                }\n                if (options.draggable && !e.ctrlKey && !e.altKey && !isMaximized) {\n                    that._updateBoundaries();\n                    if (keyCode == keys.UP) {\n                        offset.top = constrain(offset.top - distance, that.minTop, that.maxTop);\n                        handled = wrapper.css('top', offset.top);\n                    } else if (keyCode == keys.DOWN) {\n                        offset.top = constrain(offset.top + distance, that.minTop, that.maxTop);\n                        handled = wrapper.css('top', offset.top);\n                    } else if (keyCode == keys.LEFT) {\n                        offset.left = constrain(offset.left - distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css('left', offset.left);\n                    } else if (keyCode == keys.RIGHT) {\n                        offset.left = constrain(offset.left + distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css('left', offset.left);\n                    }\n                }\n                if (options.resizable && e.ctrlKey && !isMaximized && !isMinimized) {\n                    if (keyCode == keys.UP) {\n                        handled = true;\n                        newHeight = wrapper.height() - distance;\n                    } else if (keyCode == keys.DOWN) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newHeight = Math.min(wrapper.height() + distance, that.containment.height - offset.top - toInt(wrapper, 'padding-top') - toInt(wrapper, 'borderBottomWidth') - toInt(wrapper, 'borderTopWidth'));\n                        } else {\n                            newHeight = wrapper.height() + distance;\n                        }\n                    }\n                    if (keyCode == keys.LEFT) {\n                        handled = true;\n                        newWidth = wrapper.width() - distance;\n                    } else if (keyCode == keys.RIGHT) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newWidth = Math.min(wrapper.width() + distance, that.containment.width - offset.left - toInt(wrapper, 'borderLeftWidth') - toInt(wrapper, 'borderRightWidth'));\n                        } else {\n                            newWidth = wrapper.width() + distance;\n                        }\n                    }\n                    if (handled) {\n                        w = constrain(newWidth, options.minWidth, options.maxWidth);\n                        h = constrain(newHeight, options.minHeight, options.maxHeight);\n                        if (!isNaN(w)) {\n                            wrapper.width(w);\n                            that.options.width = w + 'px';\n                        }\n                        if (!isNaN(h)) {\n                            wrapper.height(h);\n                            that.options.height = h + 'px';\n                        }\n                        that.resize();\n                    }\n                }\n                if (handled) {\n                    e.preventDefault();\n                }\n            },\n            _overlay: function (visible) {\n                var overlay = this.containment ? this.containment.children(KOVERLAY) : this.appendTo.children(KOVERLAY), wrapper = this.wrapper;\n                if (!overlay.length) {\n                    overlay = $('<div class=\\'k-overlay\\' />');\n                }\n                overlay.insertBefore(wrapper[0]).toggle(visible).css(ZINDEX, parseInt(wrapper.css(ZINDEX), 10) - 1);\n                if (this.options.modal.preventScroll && !this.containment) {\n                    this._stopDocumentScrolling();\n                }\n                return overlay;\n            },\n            _actionForIcon: function (icon) {\n                var iconClass = /\\bk-i(-\\w+)+\\b/.exec(icon[0].className)[0];\n                return {\n                    'k-i-close': '_close',\n                    'k-i-window-maximize': 'maximize',\n                    'k-i-window-minimize': 'minimize',\n                    'k-i-window-restore': 'restore',\n                    'k-i-refresh': 'refresh',\n                    'k-i-pin': 'pin',\n                    'k-i-unpin': 'unpin'\n                }[iconClass];\n            },\n            _windowActionHandler: function (e) {\n                if (this._closing) {\n                    return;\n                }\n                var icon = $(e.target).closest('.k-window-action').find('.k-icon');\n                var action = this._actionForIcon(icon);\n                if (action) {\n                    e.preventDefault();\n                    this[action]();\n                    return false;\n                }\n            },\n            _modals: function () {\n                var that = this;\n                var zStack = $(KWINDOW).filter(function () {\n                    var dom = $(this);\n                    var object = that._object(dom);\n                    var options = object && object.options;\n                    return options && options.modal && options.visible && options.appendTo === that.options.appendTo && dom.is(VISIBLE);\n                }).sort(function (a, b) {\n                    return +$(a).css('zIndex') - +$(b).css('zIndex');\n                });\n                that = null;\n                return zStack;\n            },\n            _object: function (element) {\n                var content = element.children(KWINDOWCONTENT);\n                var widget = kendo.widgetInstance(content);\n                if (widget) {\n                    return widget;\n                }\n                return undefined;\n            },\n            center: function () {\n                var that = this, position = that.options.position, wrapper = that.wrapper, documentWindow = $(window), scrollTop = 0, scrollLeft = 0, newTop, newLeft;\n                if (that.options.isMaximized) {\n                    return that;\n                }\n                if (that.options.pinned && !that._isPinned) {\n                    that.pin();\n                }\n                if (!that.options.pinned) {\n                    scrollTop = documentWindow.scrollTop();\n                    scrollLeft = documentWindow.scrollLeft();\n                }\n                if (this.containment && !that.options.pinned) {\n                    newTop = this.minTop + (this.maxTop - this.minTop) / 2;\n                    newLeft = this.minLeft + (this.maxLeft - this.minLeft) / 2;\n                } else {\n                    that._scrollIsAppended = true;\n                    newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.width()) / 2);\n                    newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.height() - toInt(wrapper, 'paddingTop')) / 2);\n                }\n                wrapper.css({\n                    left: newLeft,\n                    top: newTop\n                });\n                position.top = newTop;\n                position.left = newLeft;\n                return that;\n            },\n            title: function (title) {\n                var that = this, value, encoded = true, wrapper = that.wrapper, titleBar = wrapper.children(KWINDOWTITLEBAR), titleElement = titleBar.children(KWINDOWTITLE), titleBarHeight, display, visibility;\n                if (!arguments.length) {\n                    return titleElement.html();\n                }\n                if ($.isPlainObject(title)) {\n                    value = typeof title.text !== 'undefined' ? title.text : '';\n                    encoded = title.encoded !== false;\n                } else {\n                    value = title;\n                }\n                if (value === false) {\n                    wrapper.addClass('k-window-titleless');\n                    wrapper.css('padding-top', 0);\n                    titleBar.remove();\n                } else {\n                    if (!titleBar.length) {\n                        wrapper.prepend(templates.titlebar({ title: encoded ? kendo.htmlEncode(value) : value }));\n                        that._actions();\n                        titleBar = wrapper.children(KWINDOWTITLEBAR);\n                    } else {\n                        titleElement.html(encoded ? kendo.htmlEncode(value) : value);\n                    }\n                    visibility = wrapper.css('visibility');\n                    display = wrapper.css('display');\n                    if (visibility === HIDDEN) {\n                        wrapper.css({ display: '' });\n                        titleBarHeight = parseInt(outerHeight(titleBar), 10);\n                        wrapper.css({ display: display });\n                    } else {\n                        wrapper.css({\n                            visibility: HIDDEN,\n                            display: ''\n                        });\n                        titleBarHeight = parseInt(outerHeight(titleBar), 10);\n                        wrapper.css({\n                            visibility: visibility,\n                            display: display\n                        });\n                    }\n                    wrapper.css('padding-top', titleBarHeight);\n                    titleBar.css('margin-top', -titleBarHeight);\n                }\n                that.options.title = value;\n                return that;\n            },\n            content: function (html, data) {\n                var content = this.wrapper.children(KWINDOWCONTENT), scrollContainer = content.children('.km-scroll-container');\n                content = scrollContainer[0] ? scrollContainer : content;\n                if (!defined(html)) {\n                    return content.html();\n                }\n                this.angular('cleanup', function () {\n                    return { elements: content.children() };\n                });\n                kendo.destroy(this.element.children());\n                content.empty().html(html);\n                this.angular('compile', function () {\n                    var a = [];\n                    for (var i = content.length; --i >= 0;) {\n                        a.push({ dataItem: data });\n                    }\n                    return {\n                        elements: content.children(),\n                        data: a\n                    };\n                });\n                return this;\n            },\n            open: function () {\n                var that = this, wrapper = that.wrapper, options = that.options, showOptions = this._animationOptions('open'), contentElement = wrapper.children(KWINDOWCONTENT), overlay, otherModalsVisible, containmentContext = this.containment && !that._isPinned, doc = containmentContext ? this.containment : $(document);\n                if (!that.trigger(OPEN)) {\n                    if (that._closing) {\n                        wrapper.kendoStop(true, true);\n                    }\n                    that._closing = false;\n                    that.toFront();\n                    if (options.autoFocus) {\n                        that.wrapper.focus();\n                    }\n                    options.visible = true;\n                    if (options.modal) {\n                        otherModalsVisible = !!that._modals().length;\n                        overlay = that._overlay(otherModalsVisible);\n                        overlay.kendoStop(true, true);\n                        if (showOptions.duration && kendo.effects.Fade && !otherModalsVisible) {\n                            var overlayFx = kendo.fx(overlay).fadeIn();\n                            overlayFx.duration(showOptions.duration || 0);\n                            overlayFx.endValue(0.5);\n                            overlayFx.play();\n                        } else {\n                            overlay.css('opacity', 0.5);\n                        }\n                        overlay.show();\n                        $(window).on('focus' + MODAL_NS, function () {\n                            if (wrapper.data('isFront') && !$(document.activeElement).closest(wrapper).length) {\n                                that.wrapper.focus();\n                            }\n                        });\n                    }\n                    if (!wrapper.is(VISIBLE)) {\n                        contentElement.css(OVERFLOW, HIDDEN);\n                        that.wrapper.find(TITLEBAR_BUTTONS).addClass('k-flat');\n                        wrapper.show().kendoStop().kendoAnimate({\n                            effects: showOptions.effects,\n                            duration: showOptions.duration,\n                            complete: proxy(this._activate, this)\n                        });\n                    }\n                }\n                if (options.isMaximized) {\n                    that._containerScrollTop = doc.scrollTop();\n                    that._containerScrollLeft = doc.scrollLeft();\n                    that._stopDocumentScrolling();\n                }\n                if (this.options.pinned && !this._isPinned) {\n                    this.pin();\n                }\n                return that;\n            },\n            _activate: function () {\n                var scrollable = this.options.scrollable !== false;\n                if (this.options.autoFocus) {\n                    this.wrapper.focus();\n                }\n                this.element.css(OVERFLOW, scrollable ? '' : 'hidden');\n                kendo.resize(this.element.children());\n                this.trigger(ACTIVATE);\n            },\n            _removeOverlay: function (suppressAnimation) {\n                var modals = this._modals();\n                var options = this.options;\n                var hideOverlay = options.modal && !modals.length;\n                var overlay = options.modal ? this._overlay(true) : $(undefined);\n                var hideOptions = this._animationOptions('close');\n                if (hideOverlay) {\n                    if (!suppressAnimation && hideOptions.duration && kendo.effects.Fade) {\n                        var overlayFx = kendo.fx(overlay).fadeOut();\n                        overlayFx.duration(hideOptions.duration || 0);\n                        overlayFx.startValue(0.5);\n                        overlayFx.play();\n                    } else {\n                        this._overlay(false).remove();\n                    }\n                    if (options.modal.preventScroll) {\n                        this._enableDocumentScrolling();\n                    }\n                } else if (modals.length) {\n                    this._object(modals.last())._overlay(true);\n                    if (options.modal.preventScroll) {\n                        this._stopDocumentScrolling();\n                    }\n                }\n            },\n            _close: function (systemTriggered) {\n                var that = this, wrapper = that.wrapper, options = that.options, showOptions = this._animationOptions('open'), hideOptions = this._animationOptions('close'), containmentContext = this.containment && !that._isPinned, doc = containmentContext ? this.containment : $(document), defaultPrevented;\n                if (that._closing) {\n                    return;\n                }\n                defaultPrevented = that.trigger(CLOSE, { userTriggered: !systemTriggered });\n                that._closing = !defaultPrevented;\n                if (wrapper.is(VISIBLE) && !defaultPrevented) {\n                    options.visible = false;\n                    $(KWINDOW).each(function (i, element) {\n                        var contentElement = $(element).children(KWINDOWCONTENT);\n                        if (element != wrapper && contentElement.find('> .' + KCONTENTFRAME).length > 0) {\n                            contentElement.children(KOVERLAY).remove();\n                        }\n                    });\n                    this._removeOverlay();\n                    that.wrapper.find(TITLEBAR_BUTTONS).removeClass('k-flat');\n                    wrapper.kendoStop().kendoAnimate({\n                        effects: hideOptions.effects || showOptions.effects,\n                        reverse: hideOptions.reverse === true,\n                        duration: hideOptions.duration,\n                        complete: proxy(this._deactivate, this)\n                    });\n                    $(window).off(MODAL_NS);\n                }\n                if (that.options.isMaximized) {\n                    that._enableDocumentScrolling();\n                    if (that._containerScrollTop && that._containerScrollTop > 0) {\n                        doc.scrollTop(that._containerScrollTop);\n                    }\n                    if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                        doc.scrollLeft(that._containerScrollLeft);\n                    }\n                }\n                if (that.options.iframe) {\n                    that.wrapper.blur();\n                }\n            },\n            _deactivate: function () {\n                var that = this;\n                that.wrapper.hide().css('opacity', '');\n                that.trigger(DEACTIVATE);\n                if (that.options.modal) {\n                    var lastModal = that._object(that._modals().last());\n                    if (lastModal) {\n                        lastModal.toFront();\n                    }\n                }\n            },\n            close: function () {\n                this._close(true);\n                return this;\n            },\n            _actionable: function (element) {\n                return $(element).is(TITLEBAR_BUTTONS + ',' + TITLEBAR_BUTTONS + ' .k-icon,:input,a');\n            },\n            _shouldFocus: function (target) {\n                var active = activeElement(), element = this.wrapper;\n                return this.options.autoFocus && !$(active).is(element) && !this._actionable(target) && (!element.find(active).length || !element.find(target).length);\n            },\n            toFront: function (e) {\n                var that = this, wrapper = that.wrapper, currentWindow = wrapper[0], containmentContext = that.containment && !that._isPinned, zIndex = +wrapper.css(ZINDEX), originalZIndex = zIndex, target = e && e.target || null;\n                $(KWINDOW).each(function (i, element) {\n                    var windowObject = $(element), zIndexNew = windowObject.css(ZINDEX), contentElement = windowObject.children(KWINDOWCONTENT);\n                    if (!isNaN(zIndexNew)) {\n                        zIndex = Math.max(+zIndexNew, zIndex);\n                    }\n                    wrapper.data('isFront', element == currentWindow);\n                    if (element != currentWindow && contentElement.find('> .' + KCONTENTFRAME).length > 0) {\n                        contentElement.append(templates.overlay);\n                    }\n                });\n                if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                    wrapper.css(ZINDEX, zIndex + 2);\n                }\n                that.element.find('> .k-overlay').remove();\n                if (that._shouldFocus(target)) {\n                    setTimeout(function () {\n                        that.wrapper.focus();\n                    });\n                    var scrollTop = containmentContext ? that.containment.scrollTop() : $(window).scrollTop(), windowTop = parseInt(wrapper.position().top, 10);\n                    if (!that.options.pinned && windowTop > 0 && windowTop < scrollTop) {\n                        if (scrollTop > 0) {\n                            $(window).scrollTop(windowTop);\n                        } else {\n                            wrapper.css('top', scrollTop);\n                        }\n                    }\n                }\n                wrapper = null;\n                return that;\n            },\n            toggleMaximization: function () {\n                if (this._closing) {\n                    return this;\n                }\n                return this[this.options.isMaximized ? 'restore' : 'maximize']();\n            },\n            restore: function () {\n                var that = this;\n                var options = that.options;\n                var minHeight = options.minHeight;\n                var restoreOptions = that.restoreOptions;\n                var shouldRestrictTop;\n                var container = that.containment && !that._isPinned ? that.containment : $(document);\n                if (!options.isMaximized && !options.isMinimized) {\n                    return that;\n                }\n                if (minHeight && minHeight != Infinity) {\n                    that.wrapper.css('min-height', minHeight);\n                }\n                if (restoreOptions && !options.isMaximized) {\n                    restoreOptions.height = constrain(restoreOptions.height, that.options.minHeight, that.options.maxHeight);\n                    shouldRestrictTop = options.position.top + parseInt(restoreOptions.height, 10) > that.maxTop;\n                    if (shouldRestrictTop) {\n                        options.position.top = constrain(options.position.top, that.minTop, that.maxTop - parseInt(restoreOptions.height, 10));\n                        extend(restoreOptions, {\n                            left: options.position.left,\n                            top: options.position.top\n                        });\n                    }\n                }\n                that.wrapper.css({\n                    position: options.pinned ? 'fixed' : 'absolute',\n                    left: restoreOptions.left,\n                    top: restoreOptions.top,\n                    width: restoreOptions.width,\n                    height: restoreOptions.height\n                }).removeClass(MAXIMIZEDSTATE).find('.k-window-content,.k-resize-handle').show().end().find('.k-window-titlebar .k-i-window-restore').parent().remove().end().end().find(MINIMIZE_MAXIMIZE).parent().show().end().end().find(PIN_UNPIN).parent().show();\n                if (options.isMaximized) {\n                    that.wrapper.find('.k-i-window-maximize').parent().focus();\n                } else if (options.isMinimized) {\n                    that.wrapper.find('.k-i-window-minimize').parent().focus();\n                }\n                that.options.width = restoreOptions.width;\n                that.options.height = restoreOptions.height;\n                if (!that.options.modal.preventScroll) {\n                    that._enableDocumentScrolling();\n                }\n                if (that._containerScrollTop && that._containerScrollTop > 0) {\n                    container.scrollTop(that._containerScrollTop);\n                }\n                if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                    container.scrollLeft(that._containerScrollLeft);\n                }\n                options.isMaximized = options.isMinimized = false;\n                that.wrapper.removeAttr('aria-labelled-by');\n                that.resize();\n                return that;\n            },\n            _sizingAction: function (actionId, callback) {\n                var that = this, wrapper = that.wrapper, style = wrapper[0].style, options = that.options;\n                if (options.isMaximized || options.isMinimized) {\n                    return that;\n                }\n                that.restoreOptions = {\n                    width: style.width,\n                    height: style.height\n                };\n                wrapper.children(KWINDOWRESIZEHANDLES).hide().end().children(KWINDOWTITLEBAR).find(MINIMIZE_MAXIMIZE).parent().hide().eq(0).before(templates.action({ name: 'window-restore' }));\n                callback.call(that);\n                that.wrapper.children(KWINDOWTITLEBAR).find(PIN_UNPIN).parent().toggle(actionId !== 'maximize');\n                that.trigger(actionId);\n                wrapper.find('.k-i-window-restore').parent().focus();\n                return that;\n            },\n            maximize: function () {\n                this._sizingAction('maximize', function () {\n                    var that = this, wrapper = that.wrapper, containmentContext = this.containment && !that._isPinned, position = wrapper.position(), doc = $(document);\n                    extend(that.restoreOptions, {\n                        left: position.left + (containmentContext ? this.containment.scrollLeft() : 0),\n                        top: position.top + (containmentContext ? this.containment.scrollTop() : 0)\n                    });\n                    this._containerScrollTop = containmentContext ? this.containment.scrollTop() : doc.scrollTop();\n                    this._containerScrollLeft = containmentContext ? this.containment.scrollLeft() : doc.scrollLeft();\n                    that._stopDocumentScrolling();\n                    wrapper.css({\n                        top: containmentContext ? this.containment.scrollTop() : 0,\n                        left: containmentContext ? this.containment.scrollLeft() : 0,\n                        position: containmentContext ? 'absolute' : 'fixed'\n                    }).addClass(MAXIMIZEDSTATE);\n                    that.options.isMaximized = true;\n                    that._onDocumentResize();\n                });\n                return this;\n            },\n            _stopDocumentScrolling: function () {\n                var that = this;\n                var containment = that.containment;\n                if (containment && !that._isPinned) {\n                    that._storeOverflowRule(containment);\n                    containment.css(OVERFLOW, HIDDEN);\n                    that.wrapper.css({\n                        maxWidth: containment.innerWidth(),\n                        maxHeight: containment.innerHeight()\n                    });\n                    return;\n                }\n                var $body = $('body');\n                that._storeOverflowRule($body);\n                $body.css(OVERFLOW, HIDDEN);\n                var $html = $('html');\n                that._storeOverflowRule($html);\n                $html.css(OVERFLOW, HIDDEN);\n            },\n            _enableDocumentScrolling: function () {\n                var that = this;\n                var containment = that.containment;\n                if (containment && !that._isPinned) {\n                    that._restoreOverflowRule(containment);\n                    that.wrapper.css({\n                        maxWidth: containment.width,\n                        maxHeight: containment.height\n                    });\n                    return;\n                }\n                that._restoreOverflowRule($(document.body));\n                that._restoreOverflowRule($('html'));\n            },\n            _storeOverflowRule: function ($element) {\n                if (this._isOverflowStored($element)) {\n                    return;\n                }\n                var overflowRule = $element.get(0).style.overflow;\n                if (typeof overflowRule === 'string') {\n                    $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                }\n            },\n            _isOverflowStored: function ($element) {\n                return typeof $element.data(DATADOCOVERFLOWRULE) === 'string';\n            },\n            _restoreOverflowRule: function ($element) {\n                var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n                if (overflowRule !== null && overflowRule !== undefined) {\n                    $element.css(OVERFLOW, overflowRule);\n                    $element.removeData(DATADOCOVERFLOWRULE);\n                } else {\n                    $element.css(OVERFLOW, '');\n                }\n            },\n            isMaximized: function () {\n                return this.options.isMaximized;\n            },\n            minimize: function () {\n                this._sizingAction('minimize', function () {\n                    var that = this;\n                    that.wrapper.css({\n                        height: '',\n                        minHeight: ''\n                    });\n                    that.element.hide();\n                    that.options.isMinimized = true;\n                });\n                this.wrapper.attr('aria-labelled-by', this.element.attr('aria-labelled-by'));\n                this._updateBoundaries();\n                return this;\n            },\n            isMinimized: function () {\n                return this.options.isMinimized;\n            },\n            pin: function () {\n                var that = this, win = $(window), wrapper = that.wrapper, options = that.options, position = options.position, top = this.containment ? getPosition(wrapper[0]).top + toInt(this.containment, 'borderTopWidth') : toInt(wrapper, 'top'), left = this.containment ? getPosition(wrapper[0]).left + toInt(this.containment, 'borderLeftWidth') : toInt(wrapper, 'left');\n                if (!that.options.isMaximized) {\n                    position.top = top;\n                    position.left = left;\n                    if (that._scrollIsAppended && (!this.containment || this.containment.css('position') !== 'fixed')) {\n                        position.top -= win.scrollTop();\n                        position.left -= win.scrollLeft();\n                        that._scrollIsAppended = false;\n                    }\n                    wrapper.css(extend(position, { position: 'fixed' }));\n                    wrapper.children(KWINDOWTITLEBAR).find(KPIN).addClass('k-i-unpin').removeClass('k-i-pin');\n                    that._isPinned = true;\n                    that.options.pinned = true;\n                    if (this.containment) {\n                        options.maxWidth = options.maxHeight = Infinity;\n                        wrapper.css({\n                            maxWidth: '',\n                            maxHeight: ''\n                        });\n                    }\n                }\n            },\n            unpin: function () {\n                var that = this, win = $(window), wrapper = that.wrapper, options = that.options, position = that.options.position, containment = that.containment, top = parseInt(wrapper.css('top'), 10) + win.scrollTop(), left = parseInt(wrapper.css('left'), 10) + win.scrollLeft();\n                if (!that.options.isMaximized) {\n                    that._isPinned = false;\n                    that._scrollIsAppended = true;\n                    that.options.pinned = false;\n                    if (containment) {\n                        that._updateBoundaries();\n                        options.maxWidth = Math.min(containment.width, options.maxWidth);\n                        options.maxHeight = Math.min(containment.height - toInt(wrapper, 'padding-top'), options.maxHeight);\n                        wrapper.css({\n                            maxWidth: options.maxWidth,\n                            maxHeight: options.maxHeight\n                        });\n                        if (top < containment.position.top) {\n                            top = that.minTop;\n                        } else if (top > containment.position.top + containment.height) {\n                            top = that.maxTop;\n                        } else {\n                            top = top + containment.scrollTop() - (containment.position.top + toInt(containment, 'border-top-width'));\n                        }\n                        if (left < containment.position.left) {\n                            left = that.minLeft;\n                        } else if (left > containment.position.left + containment.width) {\n                            left = that.maxLeft;\n                        } else {\n                            left = left + containment.scrollLeft() - (containment.position.left + toInt(containment, 'border-left-width'));\n                        }\n                    }\n                    position.top = constrain(top, that.minTop, that.maxTop);\n                    position.left = constrain(left, that.minLeft, that.maxLeft);\n                    wrapper.css(extend(position, { position: '' }));\n                    wrapper.children(KWINDOWTITLEBAR).find(KUNPIN).addClass('k-i-pin').removeClass('k-i-unpin');\n                }\n            },\n            _onDocumentResize: function () {\n                var that = this, wrapper = that.wrapper, wnd = $(window), zoomLevel = kendo.support.zoomLevel(), contentBoxSizing = wrapper.css('box-sizing') == 'content-box', w, h;\n                if (!that.options.isMaximized) {\n                    return;\n                }\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, 'border-left-width') + toInt(wrapper, 'border-right-width') : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, 'border-top-width') + toInt(wrapper, 'border-bottom-width') : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, 'padding-top') : 0;\n                if (that.containment && !that._isPinned) {\n                    w = that.containment.innerWidth() - lrBorderWidth;\n                    h = that.containment.innerHeight() - (tbBorderWidth + paddingTop);\n                } else {\n                    w = wnd.width() / zoomLevel - lrBorderWidth;\n                    h = wnd.height() / zoomLevel - (tbBorderWidth + paddingTop);\n                }\n                wrapper.css({\n                    width: w,\n                    height: h\n                });\n                that.options.width = w;\n                that.options.height = h;\n                that.resize();\n            },\n            refresh: function (options) {\n                var that = this, initOptions = that.options, element = $(that.element), iframe, showIframe, url;\n                if (!isPlainObject(options)) {\n                    options = { url: options };\n                }\n                options = extend({}, initOptions.content, options);\n                showIframe = defined(initOptions.iframe) ? initOptions.iframe : options.iframe;\n                url = options.url;\n                if (url) {\n                    if (!defined(showIframe)) {\n                        showIframe = !isLocalUrl(url);\n                    }\n                    if (!showIframe) {\n                        that._ajaxRequest(options);\n                    } else {\n                        iframe = element.find('.' + KCONTENTFRAME)[0];\n                        if (iframe) {\n                            iframe.src = url || iframe.src;\n                        } else {\n                            element.html(templates.contentFrame(extend({}, initOptions, { content: options })));\n                        }\n                        element.find('.' + KCONTENTFRAME).unbind('load' + NS).on('load' + NS, proxy(this._triggerRefresh, this));\n                    }\n                } else {\n                    if (options.template) {\n                        that.content(template(options.template)({}));\n                    }\n                    that.trigger(REFRESH);\n                }\n                element.toggleClass('k-window-iframecontent', !!showIframe);\n                return that;\n            },\n            _triggerRefresh: function () {\n                this.trigger(REFRESH);\n            },\n            _ajaxComplete: function () {\n                clearTimeout(this._loadingIconTimeout);\n                this.wrapper.find(REFRESHICON).removeClass(LOADING);\n            },\n            _ajaxError: function (xhr, status) {\n                this.trigger(ERROR, {\n                    status: status,\n                    xhr: xhr\n                });\n            },\n            _ajaxSuccess: function (contentTemplate) {\n                return function (data) {\n                    var html = data;\n                    if (contentTemplate) {\n                        html = template(contentTemplate)(data || {});\n                    }\n                    this.content(html, data);\n                    this.element.prop('scrollTop', 0);\n                    this.trigger(REFRESH);\n                };\n            },\n            _showLoading: function () {\n                this.wrapper.find(REFRESHICON).addClass(LOADING);\n            },\n            _ajaxRequest: function (options) {\n                this._loadingIconTimeout = setTimeout(proxy(this._showLoading, this), 100);\n                $.ajax(extend({\n                    type: 'GET',\n                    dataType: 'html',\n                    cache: false,\n                    error: proxy(this._ajaxError, this),\n                    complete: proxy(this._ajaxComplete, this),\n                    success: proxy(this._ajaxSuccess(options.template), this)\n                }, options));\n            },\n            _destroy: function () {\n                if (this.resizing) {\n                    this.resizing.destroy();\n                }\n                if (this.dragging) {\n                    this.dragging.destroy();\n                }\n                this.wrapper.off(NS).children(KWINDOWCONTENT).off(NS).end().find('.k-resize-handle,.k-window-titlebar').off(NS);\n                $(window).off('resize' + NS + this._marker);\n                $(window).off(MODAL_NS);\n                $(window).off(NS);\n                clearTimeout(this._loadingIconTimeout);\n                Widget.fn.destroy.call(this);\n                this.unbind(undefined);\n                kendo.destroy(this.wrapper);\n                this._removeOverlay(true);\n            },\n            destroy: function () {\n                this._destroy();\n                this.wrapper.empty().remove();\n                this.wrapper = this.appendTo = this.element = $();\n            },\n            _createWindow: function () {\n                var contentHtml = this.element, options = this.options, iframeSrcAttributes, wrapper, isRtl = kendo.support.isRtl(contentHtml);\n                if (options.scrollable === false) {\n                    contentHtml.css('overflow', 'hidden');\n                }\n                wrapper = $(templates.wrapper(options));\n                iframeSrcAttributes = contentHtml.find('iframe:not(.k-content-frame)').map(function () {\n                    var src = this.getAttribute('src');\n                    this.src = '';\n                    return src;\n                });\n                wrapper.toggleClass('k-rtl', isRtl).attr('tabindex', 0).append(contentHtml).find('iframe:not(.k-content-frame)').each(function (index) {\n                    this.src = iframeSrcAttributes[index];\n                });\n                if (this.containment) {\n                    this.containment.prepend(wrapper);\n                } else if (this.appendTo) {\n                    wrapper.appendTo(this.appendTo);\n                }\n                wrapper.find('.k-window-title').css(isRtl ? 'left' : 'right', outerWidth(wrapper.find('.k-window-actions')) + 10);\n                contentHtml.css('visibility', '').show();\n                contentHtml.find('[data-role=editor]').each(function () {\n                    var editor = $(this).data('kendoEditor');\n                    if (editor) {\n                        editor.refresh();\n                    }\n                });\n                wrapper = contentHtml = null;\n            }\n        });\n        templates = {\n            wrapper: template('<div class=\\'k-widget k-window\\'></div>'),\n            action: template('<a role=\\'button\\' href=\\'\\\\#\\' class=\\'k-button k-flat k-button-icon k-window-action\\' aria-label=\\'#= name #\\'>' + '<span class=\\'k-icon k-i-#= name.toLowerCase() #\\'></span>' + '</a>'),\n            titlebar: template('<div class=\\'k-window-titlebar\\'>' + '<span class=\\'k-window-title\\'>#= title #</span>' + '<div class=\\'k-window-actions\\'></div>' + '</div>'),\n            overlay: '<div class=\\'k-overlay\\'></div>',\n            contentFrame: template('<iframe frameborder=\\'0\\' title=\\'#= title #\\' class=\\'' + KCONTENTFRAME + '\\' ' + 'src=\\'#= content.url #\\'>' + 'This page requires frames in order to show content' + '</iframe>'),\n            resizeHandle: template('<div class=\\'k-resize-handle k-resize-#= data #\\'></div>')\n        };\n        function WindowResizing(wnd) {\n            var that = this;\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: '>' + KWINDOWRESIZEHANDLES,\n                group: wnd.wrapper.id + '-resizing',\n                dragstart: proxy(that.dragstart, that),\n                drag: proxy(that.drag, that),\n                dragend: proxy(that.dragend, that)\n            });\n            that._draggable.userEvents.bind('press', proxy(that.addOverlay, that));\n            that._draggable.userEvents.bind('release', proxy(that.removeOverlay, that));\n        }\n        WindowResizing.prototype = {\n            addOverlay: function () {\n                this.owner.wrapper.append(templates.overlay);\n            },\n            removeOverlay: function () {\n                this.owner.wrapper.find(KOVERLAY).remove();\n            },\n            dragstart: function (e) {\n                var that = this;\n                var wnd = that.owner;\n                var wrapper = wnd.wrapper;\n                that._preventDragging = wnd.trigger(RESIZESTART);\n                if (that._preventDragging) {\n                    return;\n                }\n                that.elementPadding = parseInt(wrapper.css('padding-top'), 10);\n                that.initialPosition = kendo.getOffset(wrapper, 'position');\n                that.resizeDirection = e.currentTarget.prop('className').replace('k-resize-handle k-resize-', '');\n                that.initialSize = {\n                    width: wrapper.outerWidth(),\n                    height: wrapper.outerHeight()\n                };\n                wnd._updateBoundaries();\n                that.containerOffset = wnd.containment ? wnd.containment.position : kendo.getOffset(wnd.appendTo, 'position');\n                var offsetParent = wrapper.offsetParent();\n                if (offsetParent.is('html')) {\n                    that.containerOffset.top = that.containerOffset.left = 0;\n                } else {\n                    var marginTop = offsetParent.css('margin-top');\n                    var marginLeft = offsetParent.css('margin-left');\n                    var hasMargin = !zero.test(marginTop) || !zero.test(marginLeft);\n                    if (hasMargin) {\n                        var wrapperPosition = getPosition(wrapper[0]);\n                        var relativeElMarginLeft = wrapperPosition.left - that.containerOffset.left - that.initialPosition.left;\n                        var relativeElMarginTop = wrapperPosition.top - that.containerOffset.top - that.initialPosition.top;\n                        that._relativeElMarginLeft = relativeElMarginLeft > 1 ? relativeElMarginLeft : 0;\n                        that._relativeElMarginTop = relativeElMarginTop > 1 ? relativeElMarginTop : 0;\n                        that.initialPosition.left += that._relativeElMarginLeft;\n                        that.initialPosition.top += that._relativeElMarginTop;\n                    }\n                }\n                wrapper.children(KWINDOWRESIZEHANDLES).not(e.currentTarget).hide();\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n            drag: function (e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                var that = this, wnd = that.owner, wrapper = wnd.wrapper, options = wnd.options, position = options.position, direction = that.resizeDirection, containerOffset = that.containerOffset, initialPosition = that.initialPosition, initialSize = that.initialSize, containmentContext = wnd.containment && !wnd._isPinned, rtl = kendo.support.isRtl(wnd.containment), leftRtlOffset = containmentContext && rtl && wnd.containment.innerWidth() > wnd.containment.width ? kendo.support.scrollbar() : 0, scrollOffset = containmentContext ? {\n                        top: wnd.containment.scrollTop(),\n                        left: wnd.containment.scrollLeft()\n                    } : {\n                        top: 0,\n                        left: 0\n                    }, newWidth, newHeight, windowBottom, windowRight, x = Math.max(e.x.location, 0), y = Math.max(e.y.location, 0);\n                if (direction.indexOf('e') >= 0) {\n                    if (wnd.containment && x - initialSize.width >= wnd.maxLeft - scrollOffset.left + containerOffset.left + leftRtlOffset) {\n                        newWidth = wnd.maxLeft + leftRtlOffset - initialPosition.left + initialSize.width - scrollOffset.left;\n                    } else {\n                        newWidth = x - initialPosition.left - containerOffset.left;\n                    }\n                    wrapper.width(constrain(newWidth, options.minWidth, options.maxWidth));\n                } else if (direction.indexOf('w') >= 0) {\n                    windowRight = initialPosition.left + initialSize.width + containerOffset.left;\n                    newWidth = constrain(windowRight - x, options.minWidth, options.maxWidth);\n                    position.left = windowRight - newWidth - containerOffset.left - leftRtlOffset - (that._relativeElMarginLeft || 0) + scrollOffset.left;\n                    if (wnd.containment && position.left <= wnd.minLeft) {\n                        position.left = wnd.minLeft;\n                        newWidth = constrain(windowRight - leftRtlOffset - position.left - containerOffset.left + scrollOffset.left, options.minWidth, options.maxWidth);\n                    }\n                    wrapper.css({\n                        left: position.left,\n                        width: newWidth\n                    });\n                }\n                var newWindowTop = y;\n                if (wnd.options.pinned) {\n                    newWindowTop -= $(window).scrollTop();\n                }\n                if (direction.indexOf('s') >= 0) {\n                    newHeight = newWindowTop - initialPosition.top - that.elementPadding - containerOffset.top;\n                    if (newWindowTop - initialSize.height - that.elementPadding >= wnd.maxTop + containerOffset.top - scrollOffset.top) {\n                        newHeight = wnd.maxTop - initialPosition.top + initialSize.height - scrollOffset.top;\n                    }\n                    wrapper.height(constrain(newHeight, options.minHeight, options.maxHeight));\n                } else if (direction.indexOf('n') >= 0) {\n                    windowBottom = initialPosition.top + initialSize.height + containerOffset.top;\n                    newHeight = constrain(windowBottom - newWindowTop, options.minHeight, options.maxHeight);\n                    position.top = windowBottom - newHeight - containerOffset.top - (that._relativeElMarginTop || 0) + scrollOffset.top;\n                    if (position.top <= wnd.minTop && wnd.containment) {\n                        position.top = wnd.minTop;\n                        newHeight = constrain(windowBottom - position.top - containerOffset.top + scrollOffset.top, options.minHeight, options.maxHeight);\n                    }\n                    wrapper.css({\n                        top: position.top,\n                        height: newHeight\n                    });\n                }\n                if (newWidth) {\n                    wnd.options.width = newWidth + 'px';\n                }\n                if (newHeight) {\n                    wnd.options.height = newHeight + 'px';\n                }\n                wnd.resize();\n            },\n            dragend: function (e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                var that = this, wnd = that.owner, wrapper = wnd.wrapper;\n                wrapper.children(KWINDOWRESIZEHANDLES).not(e.currentTarget).show();\n                $(BODY).css(CURSOR, '');\n                if (wnd.touchScroller) {\n                    wnd.touchScroller.reset();\n                }\n                if (e.keyCode == 27) {\n                    wrapper.css(that.initialPosition).css(that.initialSize);\n                }\n                wnd.trigger(RESIZEEND);\n                return false;\n            },\n            destroy: function () {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n                this._draggable = this.owner = null;\n            }\n        };\n        function WindowDragging(wnd, dragHandle) {\n            var that = this;\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: dragHandle,\n                group: wnd.wrapper.id + '-moving',\n                dragstart: proxy(that.dragstart, that),\n                drag: proxy(that.drag, that),\n                dragend: proxy(that.dragend, that),\n                dragcancel: proxy(that.dragcancel, that)\n            });\n            that._draggable.userEvents.stopPropagation = false;\n        }\n        WindowDragging.prototype = {\n            dragstart: function (e) {\n                var wnd = this.owner, draggable = wnd.options.draggable, element = wnd.element, actions = element.find('.k-window-actions'), containerOffset = kendo.getOffset(wnd.appendTo);\n                this._preventDragging = wnd.trigger(DRAGSTART) || !draggable;\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n                wnd.initialWindowPosition = kendo.getOffset(wnd.wrapper, 'position');\n                wnd.initialPointerPosition = {\n                    left: wnd.options.position.left,\n                    top: wnd.options.position.top\n                };\n                wnd.startPosition = {\n                    left: e.x.client - wnd.initialWindowPosition.left,\n                    top: e.y.client - wnd.initialWindowPosition.top\n                };\n                wnd._updateBoundaries();\n                if (!wnd.containment) {\n                    if (actions.length > 0) {\n                        wnd.minLeft = outerWidth(actions) + parseInt(actions.css('right'), 10) - outerWidth(element);\n                    } else {\n                        wnd.minLeft = 20 - outerWidth(element);\n                    }\n                    wnd.minLeft -= containerOffset.left;\n                    wnd.minTop = -containerOffset.top;\n                }\n                wnd.wrapper.append(templates.overlay).children(KWINDOWRESIZEHANDLES).hide();\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n            drag: function (e) {\n                var wnd = this.owner;\n                var position = wnd.options.position;\n                var axis = wnd.options.draggable.axis;\n                var left;\n                var top;\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n                if (!axis || axis.toLowerCase() === 'x') {\n                    left = e.x.client - wnd.startPosition.left;\n                    if (wnd.containment && !wnd._isPinned) {\n                        left += wnd.containment.scrollLeft();\n                    }\n                    position.left = constrain(left, wnd.minLeft, wnd.maxLeft);\n                }\n                if (!axis || axis.toLowerCase() === 'y') {\n                    top = e.y.client - wnd.startPosition.top;\n                    if (wnd.containment && !wnd._isPinned) {\n                        top += wnd.containment.scrollTop();\n                    }\n                    position.top = constrain(top, wnd.minTop, wnd.maxTop);\n                }\n                if (kendo.support.transforms) {\n                    $(wnd.wrapper).css('transform', 'translate(' + (position.left - wnd.initialPointerPosition.left) + 'px, ' + (position.top - wnd.initialPointerPosition.top) + 'px)');\n                } else {\n                    $(wnd.wrapper).css(position);\n                }\n            },\n            _finishDrag: function () {\n                var wnd = this.owner;\n                wnd.wrapper.children(KWINDOWRESIZEHANDLES).toggle(!wnd.options.isMinimized).end().find(KOVERLAY).remove();\n                $(BODY).css(CURSOR, '');\n            },\n            dragcancel: function (e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                this._finishDrag();\n                e.currentTarget.closest(KWINDOW).css(this.owner.initialWindowPosition);\n            },\n            dragend: function () {\n                var wnd = this.owner;\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n                $(wnd.wrapper).css(wnd.options.position).css('transform', '');\n                this._finishDrag();\n                wnd.trigger(DRAGEND);\n                return false;\n            },\n            destroy: function () {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n                this._draggable = this.owner = null;\n            }\n        };\n        kendo.ui.plugin(Window);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}