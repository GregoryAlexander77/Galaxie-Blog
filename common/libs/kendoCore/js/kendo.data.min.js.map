{"version":3,"sources":["kendo.data.js"],"names":["f","define","$","undefined","eventHandler","context","type","field","prefix","e","key","event","CHANGE","_notifyChange","trigger","ownKeys","value","ignoreObjectKeys","props","Object","getOwnPropertyNames","forEach","prop","indexOf","objectKeys","push","getPrototypeOf","equal","x","y","xtype","ytype","getTime","getFieldByName","obj","name","fieldName","isPlainObject","Query","data","this","normalizeSort","dir","descriptor","STRING","descriptors","isArray","grep","d","sortFields","sorts","i","sortObject","length","index","normalizeOperator","expression","idx","filter","operator","filters","operatorMap","toLowerCase","normalizeFilter","isEmptyObject","logic","compareDescriptor","f1","f2","normalizeDescriptor","fieldComparer","a","b","compareFilters","expr1","expr2","filters1","filters2","slice","sort","normalizeAggregate","expressions","normalizeGroup","compare","skipItemSorting","map","aggregates","normalizeGroupWithoutCompare","anyGroupDescriptorHasCompare","groupDescriptors","isFunction","groupValueComparer","calculateAggregate","accumulator","item","state","aggr","functionName","len","aggregate","functions","kendo","accessor","isNumber","val","isNaN","isDate","toJSON","array","result","Array","serializeRecords","getters","modelInstance","originalFieldNames","fieldNames","record","getter","originalName","setters","setter","convertRecords","_parse","convertGroup","items","hasSubgroups","wrapDataAccess","originalFunction","model","converter","wrapDataAccessBase","toString","call","ObservableArray","fillLastGroup","originalGroup","newGroup","currOriginal","currentNew","apply","mergeGroups","target","dest","skip","take","group","concat","splice","flatGroups","groups","indexFunction","groupIndex","itemIndex","groupsLength","indexFn","flattenGroups","at","wrapGroupItems","LazyObservableArray","_events","eachGroupItems","func","replaceInRanges","ranges","observable","replaceInRange","replaceWithObservable","view","serverGrouping","viewIndex","removeModel","dataItem","uid","indexOfPristineModel","idField","id","_defaultId","indexOfModel","comparer","fieldNameFromModel","fields","from","convertFilterDescriptorsField","convertDescriptorsField","inferSelect","select","options","firstField","secondField","optgroup","option","parentNode","disabled","label","text","attributes","specified","inferTable","table","fieldIndex","cells","cell","empty","tbody","tBodies","rows","fieldCount","nodeName","innerHTML","dataMethod","_data","DataSource","fn","arguments","_attachBubbleHandlers","inferList","list","elements","collection","tagName","add","find","textChild","className","children","textField","urlField","spriteCssClassField","imageUrlField","_loaded","eq","firstChild","attr","nodeType","nodeValue","trim","replace","hasChildren","ObservableObject","parsers","defaultValues","Model","Comparer","StableComparer","operators","LocalTransport","RemoteTransport","Cache","DataReader","Transport","Node","HierarchicalDataSource","Buffer","BatchBuffer","extend","proxy","ajax","each","noop","window","Observable","Class","FUNCTION","ASCENDING","CREATE","READ","UPDATE","DESTROY","SYNC","GET","ERROR","REQUESTSTART","PROGRESS","REQUESTEND","crud","identity","o","stringify","math","Math","join","pop","shift","unshift","stableSort","support","dateRegExp","init","that","wrapAll","serializeFunctions","json","parent","source","wrap","object","bind","node","action","omitChangeEvent","howMany","unbind","callback","thisArg","reduce","reduceRight","every","some","remove","Symbol","iterator","prototype","events","_parent","member","keys","_handlers","charAt","guid","shouldSerialize","hasOwnProperty","get","_set","paths","path","composite","split","set","isSetPrevented","current","change","isObservableArray","isDataSource","number","parseFloat","date","parseDate","boolean","string","default","Date","defaults","_initializers","dirty","dirtyFields","parse","editable","accept","isNew","base","proto","functionFields","nullable","defaultValue","selector","localeCompare","create","combine","comparers","asc","valueA","valueB","__position","desc","quote","str","JSON","textOp","impl","ignore","accentFoldingFiltering","toLocaleLowerCase","op","exec","getMatchRegexp","pattern","rx","esc","ch","neq","gt","gte","lt","lte","startswith","doesnotstartwith","endswith","n","doesnotendwith","contains","doesnotcontain","matches","substring","doesnotmatch","isempty","isnotempty","isnull","isnotnull","isnullorempty","isnotnullorempty","filterExpr","expr","and","or","fieldFunctions","operatorFunctions","match","ignoreCase","==","equals","isequalto","equalto","!=","ne","notequals","isnotequalto","notequalto","notequal","<","islessthan","lessthan","less","<=","le","islessthanorequalto","lessthanequal",">","isgreaterthan","greaterthan","greater",">=","isgreaterthanorequalto","greaterthanequal","ge","notsubstringof","toArray","range","count","order","inPlace","orderBy","orderByDescending","compiled","predicate","Function","allData","groupPaging","groupAllData","itemCount","subgroupCount","groupBy","sorted","groupValue","currentValue","_sortForGrouping","_sortGroups","sum","average","max","min","process","customGroupSort","query","groupDescriptorsWithoutCompare","normalizedSort","groupDescriptorsWithoutSort","total","filterCallback","groupDescriptor","read","success","update","destroy","parameterMap","url","cache","submit","setup","error","parameters","operation","_store","clear","store","inmemory","schema","dataFunction","groupsFunction","serializeFunction","serializeGetters","modelBase","_dataAccessFunction","serialize","fromName","_wrapDataAccessBase","errors","_map","_prefetch","_pristineData","_ranges","_view","_pristineTotal","_destroyed","_pageSize","pageSize","_page","page","_sort","_sortFields","_filter","_group","_aggregate","_total","_groupPaging","_groupsState","_shouldDetachObservableParents","transport","pushCreate","_pushCreate","pushUpdate","_pushUpdate","pushDestroy","_pushDestroy","offlineStorage","_storage","getItem","localStorage","setItem","reader","readers","_detachObservableParents","_observe","_online","serverSorting","serverPaging","serverFiltering","serverAggregates","batch","inPlaceSort","clone","online","sync","Deferred","resolve","promise","offlineData","_isServerGrouped","_isServerGroupPaged","_isGroupPaged","_push","_readData","_flatData","useRanges","getByUid","_getByUid","dataItems","_storeData","_addRange","_process","_observeView","flatView","insert","_createNewModel","_wrapInEmptyGroup","_insertModelInRange","pushInsert","pushed","autoSync","pristine","rangeSpan","_getCurrentRangeSpan","last","pristineData","_updatePristineForModel","_removeItems","removePristine","shouldRemovePristine","destroyed","found","_eachItem","_removePristineForModel","hasGroups","_removeModelFromRanges","created","updated","promises","_sendSubmit","_send","when","then","_accept","_syncEnd","_change","cancelChanges","_cancelModel","_changesCanceled","_markOfflineUpdatesAsDirty","__state__","hasChanges","models","response","serverGroup","_handleCustomErrors","values","_executeOnPristineForModel","deepExtend","_eachPristineItem","_pristineForModel","_modelCanceled","_submit","status","reject","deferred","_promise","method","converted","params","_params","_queueRequest","isPrevented","_dequeueRequest","args","_readAggregates","replaceSubset","itemIds","j","_serverGroupsTotal","_aggregateResult","_skip","endless","_changeHandler","updatePristine","end","start","timestamp","_timeStamp","outerStart","outerEnd","_sortRanges","_groupsFlat","_appendToGroupsFlat","_updateOuterRangesLength","_getGroupByUid","xhr","errorThrown","_requestInProgress","_pending","_shouldWrap","arrayType","_updateTotalForAction","parseInt","handler","first","_calculateAggregates","_take","currentRangeStart","_clearEmptyGroups","_queryProcess","dataToAggregate","_setView","_setFilterTotal","_mergeState","_currentRangeStart","moreItemsCount","remote","_hasExpandedSubGroups","_findGroupedRange","parents","itemsLength","hasNotRequestedItems","groupCount","itemsToSkip","taken","getGroupSubGroupCount","_fetchingGroupItems","skipped","getGroupItems","includeParents","excludeHeader","currentItems","subgroups","_composeItemsFilter","floor","findSubgroups","clearTimeout","_timeout","setTimeout","_groupItemsSuccessHandler","g","includeSubGroupCount","_subGroupCountSuccessHandler","totalField","temp","_updateRangePristineData","_currentRequestTimeStamp","_skipRequestsInProgress","indexOfCurrentGroup","currentGroup","dataLength","indexes","rangesLength","_containsSubGroup","_cloneGroup","subgroup","currentSubGroup","filterTotal","setDefaultValue","fetch","_query","done","next","totalPages","prev","_pageableQueryOptions","round","getGroupsFlat","groupsTotal","includeExpanded","_calculateGroupsTotal","itemsField","ignoreState","_groupsTotal","countGroupRange","_emptyAggregates","ceil","inRange","_findRange","lastRange","firstItemUid","enableRequestsInProgress","pageSkip","size","_originalPageSkip","_originalSize","_adjustPageSkip","_groupRangeExists","_rangeExists","prefetch","_processRangeData","skipIdx","takeIdx","startIndex","endIndex","rangeData","rangeEnd","processed","flatData","prevRangeEnd","currentDataLength","groupMapOptions","isGroupPaged","startField","endField","_mergeGroups","_getRangesMismatch","mismatch","prevGroup","eventData","paging","sorting","filtering","_omitPrefetch","_prefetchSuccessHandler","force","_multiplePrefetch","prevRange","_getPrevRange","_getNextRange","availableItemsCount","_removeModelFromRange","_updateRangesLength","rangeLength","mismatchFound","mismatchLength","lengthDifference","abs","dataSource","transportOptions","transports","schemas","logToConsole","hasChildrenObject","childrenField","childrenOptions","_childrenOptions","_initChildren","_updateChildrenField","append","loaded","level","_childrenLoaded","load","one","_matchFilter","_hierarchicalFilter","_markHierarchicalQuery","_updateHierarchicalFilter","_find","_dataSource","viewSize","disablePrefetch","_prefetching","buffer","_reset","_syncWithDataSource","setViewSize","_recalculate","itemPresent","dataOffset","prefetchThreshold","midPageThreshold","nextMidRange","nextPageThreshold","nextFullRange","pullBackThreshold","offset","previousMidRange","previousFullRange","_goToRange","nextRange","syncDataSource","prefetchOffset","expanding","_expanding","_syncPending","_firstItemUid","batchSize","batchBuffer","endreached","prefetching","prefetched","reset","resize","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.data.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.data', [\n        'kendo.core',\n        'kendo.data.odata',\n        'kendo.data.xml'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'data',\n        name: 'Data source',\n        category: 'framework',\n        description: 'Powerful component for using local and remote data.Fully supports CRUD, Sorting, Paging, Filtering, Grouping, and Aggregates.',\n        depends: ['core'],\n        features: [\n            {\n                id: 'data-odata',\n                name: 'OData',\n                description: 'Support for accessing Open Data Protocol (OData) services.',\n                depends: ['data.odata']\n            },\n            {\n                id: 'data-signalr',\n                name: 'SignalR',\n                description: 'Support for binding to SignalR hubs.',\n                depends: ['data.signalr']\n            },\n            {\n                id: 'data-XML',\n                name: 'XML',\n                description: 'Support for binding to XML.',\n                depends: ['data.xml']\n            }\n        ]\n    };\n    (function ($, undefined) {\n        var extend = $.extend, proxy = $.proxy, isPlainObject = $.isPlainObject, isEmptyObject = $.isEmptyObject, isArray = $.isArray, grep = $.grep, ajax = $.ajax, map, each = $.each, noop = $.noop, kendo = window.kendo, isFunction = kendo.isFunction, Observable = kendo.Observable, Class = kendo.Class, STRING = 'string', FUNCTION = 'function', ASCENDING = 'asc', CREATE = 'create', READ = 'read', UPDATE = 'update', DESTROY = 'destroy', CHANGE = 'change', SYNC = 'sync', GET = 'get', ERROR = 'error', REQUESTSTART = 'requestStart', PROGRESS = 'progress', REQUESTEND = 'requestEnd', crud = [\n                CREATE,\n                READ,\n                UPDATE,\n                DESTROY\n            ], identity = function (o) {\n                return o;\n            }, getter = kendo.getter, stringify = kendo.stringify, math = Math, push = [].push, join = [].join, pop = [].pop, splice = [].splice, shift = [].shift, slice = [].slice, unshift = [].unshift, toString = {}.toString, stableSort = kendo.support.stableSort, dateRegExp = /^\\/Date\\((.*?)\\)\\/$/, objectKeys = [];\n        var ObservableArray = Observable.extend({\n            init: function (array, type) {\n                var that = this;\n                that.type = type || ObservableObject;\n                Observable.fn.init.call(that);\n                that.length = array.length;\n                that.wrapAll(array, that);\n            },\n            at: function (index) {\n                return this[index];\n            },\n            toJSON: function (serializeFunctions) {\n                var idx, length = this.length, value, json = new Array(length);\n                for (idx = 0; idx < length; idx++) {\n                    value = this[idx];\n                    if (value instanceof ObservableObject) {\n                        value = value.toJSON(serializeFunctions);\n                    }\n                    json[idx] = value;\n                }\n                return json;\n            },\n            parent: noop,\n            wrapAll: function (source, target) {\n                var that = this, idx, length, parent = function () {\n                        return that;\n                    };\n                target = target || [];\n                for (idx = 0, length = source.length; idx < length; idx++) {\n                    target[idx] = that.wrap(source[idx], parent);\n                }\n                return target;\n            },\n            wrap: function (object, parent) {\n                var that = this, observable;\n                if (object !== null && toString.call(object) === '[object Object]') {\n                    observable = object instanceof that.type || object instanceof Model;\n                    if (!observable) {\n                        object = object instanceof ObservableObject ? object.toJSON() : object;\n                        object = new that.type(object);\n                    }\n                    object.parent = parent;\n                    object.bind(CHANGE, function (e) {\n                        that.trigger(CHANGE, {\n                            field: e.field,\n                            node: e.node,\n                            index: e.index,\n                            items: e.items || [this],\n                            action: e.node ? e.action || 'itemloaded' : 'itemchange'\n                        });\n                    });\n                }\n                return object;\n            },\n            push: function () {\n                var index = this.length, items = this.wrapAll(arguments), result;\n                result = push.apply(this, items);\n                if (!this.omitChangeEvent) {\n                    this.trigger(CHANGE, {\n                        action: 'add',\n                        index: index,\n                        items: items\n                    });\n                }\n                return result;\n            },\n            slice: slice,\n            sort: [].sort,\n            join: join,\n            pop: function () {\n                var length = this.length, result = pop.apply(this);\n                if (length) {\n                    this.trigger(CHANGE, {\n                        action: 'remove',\n                        index: length - 1,\n                        items: [result]\n                    });\n                }\n                return result;\n            },\n            splice: function (index, howMany, item) {\n                var items = this.wrapAll(slice.call(arguments, 2)), result, i, len;\n                result = splice.apply(this, [\n                    index,\n                    howMany\n                ].concat(items));\n                if (result.length) {\n                    this.trigger(CHANGE, {\n                        action: 'remove',\n                        index: index,\n                        items: result\n                    });\n                    for (i = 0, len = result.length; i < len; i++) {\n                        if (result[i] && result[i].children) {\n                            result[i].unbind(CHANGE);\n                        }\n                    }\n                }\n                if (item) {\n                    this.trigger(CHANGE, {\n                        action: 'add',\n                        index: index,\n                        items: items\n                    });\n                }\n                return result;\n            },\n            shift: function () {\n                var length = this.length, result = shift.apply(this);\n                if (length) {\n                    this.trigger(CHANGE, {\n                        action: 'remove',\n                        index: 0,\n                        items: [result]\n                    });\n                }\n                return result;\n            },\n            unshift: function () {\n                var items = this.wrapAll(arguments), result;\n                result = unshift.apply(this, items);\n                this.trigger(CHANGE, {\n                    action: 'add',\n                    index: 0,\n                    items: items\n                });\n                return result;\n            },\n            indexOf: function (item) {\n                var that = this, idx, length;\n                for (idx = 0, length = that.length; idx < length; idx++) {\n                    if (that[idx] === item) {\n                        return idx;\n                    }\n                }\n                return -1;\n            },\n            forEach: function (callback, thisArg) {\n                var idx = 0;\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    callback.call(context, this[idx], idx, this);\n                }\n            },\n            map: function (callback, thisArg) {\n                var idx = 0;\n                var result = [];\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    result[idx] = callback.call(context, this[idx], idx, this);\n                }\n                return result;\n            },\n            reduce: function (callback) {\n                var idx = 0, result, length = this.length;\n                if (arguments.length == 2) {\n                    result = arguments[1];\n                } else if (idx < length) {\n                    result = this[idx++];\n                }\n                for (; idx < length; idx++) {\n                    result = callback(result, this[idx], idx, this);\n                }\n                return result;\n            },\n            reduceRight: function (callback) {\n                var idx = this.length - 1, result;\n                if (arguments.length == 2) {\n                    result = arguments[1];\n                } else if (idx > 0) {\n                    result = this[idx--];\n                }\n                for (; idx >= 0; idx--) {\n                    result = callback(result, this[idx], idx, this);\n                }\n                return result;\n            },\n            filter: function (callback, thisArg) {\n                var idx = 0;\n                var result = [];\n                var item;\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (callback.call(context, item, idx, this)) {\n                        result[result.length] = item;\n                    }\n                }\n                return result;\n            },\n            find: function (callback, thisArg) {\n                var idx = 0;\n                var item;\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (callback.call(context, item, idx, this)) {\n                        return item;\n                    }\n                }\n            },\n            every: function (callback, thisArg) {\n                var idx = 0;\n                var item;\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (!callback.call(context, item, idx, this)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            some: function (callback, thisArg) {\n                var idx = 0;\n                var item;\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (callback.call(context, item, idx, this)) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            remove: function (item) {\n                var idx = this.indexOf(item);\n                if (idx !== -1) {\n                    this.splice(idx, 1);\n                }\n            },\n            empty: function () {\n                this.splice(0, this.length);\n            }\n        });\n        if (typeof Symbol !== 'undefined' && Symbol.iterator && !ObservableArray.prototype[Symbol.iterator]) {\n            ObservableArray.prototype[Symbol.iterator] = [][Symbol.iterator];\n        }\n        var LazyObservableArray = ObservableArray.extend({\n            init: function (data, type, events) {\n                Observable.fn.init.call(this);\n                this.type = type || ObservableObject;\n                if (events) {\n                    this._events = events;\n                }\n                for (var idx = 0; idx < data.length; idx++) {\n                    this[idx] = data[idx];\n                }\n                this.length = idx;\n                this._parent = proxy(function () {\n                    return this;\n                }, this);\n            },\n            at: function (index) {\n                var item = this[index];\n                if (!(item instanceof this.type)) {\n                    item = this[index] = this.wrap(item, this._parent);\n                } else {\n                    item.parent = this._parent;\n                }\n                return item;\n            }\n        });\n        function eventHandler(context, type, field, prefix) {\n            return function (e) {\n                var event = {}, key;\n                for (key in e) {\n                    event[key] = e[key];\n                }\n                if (prefix) {\n                    event.field = field + '.' + e.field;\n                } else {\n                    event.field = field;\n                }\n                if (type == CHANGE && context._notifyChange) {\n                    context._notifyChange(event);\n                }\n                context.trigger(type, event);\n            };\n        }\n        function ownKeys(value, ignoreObjectKeys) {\n            var props = [];\n            value = value || {};\n            while (value) {\n                Object.getOwnPropertyNames(value).forEach(function (prop) {\n                    if (props.indexOf(prop) === -1 && (!ignoreObjectKeys || objectKeys.indexOf(prop) < 0)) {\n                        props.push(prop);\n                    }\n                });\n                value = Object.getPrototypeOf(value);\n            }\n            return props;\n        }\n        objectKeys = ownKeys({}, false);\n        var ObservableObject = Observable.extend({\n            init: function (value) {\n                var that = this, member, keys = ownKeys(value, true), parent = function () {\n                        return that;\n                    };\n                Observable.fn.init.call(this);\n                this._handlers = {};\n                keys.forEach(function (field) {\n                    member = value[field];\n                    if (typeof member === 'object' && member && !member.getTime && field.charAt(0) != '_') {\n                        member = that.wrap(member, field, parent);\n                    }\n                    that[field] = member;\n                });\n                that.uid = kendo.guid();\n            },\n            shouldSerialize: function (field, serializeFunctions) {\n                return this.hasOwnProperty(field) && field !== '_handlers' && field !== '_events' && (serializeFunctions && serializeFunctions[field] || typeof this[field] !== FUNCTION) && field !== 'uid';\n            },\n            forEach: function (f) {\n                for (var i in this) {\n                    if (this.shouldSerialize(i)) {\n                        f(this[i], i);\n                    }\n                }\n            },\n            toJSON: function (serializeFunctions) {\n                var result = {}, value, field;\n                for (field in this) {\n                    if (this.shouldSerialize(field, serializeFunctions)) {\n                        value = this[field];\n                        if (value instanceof ObservableObject || value instanceof ObservableArray) {\n                            value = value.toJSON(serializeFunctions);\n                        }\n                        result[field] = value;\n                    }\n                }\n                return result;\n            },\n            get: function (field) {\n                var that = this, result;\n                that.trigger(GET, { field: field });\n                if (field === 'this') {\n                    result = that;\n                } else {\n                    result = kendo.getter(field, true)(that);\n                }\n                return result;\n            },\n            _set: function (field, value) {\n                var that = this;\n                var composite = field.indexOf('.') >= 0;\n                if (composite) {\n                    var paths = field.split('.'), path = '';\n                    while (paths.length > 1) {\n                        path += paths.shift();\n                        var obj = kendo.getter(path, true)(that);\n                        if (obj instanceof ObservableObject) {\n                            obj.set(paths.join('.'), value);\n                            return composite;\n                        }\n                        path += '.';\n                    }\n                }\n                kendo.setter(field)(that, value);\n                return composite;\n            },\n            set: function (field, value) {\n                var that = this, isSetPrevented = false, composite = field.indexOf('.') >= 0, current = kendo.getter(field, true)(that);\n                if (current !== value) {\n                    if (current instanceof Observable && this._handlers[field]) {\n                        if (this._handlers[field].get) {\n                            current.unbind(GET, this._handlers[field].get);\n                        }\n                        current.unbind(CHANGE, this._handlers[field].change);\n                    }\n                    isSetPrevented = that.trigger('set', {\n                        field: field,\n                        value: value\n                    });\n                    if (!isSetPrevented) {\n                        if (!composite) {\n                            value = that.wrap(value, field, function () {\n                                return that;\n                            });\n                        }\n                        if (!that._set(field, value) || field.indexOf('(') >= 0 || field.indexOf('[') >= 0) {\n                            that.trigger(CHANGE, { field: field });\n                        }\n                    }\n                }\n                return isSetPrevented;\n            },\n            parent: noop,\n            wrap: function (object, field, parent) {\n                var that = this;\n                var get;\n                var change;\n                var type = toString.call(object);\n                if (object != null && (type === '[object Object]' || type === '[object Array]')) {\n                    var isObservableArray = object instanceof ObservableArray;\n                    var isDataSource = object instanceof DataSource;\n                    if (type === '[object Object]' && !isDataSource && !isObservableArray) {\n                        if (!(object instanceof ObservableObject)) {\n                            object = new ObservableObject(object);\n                        }\n                        get = eventHandler(that, GET, field, true);\n                        object.bind(GET, get);\n                        change = eventHandler(that, CHANGE, field, true);\n                        object.bind(CHANGE, change);\n                        that._handlers[field] = {\n                            get: get,\n                            change: change\n                        };\n                    } else if (type === '[object Array]' || isObservableArray || isDataSource) {\n                        if (!isObservableArray && !isDataSource) {\n                            object = new ObservableArray(object);\n                        }\n                        change = eventHandler(that, CHANGE, field, false);\n                        object.bind(CHANGE, change);\n                        that._handlers[field] = { change: change };\n                    }\n                    object.parent = parent;\n                }\n                return object;\n            }\n        });\n        function equal(x, y) {\n            if (x === y) {\n                return true;\n            }\n            var xtype = $.type(x), ytype = $.type(y), field;\n            if (xtype !== ytype) {\n                return false;\n            }\n            if (xtype === 'date') {\n                return x.getTime() === y.getTime();\n            }\n            if (xtype !== 'object' && xtype !== 'array') {\n                return false;\n            }\n            for (field in x) {\n                if (!equal(x[field], y[field])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        var parsers = {\n            'number': function (value) {\n                if (typeof value === STRING && value.toLowerCase() === 'null') {\n                    return null;\n                }\n                return kendo.parseFloat(value);\n            },\n            'date': function (value) {\n                if (typeof value === STRING && value.toLowerCase() === 'null') {\n                    return null;\n                }\n                return kendo.parseDate(value);\n            },\n            'boolean': function (value) {\n                if (typeof value === STRING) {\n                    if (value.toLowerCase() === 'null') {\n                        return null;\n                    } else {\n                        return value.toLowerCase() === 'true';\n                    }\n                }\n                return value != null ? !!value : value;\n            },\n            'string': function (value) {\n                if (typeof value === STRING && value.toLowerCase() === 'null') {\n                    return null;\n                }\n                return value != null ? value + '' : value;\n            },\n            'default': function (value) {\n                return value;\n            }\n        };\n        var defaultValues = {\n            'string': '',\n            'number': 0,\n            'date': new Date(),\n            'boolean': false,\n            'default': ''\n        };\n        function getFieldByName(obj, name) {\n            var field, fieldName;\n            for (fieldName in obj) {\n                field = obj[fieldName];\n                if (isPlainObject(field) && field.field && field.field === name) {\n                    return field;\n                } else if (field === name) {\n                    return field;\n                }\n            }\n            return null;\n        }\n        var Model = ObservableObject.extend({\n            init: function (data) {\n                var that = this;\n                if (!data || $.isEmptyObject(data)) {\n                    data = $.extend({}, that.defaults, data);\n                    if (that._initializers) {\n                        for (var idx = 0; idx < that._initializers.length; idx++) {\n                            var name = that._initializers[idx];\n                            data[name] = that.defaults[name]();\n                        }\n                    }\n                }\n                ObservableObject.fn.init.call(that, data);\n                that.dirty = false;\n                that.dirtyFields = {};\n                if (that.idField) {\n                    that.id = that.get(that.idField);\n                    if (that.id === undefined) {\n                        that.id = that._defaultId;\n                    }\n                }\n            },\n            shouldSerialize: function (field) {\n                return ObservableObject.fn.shouldSerialize.call(this, field) && field !== 'uid' && !(this.idField !== 'id' && field === 'id') && field !== 'dirty' && field !== 'dirtyFields' && field !== '_accessors';\n            },\n            _parse: function (field, value) {\n                var that = this, fieldName = field, fields = that.fields || {}, parse;\n                field = fields[field];\n                if (!field) {\n                    field = getFieldByName(fields, fieldName);\n                }\n                if (field) {\n                    parse = field.parse;\n                    if (!parse && field.type) {\n                        parse = parsers[field.type.toLowerCase()];\n                    }\n                }\n                return parse ? parse(value) : value;\n            },\n            _notifyChange: function (e) {\n                var action = e.action;\n                if (action == 'add' || action == 'remove') {\n                    this.dirty = true;\n                    this.dirtyFields[e.field] = true;\n                }\n            },\n            editable: function (field) {\n                field = (this.fields || {})[field];\n                return field ? field.editable !== false : true;\n            },\n            set: function (field, value) {\n                var that = this;\n                var dirty = that.dirty;\n                if (that.editable(field)) {\n                    value = that._parse(field, value);\n                    if (!equal(value, that.get(field))) {\n                        that.dirty = true;\n                        that.dirtyFields[field] = true;\n                        if (ObservableObject.fn.set.call(that, field, value) && !dirty) {\n                            that.dirty = dirty;\n                            if (!that.dirty) {\n                                that.dirtyFields[field] = false;\n                            }\n                        }\n                    } else {\n                        that.trigger('equalSet', {\n                            field: field,\n                            value: value\n                        });\n                    }\n                }\n            },\n            accept: function (data) {\n                var that = this, parent = function () {\n                        return that;\n                    }, field;\n                for (field in data) {\n                    var value = data[field];\n                    if (field.charAt(0) != '_') {\n                        value = that.wrap(data[field], field, parent);\n                    }\n                    that._set(field, value);\n                }\n                if (that.idField) {\n                    that.id = that.get(that.idField);\n                }\n                that.dirty = false;\n                that.dirtyFields = {};\n            },\n            isNew: function () {\n                return this.id === this._defaultId;\n            }\n        });\n        Model.define = function (base, options) {\n            if (options === undefined) {\n                options = base;\n                base = Model;\n            }\n            var model, proto = extend({ defaults: {} }, options), name, field, type, value, idx, length, fields = {}, originalName, id = proto.id, functionFields = [];\n            if (id) {\n                proto.idField = id;\n            }\n            if (proto.id) {\n                delete proto.id;\n            }\n            if (id) {\n                proto.defaults[id] = proto._defaultId = '';\n            }\n            if (toString.call(proto.fields) === '[object Array]') {\n                for (idx = 0, length = proto.fields.length; idx < length; idx++) {\n                    field = proto.fields[idx];\n                    if (typeof field === STRING) {\n                        fields[field] = {};\n                    } else if (field.field) {\n                        fields[field.field] = field;\n                    }\n                }\n                proto.fields = fields;\n            }\n            for (name in proto.fields) {\n                field = proto.fields[name];\n                type = field.type || 'default';\n                value = null;\n                originalName = name;\n                name = typeof field.field === STRING ? field.field : name;\n                if (!field.nullable) {\n                    value = proto.defaults[originalName !== name ? originalName : name] = field.defaultValue !== undefined ? field.defaultValue : defaultValues[type.toLowerCase()];\n                    if (typeof value === 'function') {\n                        functionFields.push(name);\n                    }\n                }\n                if (options.id === name) {\n                    proto._defaultId = value;\n                }\n                proto.defaults[originalName !== name ? originalName : name] = value;\n                field.parse = field.parse || parsers[type];\n            }\n            if (functionFields.length > 0) {\n                proto._initializers = functionFields;\n            }\n            model = base.extend(proto);\n            model.define = function (options) {\n                return Model.define(model, options);\n            };\n            if (proto.fields) {\n                model.fields = proto.fields;\n                model.idField = proto.idField;\n            }\n            return model;\n        };\n        var Comparer = {\n            selector: function (field) {\n                return isFunction(field) ? field : getter(field);\n            },\n            compare: function (field) {\n                var selector = this.selector(field);\n                return function (a, b) {\n                    a = selector(a);\n                    b = selector(b);\n                    if (a == null && b == null) {\n                        return 0;\n                    }\n                    if (a == null) {\n                        return -1;\n                    }\n                    if (b == null) {\n                        return 1;\n                    }\n                    if (a.localeCompare) {\n                        return a.localeCompare(b);\n                    }\n                    return a > b ? 1 : a < b ? -1 : 0;\n                };\n            },\n            create: function (sort) {\n                var compare = sort.compare || this.compare(sort.field);\n                if (sort.dir == 'desc') {\n                    return function (a, b) {\n                        return compare(b, a, true);\n                    };\n                }\n                return compare;\n            },\n            combine: function (comparers) {\n                return function (a, b) {\n                    var result = comparers[0](a, b), idx, length;\n                    for (idx = 1, length = comparers.length; idx < length; idx++) {\n                        result = result || comparers[idx](a, b);\n                    }\n                    return result;\n                };\n            }\n        };\n        var StableComparer = extend({}, Comparer, {\n            asc: function (field) {\n                var selector = this.selector(field);\n                return function (a, b) {\n                    var valueA = selector(a);\n                    var valueB = selector(b);\n                    if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                        valueA = valueA.getTime();\n                        valueB = valueB.getTime();\n                    }\n                    if (valueA === valueB) {\n                        return a.__position - b.__position;\n                    }\n                    if (valueA == null) {\n                        return -1;\n                    }\n                    if (valueB == null) {\n                        return 1;\n                    }\n                    if (valueA.localeCompare) {\n                        return valueA.localeCompare(valueB);\n                    }\n                    return valueA > valueB ? 1 : -1;\n                };\n            },\n            desc: function (field) {\n                var selector = this.selector(field);\n                return function (a, b) {\n                    var valueA = selector(a);\n                    var valueB = selector(b);\n                    if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                        valueA = valueA.getTime();\n                        valueB = valueB.getTime();\n                    }\n                    if (valueA === valueB) {\n                        return a.__position - b.__position;\n                    }\n                    if (valueA == null) {\n                        return 1;\n                    }\n                    if (valueB == null) {\n                        return -1;\n                    }\n                    if (valueB.localeCompare) {\n                        return valueB.localeCompare(valueA);\n                    }\n                    return valueA < valueB ? 1 : -1;\n                };\n            },\n            create: function (sort) {\n                return this[sort.dir](sort.field);\n            }\n        });\n        map = function (array, callback) {\n            var idx, length = array.length, result = new Array(length);\n            for (idx = 0; idx < length; idx++) {\n                result[idx] = callback(array[idx], idx, array);\n            }\n            return result;\n        };\n        var operators = function () {\n            function quote(str) {\n                if (typeof str == 'string') {\n                    str = str.replace(/[\\r\\n]+/g, '');\n                }\n                return JSON.stringify(str);\n            }\n            function textOp(impl) {\n                return function (a, b, ignore, accentFoldingFiltering) {\n                    b += '';\n                    if (ignore) {\n                        a = '(' + a + ' + \\'\\').toString()' + (accentFoldingFiltering ? '.toLocaleLowerCase(\\'' + accentFoldingFiltering + '\\')' : '.toLowerCase()');\n                        b = accentFoldingFiltering ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase();\n                    }\n                    return impl(a, quote(b), ignore);\n                };\n            }\n            function operator(op, a, b, ignore, accentFoldingFiltering) {\n                if (b != null) {\n                    if (typeof b === STRING) {\n                        var date = dateRegExp.exec(b);\n                        if (date) {\n                            b = new Date(+date[1]);\n                        } else if (ignore) {\n                            b = quote(accentFoldingFiltering ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase());\n                            a = '((' + a + ' || \\'\\')+\\'\\')' + (accentFoldingFiltering ? '.toLocaleLowerCase(\\'' + accentFoldingFiltering + '\\')' : '.toLowerCase()');\n                        } else {\n                            b = quote(b);\n                        }\n                    }\n                    if (b.getTime) {\n                        a = '(' + a + '&&' + a + '.getTime?' + a + '.getTime():' + a + ')';\n                        b = b.getTime();\n                    }\n                }\n                return a + ' ' + op + ' ' + b;\n            }\n            function getMatchRegexp(pattern) {\n                for (var rx = '/^', esc = false, i = 0; i < pattern.length; ++i) {\n                    var ch = pattern.charAt(i);\n                    if (esc) {\n                        rx += '\\\\' + ch;\n                    } else if (ch == '~') {\n                        esc = true;\n                        continue;\n                    } else if (ch == '*') {\n                        rx += '.*';\n                    } else if (ch == '?') {\n                        rx += '.';\n                    } else if ('.+^$()[]{}|\\\\/\\n\\r\\u2028\\u2029\\xA0'.indexOf(ch) >= 0) {\n                        rx += '\\\\' + ch;\n                    } else {\n                        rx += ch;\n                    }\n                    esc = false;\n                }\n                return rx + '$/';\n            }\n            return {\n                quote: function (value) {\n                    if (value && value.getTime) {\n                        return 'new Date(' + value.getTime() + ')';\n                    }\n                    return quote(value);\n                },\n                eq: function (a, b, ignore, accentFoldingFiltering) {\n                    return operator('==', a, b, ignore, accentFoldingFiltering);\n                },\n                neq: function (a, b, ignore, accentFoldingFiltering) {\n                    return operator('!=', a, b, ignore, accentFoldingFiltering);\n                },\n                gt: function (a, b, ignore) {\n                    return operator('>', a, b, ignore);\n                },\n                gte: function (a, b, ignore) {\n                    return operator('>=', a, b, ignore);\n                },\n                lt: function (a, b, ignore) {\n                    return operator('<', a, b, ignore);\n                },\n                lte: function (a, b, ignore) {\n                    return operator('<=', a, b, ignore);\n                },\n                startswith: textOp(function (a, b) {\n                    return a + '.lastIndexOf(' + b + ', 0) == 0';\n                }),\n                doesnotstartwith: textOp(function (a, b) {\n                    return a + '.lastIndexOf(' + b + ', 0) == -1';\n                }),\n                endswith: textOp(function (a, b) {\n                    var n = b ? b.length - 2 : 0;\n                    return a + '.indexOf(' + b + ', ' + a + '.length - ' + n + ') >= 0';\n                }),\n                doesnotendwith: textOp(function (a, b) {\n                    var n = b ? b.length - 2 : 0;\n                    return a + '.indexOf(' + b + ', ' + a + '.length - ' + n + ') < 0';\n                }),\n                contains: textOp(function (a, b) {\n                    return a + '.indexOf(' + b + ') >= 0';\n                }),\n                doesnotcontain: textOp(function (a, b) {\n                    return a + '.indexOf(' + b + ') == -1';\n                }),\n                matches: textOp(function (a, b) {\n                    b = b.substring(1, b.length - 1);\n                    return getMatchRegexp(b) + '.test(' + a + ')';\n                }),\n                doesnotmatch: textOp(function (a, b) {\n                    b = b.substring(1, b.length - 1);\n                    return '!' + getMatchRegexp(b) + '.test(' + a + ')';\n                }),\n                isempty: function (a) {\n                    return a + ' === \\'\\'';\n                },\n                isnotempty: function (a) {\n                    return a + ' !== \\'\\'';\n                },\n                isnull: function (a) {\n                    return '(' + a + ' == null)';\n                },\n                isnotnull: function (a) {\n                    return '(' + a + ' != null)';\n                },\n                isnullorempty: function (a) {\n                    return '(' + a + ' === null) || (' + a + ' === \\'\\')';\n                },\n                isnotnullorempty: function (a) {\n                    return '(' + a + ' !== null) && (' + a + ' !== \\'\\')';\n                }\n            };\n        }();\n        function Query(data) {\n            this.data = data || [];\n        }\n        Query.filterExpr = function (expression) {\n            var expressions = [], logic = {\n                    and: ' && ',\n                    or: ' || '\n                }, idx, length, filter, expr, fieldFunctions = [], operatorFunctions = [], field, operator, filters = expression.filters;\n            for (idx = 0, length = filters.length; idx < length; idx++) {\n                filter = filters[idx];\n                field = filter.field;\n                operator = filter.operator;\n                if (filter.filters) {\n                    expr = Query.filterExpr(filter);\n                    filter = expr.expression.replace(/__o\\[(\\d+)\\]/g, function (match, index) {\n                        index = +index;\n                        return '__o[' + (operatorFunctions.length + index) + ']';\n                    }).replace(/__f\\[(\\d+)\\]/g, function (match, index) {\n                        index = +index;\n                        return '__f[' + (fieldFunctions.length + index) + ']';\n                    });\n                    operatorFunctions.push.apply(operatorFunctions, expr.operators);\n                    fieldFunctions.push.apply(fieldFunctions, expr.fields);\n                } else {\n                    if (typeof field === FUNCTION) {\n                        expr = '__f[' + fieldFunctions.length + '](d)';\n                        fieldFunctions.push(field);\n                    } else {\n                        expr = kendo.expr(field);\n                    }\n                    if (typeof operator === FUNCTION) {\n                        filter = '__o[' + operatorFunctions.length + '](' + expr + ', ' + operators.quote(filter.value) + ')';\n                        operatorFunctions.push(operator);\n                    } else {\n                        filter = operators[(operator || 'eq').toLowerCase()](expr, filter.value, filter.ignoreCase !== undefined ? filter.ignoreCase : true, expression.accentFoldingFiltering);\n                    }\n                }\n                expressions.push(filter);\n            }\n            return {\n                expression: '(' + expressions.join(logic[expression.logic]) + ')',\n                fields: fieldFunctions,\n                operators: operatorFunctions\n            };\n        };\n        function normalizeSort(field, dir) {\n            if (field) {\n                var descriptor = typeof field === STRING ? {\n                        field: field,\n                        dir: dir\n                    } : field, descriptors = isArray(descriptor) ? descriptor : descriptor !== undefined ? [descriptor] : [];\n                return grep(descriptors, function (d) {\n                    return !!d.dir;\n                });\n            }\n        }\n        function sortFields(sorts, dir) {\n            var sortObject = {};\n            if (sorts) {\n                var descriptor = typeof sorts === STRING ? {\n                        field: sorts,\n                        dir: dir\n                    } : sorts, descriptors = isArray(descriptor) ? descriptor : descriptor !== undefined ? [descriptor] : [];\n                for (var i = 0; i < descriptors.length; i++) {\n                    sortObject[descriptors[i].field] = {\n                        dir: descriptors[i].dir,\n                        index: i + 1\n                    };\n                }\n            }\n            return sortObject;\n        }\n        var operatorMap = {\n            '==': 'eq',\n            equals: 'eq',\n            isequalto: 'eq',\n            equalto: 'eq',\n            equal: 'eq',\n            '!=': 'neq',\n            ne: 'neq',\n            notequals: 'neq',\n            isnotequalto: 'neq',\n            notequalto: 'neq',\n            notequal: 'neq',\n            '<': 'lt',\n            islessthan: 'lt',\n            lessthan: 'lt',\n            less: 'lt',\n            '<=': 'lte',\n            le: 'lte',\n            islessthanorequalto: 'lte',\n            lessthanequal: 'lte',\n            '>': 'gt',\n            isgreaterthan: 'gt',\n            greaterthan: 'gt',\n            greater: 'gt',\n            '>=': 'gte',\n            isgreaterthanorequalto: 'gte',\n            greaterthanequal: 'gte',\n            ge: 'gte',\n            notsubstringof: 'doesnotcontain',\n            isnull: 'isnull',\n            isempty: 'isempty',\n            isnotempty: 'isnotempty'\n        };\n        function normalizeOperator(expression) {\n            var idx, length, filter, operator, filters = expression.filters;\n            if (filters) {\n                for (idx = 0, length = filters.length; idx < length; idx++) {\n                    filter = filters[idx];\n                    operator = filter.operator;\n                    if (operator && typeof operator === STRING) {\n                        filter.operator = operatorMap[operator.toLowerCase()] || operator;\n                    }\n                    normalizeOperator(filter);\n                }\n            }\n        }\n        function normalizeFilter(expression) {\n            if (expression && !isEmptyObject(expression)) {\n                if (isArray(expression) || !expression.filters) {\n                    expression = {\n                        logic: 'and',\n                        filters: isArray(expression) ? expression : [expression]\n                    };\n                }\n                normalizeOperator(expression);\n                return expression;\n            }\n        }\n        Query.normalizeFilter = normalizeFilter;\n        function compareDescriptor(f1, f2) {\n            if (f1.logic || f2.logic) {\n                return false;\n            }\n            return f1.field === f2.field && f1.value === f2.value && f1.operator === f2.operator;\n        }\n        function normalizeDescriptor(filter) {\n            filter = filter || {};\n            if (isEmptyObject(filter)) {\n                return {\n                    logic: 'and',\n                    filters: []\n                };\n            }\n            return normalizeFilter(filter);\n        }\n        function fieldComparer(a, b) {\n            if (b.logic || a.field > b.field) {\n                return 1;\n            } else if (a.field < b.field) {\n                return -1;\n            } else {\n                return 0;\n            }\n        }\n        function compareFilters(expr1, expr2) {\n            expr1 = normalizeDescriptor(expr1);\n            expr2 = normalizeDescriptor(expr2);\n            if (expr1.logic !== expr2.logic) {\n                return false;\n            }\n            var f1, f2;\n            var filters1 = (expr1.filters || []).slice();\n            var filters2 = (expr2.filters || []).slice();\n            if (filters1.length !== filters2.length) {\n                return false;\n            }\n            filters1 = filters1.sort(fieldComparer);\n            filters2 = filters2.sort(fieldComparer);\n            for (var idx = 0; idx < filters1.length; idx++) {\n                f1 = filters1[idx];\n                f2 = filters2[idx];\n                if (f1.logic && f2.logic) {\n                    if (!compareFilters(f1, f2)) {\n                        return false;\n                    }\n                } else if (!compareDescriptor(f1, f2)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        Query.compareFilters = compareFilters;\n        function normalizeAggregate(expressions) {\n            return isArray(expressions) ? expressions : [expressions];\n        }\n        function normalizeGroup(field, dir, compare, skipItemSorting) {\n            var descriptor = typeof field === STRING ? {\n                    field: field,\n                    dir: dir,\n                    compare: compare,\n                    skipItemSorting: skipItemSorting\n                } : field, descriptors = isArray(descriptor) ? descriptor : descriptor !== undefined ? [descriptor] : [];\n            return map(descriptors, function (d) {\n                return {\n                    field: d.field,\n                    dir: d.dir || 'asc',\n                    aggregates: d.aggregates,\n                    compare: d.compare,\n                    skipItemSorting: d.skipItemSorting\n                };\n            });\n        }\n        function normalizeGroupWithoutCompare(field, dir, compare) {\n            var descriptors = normalizeGroup(field, dir, compare);\n            for (var i = 0; i < descriptors.length; i++) {\n                delete descriptors[i].compare;\n            }\n            return descriptors;\n        }\n        function anyGroupDescriptorHasCompare(groupDescriptors) {\n            var descriptors = isArray(groupDescriptors) ? groupDescriptors : [groupDescriptors];\n            for (var i = 0; i < descriptors.length; i++) {\n                if (descriptors[i] && isFunction(descriptors[i].compare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        Query.prototype = {\n            toArray: function () {\n                return this.data;\n            },\n            range: function (index, count) {\n                return new Query(this.data.slice(index, index + count));\n            },\n            skip: function (count) {\n                return new Query(this.data.slice(count));\n            },\n            take: function (count) {\n                return new Query(this.data.slice(0, count));\n            },\n            select: function (selector) {\n                return new Query(map(this.data, selector));\n            },\n            order: function (selector, dir, inPlace) {\n                var sort = { dir: dir };\n                if (selector) {\n                    if (selector.compare) {\n                        sort.compare = selector.compare;\n                    } else {\n                        sort.field = selector;\n                    }\n                }\n                if (inPlace) {\n                    return new Query(this.data.sort(Comparer.create(sort)));\n                }\n                return new Query(this.data.slice(0).sort(Comparer.create(sort)));\n            },\n            orderBy: function (selector, inPlace) {\n                return this.order(selector, 'asc', inPlace);\n            },\n            orderByDescending: function (selector, inPlace) {\n                return this.order(selector, 'desc', inPlace);\n            },\n            sort: function (field, dir, comparer, inPlace) {\n                var idx, length, descriptors = normalizeSort(field, dir), comparers = [];\n                comparer = comparer || Comparer;\n                if (descriptors.length) {\n                    for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                        comparers.push(comparer.create(descriptors[idx]));\n                    }\n                    return this.orderBy({ compare: comparer.combine(comparers) }, inPlace);\n                }\n                return this;\n            },\n            filter: function (expressions) {\n                var idx, current, length, compiled, predicate, data = this.data, fields, operators, result = [], filter;\n                expressions = normalizeFilter(expressions);\n                if (!expressions || expressions.filters.length === 0) {\n                    return this;\n                }\n                compiled = Query.filterExpr(expressions);\n                fields = compiled.fields;\n                operators = compiled.operators;\n                predicate = filter = new Function('d, __f, __o', 'return ' + compiled.expression);\n                if (fields.length || operators.length) {\n                    filter = function (d) {\n                        return predicate(d, fields, operators);\n                    };\n                }\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    current = data[idx];\n                    if (filter(current)) {\n                        result.push(current);\n                    }\n                }\n                return new Query(result);\n            },\n            group: function (descriptors, allData, options) {\n                descriptors = normalizeGroup(descriptors || []);\n                allData = allData || this.data;\n                var that = this, result = new Query(that.data), descriptor;\n                if (descriptors.length > 0) {\n                    descriptor = descriptors[0];\n                    if (options && options.groupPaging) {\n                        result = new Query(allData).groupAllData(descriptor, allData).select(function (group) {\n                            var data = new Query(allData).filter([{\n                                    field: group.field,\n                                    operator: 'eq',\n                                    value: group.value,\n                                    ignoreCase: false\n                                }]);\n                            var items = descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray(), options).toArray() : group.items;\n                            return {\n                                field: group.field,\n                                value: group.value,\n                                hasSubgroups: descriptors.length > 1,\n                                items: items,\n                                aggregates: data.aggregate(descriptor.aggregates),\n                                uid: kendo.guid(),\n                                itemCount: items.length,\n                                subgroupCount: items.length\n                            };\n                        });\n                    } else {\n                        result = result.groupBy(descriptor).select(function (group) {\n                            var data = new Query(allData).filter([{\n                                    field: group.field,\n                                    operator: 'eq',\n                                    value: group.value,\n                                    ignoreCase: false\n                                }]);\n                            return {\n                                field: group.field,\n                                value: group.value,\n                                items: descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray()).toArray() : group.items,\n                                hasSubgroups: descriptors.length > 1,\n                                aggregates: data.aggregate(descriptor.aggregates)\n                            };\n                        });\n                    }\n                }\n                return result;\n            },\n            groupBy: function (descriptor) {\n                var that = this;\n                if (isEmptyObject(descriptor) || !this.data.length) {\n                    return new Query([]);\n                }\n                var field = descriptor.field, sorted = descriptor.skipItemSorting ? this.data : this._sortForGrouping(field, descriptor.dir || 'asc'), accessor = kendo.accessor(field), item, groupValue = accessor.get(sorted[0], field), group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    }, currentValue, idx, len, result = [group];\n                for (idx = 0, len = sorted.length; idx < len; idx++) {\n                    item = sorted[idx];\n                    currentValue = accessor.get(item, field);\n                    if (!groupValueComparer(groupValue, currentValue)) {\n                        groupValue = currentValue;\n                        group = {\n                            field: field,\n                            value: groupValue,\n                            items: []\n                        };\n                        result.push(group);\n                    }\n                    group.items.push(item);\n                }\n                result = that._sortGroups(result, descriptor);\n                return new Query(result);\n            },\n            groupAllData: function (descriptor, allData) {\n                if (isEmptyObject(descriptor) || this.data && !this.data.length) {\n                    return new Query([]);\n                }\n                var field = descriptor.field, sorted = descriptor.skipItemSorting ? allData : new Query(allData).sort(field, descriptor.dir || 'asc', StableComparer).toArray(), accessor = kendo.accessor(field), item, groupValue = accessor.get(sorted[0], field), group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    }, currentValue, idx, len, result = [group];\n                for (idx = 0, len = sorted.length; idx < len; idx++) {\n                    item = sorted[idx];\n                    currentValue = accessor.get(item, field);\n                    if (!groupValueComparer(groupValue, currentValue)) {\n                        groupValue = currentValue;\n                        group = {\n                            field: field,\n                            value: groupValue,\n                            items: []\n                        };\n                        result.push(group);\n                    }\n                    group.items.push(item);\n                }\n                result = this._sortGroups(result, descriptor);\n                return new Query(result);\n            },\n            _sortForGrouping: function (field, dir) {\n                var idx, length, data = this.data;\n                if (!stableSort) {\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        data[idx].__position = idx;\n                    }\n                    data = new Query(data).sort(field, dir, StableComparer).toArray();\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        delete data[idx].__position;\n                    }\n                    return data;\n                }\n                return this.sort(field, dir).toArray();\n            },\n            _sortGroups: function (groups, descriptor) {\n                var result = groups;\n                if (descriptor && isFunction(descriptor.compare)) {\n                    result = new Query(result).order({ compare: descriptor.compare }, descriptor.dir || ASCENDING).toArray();\n                }\n                return result;\n            },\n            aggregate: function (aggregates) {\n                var idx, len, result = {}, state = {};\n                if (aggregates && aggregates.length) {\n                    for (idx = 0, len = this.data.length; idx < len; idx++) {\n                        calculateAggregate(result, aggregates, this.data[idx], idx, len, state);\n                    }\n                }\n                return result;\n            }\n        };\n        function groupValueComparer(a, b) {\n            if (a && a.getTime && b && b.getTime) {\n                return a.getTime() === b.getTime();\n            }\n            return a === b;\n        }\n        function calculateAggregate(accumulator, aggregates, item, index, length, state) {\n            aggregates = aggregates || [];\n            var idx, aggr, functionName, len = aggregates.length;\n            for (idx = 0; idx < len; idx++) {\n                aggr = aggregates[idx];\n                functionName = aggr.aggregate;\n                var field = aggr.field;\n                accumulator[field] = accumulator[field] || {};\n                state[field] = state[field] || {};\n                state[field][functionName] = state[field][functionName] || {};\n                accumulator[field][functionName] = functions[functionName.toLowerCase()](accumulator[field][functionName], item, kendo.accessor(field), index, length, state[field][functionName]);\n            }\n        }\n        var functions = {\n            sum: function (accumulator, item, accessor) {\n                var value = accessor.get(item);\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n                return accumulator;\n            },\n            count: function (accumulator) {\n                return (accumulator || 0) + 1;\n            },\n            average: function (accumulator, item, accessor, index, length, state) {\n                var value = accessor.get(item);\n                if (state.count === undefined) {\n                    state.count = 0;\n                }\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n                if (isNumber(value)) {\n                    state.count++;\n                }\n                if (index == length - 1 && isNumber(accumulator)) {\n                    accumulator = accumulator / state.count;\n                }\n                return accumulator;\n            },\n            max: function (accumulator, item, accessor) {\n                var value = accessor.get(item);\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n                if (accumulator < value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            },\n            min: function (accumulator, item, accessor) {\n                var value = accessor.get(item);\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n                if (accumulator > value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            }\n        };\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function isDate(val) {\n            return val && val.getTime;\n        }\n        function toJSON(array) {\n            var idx, length = array.length, result = new Array(length);\n            for (idx = 0; idx < length; idx++) {\n                result[idx] = array[idx].toJSON();\n            }\n            return result;\n        }\n        Query.normalizeGroup = normalizeGroup;\n        Query.normalizeSort = normalizeSort;\n        Query.process = function (data, options, inPlace) {\n            options = options || {};\n            var group = options.group;\n            var customGroupSort = anyGroupDescriptorHasCompare(normalizeGroup(group || []));\n            var query = new Query(data), groupDescriptorsWithoutCompare = normalizeGroupWithoutCompare(group || []), normalizedSort = normalizeSort(options.sort || []), sort = customGroupSort ? normalizedSort : groupDescriptorsWithoutCompare.concat(normalizedSort), groupDescriptorsWithoutSort, total, filterCallback = options.filterCallback, filter = options.filter, skip = options.skip, take = options.take;\n            if (sort && inPlace) {\n                query = query.sort(sort, undefined, undefined, inPlace);\n            }\n            if (filter) {\n                query = query.filter(filter);\n                if (filterCallback) {\n                    query = filterCallback(query);\n                }\n                total = query.toArray().length;\n            }\n            if (sort) {\n                if (!inPlace) {\n                    query = query.sort(sort);\n                }\n                if (group) {\n                    data = query.toArray();\n                }\n            }\n            if (customGroupSort) {\n                query = query.group(group, data);\n                if (skip !== undefined && take !== undefined) {\n                    query = new Query(flatGroups(query.toArray())).range(skip, take);\n                    groupDescriptorsWithoutSort = map(groupDescriptorsWithoutCompare, function (groupDescriptor) {\n                        return extend({}, groupDescriptor, { skipItemSorting: true });\n                    });\n                    query = query.group(groupDescriptorsWithoutSort, data);\n                }\n            } else {\n                if (skip !== undefined && take !== undefined) {\n                    query = query.range(skip, take);\n                }\n                if (group) {\n                    query = query.group(group, data, options);\n                }\n            }\n            return {\n                total: total,\n                data: query.toArray()\n            };\n        };\n        var LocalTransport = Class.extend({\n            init: function (options) {\n                this.data = options.data;\n            },\n            read: function (options) {\n                options.success(this.data);\n            },\n            update: function (options) {\n                options.success(options.data);\n            },\n            create: function (options) {\n                options.success(options.data);\n            },\n            destroy: function (options) {\n                options.success(options.data);\n            }\n        });\n        var RemoteTransport = Class.extend({\n            init: function (options) {\n                var that = this, parameterMap;\n                options = that.options = extend({}, that.options, options);\n                each(crud, function (index, type) {\n                    if (typeof options[type] === STRING) {\n                        options[type] = { url: options[type] };\n                    }\n                });\n                that.cache = options.cache ? Cache.create(options.cache) : {\n                    find: noop,\n                    add: noop\n                };\n                parameterMap = options.parameterMap;\n                if (options.submit) {\n                    that.submit = options.submit;\n                }\n                if (isFunction(options.push)) {\n                    that.push = options.push;\n                }\n                if (!that.push) {\n                    that.push = identity;\n                }\n                that.parameterMap = isFunction(parameterMap) ? parameterMap : function (options) {\n                    var result = {};\n                    each(options, function (option, value) {\n                        if (option in parameterMap) {\n                            option = parameterMap[option];\n                            if (isPlainObject(option)) {\n                                value = option.value(value);\n                                option = option.key;\n                            }\n                        }\n                        result[option] = value;\n                    });\n                    return result;\n                };\n            },\n            options: { parameterMap: identity },\n            create: function (options) {\n                return ajax(this.setup(options, CREATE));\n            },\n            read: function (options) {\n                var that = this, success, error, result, cache = that.cache;\n                options = that.setup(options, READ);\n                success = options.success || noop;\n                error = options.error || noop;\n                result = cache.find(options.data);\n                if (result !== undefined) {\n                    success(result);\n                } else {\n                    options.success = function (result) {\n                        cache.add(options.data, result);\n                        success(result);\n                    };\n                    $.ajax(options);\n                }\n            },\n            update: function (options) {\n                return ajax(this.setup(options, UPDATE));\n            },\n            destroy: function (options) {\n                return ajax(this.setup(options, DESTROY));\n            },\n            setup: function (options, type) {\n                options = options || {};\n                var that = this, parameters, operation = that.options[type], data = isFunction(operation.data) ? operation.data(options.data) : operation.data;\n                options = extend(true, {}, operation, options);\n                parameters = extend(true, {}, data, options.data);\n                options.data = that.parameterMap(parameters, type);\n                if (isFunction(options.url)) {\n                    options.url = options.url(parameters);\n                }\n                return options;\n            }\n        });\n        var Cache = Class.extend({\n            init: function () {\n                this._store = {};\n            },\n            add: function (key, data) {\n                if (key !== undefined) {\n                    this._store[stringify(key)] = data;\n                }\n            },\n            find: function (key) {\n                return this._store[stringify(key)];\n            },\n            clear: function () {\n                this._store = {};\n            },\n            remove: function (key) {\n                delete this._store[stringify(key)];\n            }\n        });\n        Cache.create = function (options) {\n            var store = {\n                'inmemory': function () {\n                    return new Cache();\n                }\n            };\n            if (isPlainObject(options) && isFunction(options.find)) {\n                return options;\n            }\n            if (options === true) {\n                return new Cache();\n            }\n            return store[options]();\n        };\n        function serializeRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n            var record, getter, originalName, idx, setters = {}, length;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                record = data[idx];\n                for (getter in getters) {\n                    originalName = fieldNames[getter];\n                    if (originalName && originalName !== getter) {\n                        if (!setters[originalName]) {\n                            setters[originalName] = kendo.setter(originalName);\n                        }\n                        setters[originalName](record, getters[getter](record));\n                        delete record[getter];\n                    }\n                }\n            }\n        }\n        function convertRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n            var record, getter, originalName, idx, length;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                record = data[idx];\n                for (getter in getters) {\n                    record[getter] = modelInstance._parse(getter, getters[getter](record));\n                    originalName = fieldNames[getter];\n                    if (originalName && originalName !== getter) {\n                        delete record[originalName];\n                    }\n                }\n            }\n        }\n        function convertGroup(data, getters, modelInstance, originalFieldNames, fieldNames) {\n            var record, idx, fieldName, length;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                record = data[idx];\n                fieldName = originalFieldNames[record.field];\n                if (fieldName && fieldName != record.field) {\n                    record.field = fieldName;\n                }\n                record.value = modelInstance._parse(record.field, record.value);\n                if (record.items) {\n                    if (record.hasSubgroups) {\n                        convertGroup(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                    } else {\n                        convertRecords(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                    }\n                }\n            }\n        }\n        function wrapDataAccess(originalFunction, model, converter, getters, originalFieldNames, fieldNames) {\n            return function (data) {\n                data = originalFunction(data);\n                return wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames)(data);\n            };\n        }\n        function wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames) {\n            return function (data) {\n                if (data && !isEmptyObject(getters)) {\n                    if (toString.call(data) !== '[object Array]' && !(data instanceof ObservableArray)) {\n                        data = [data];\n                    }\n                    converter(data, getters, new model(), originalFieldNames, fieldNames);\n                }\n                return data || [];\n            };\n        }\n        var DataReader = Class.extend({\n            init: function (schema) {\n                var that = this, member, get, model, base;\n                schema = schema || {};\n                for (member in schema) {\n                    get = schema[member];\n                    that[member] = typeof get === STRING ? getter(get) : get;\n                }\n                base = schema.modelBase || Model;\n                if (isPlainObject(that.model)) {\n                    that.model = model = base.define(that.model);\n                }\n                var dataFunction = proxy(that.data, that);\n                that._dataAccessFunction = dataFunction;\n                if (that.model) {\n                    var groupsFunction = proxy(that.groups, that), serializeFunction = proxy(that.serialize, that), originalFieldNames = {}, getters = {}, serializeGetters = {}, fieldNames = {}, shouldSerialize = false, fieldName, name;\n                    model = that.model;\n                    if (model.fields) {\n                        each(model.fields, function (field, value) {\n                            var fromName;\n                            fieldName = field;\n                            if (isPlainObject(value) && value.field) {\n                                fieldName = value.field;\n                            } else if (typeof value === STRING) {\n                                fieldName = value;\n                            }\n                            if (isPlainObject(value) && value.from) {\n                                fromName = value.from;\n                            }\n                            shouldSerialize = shouldSerialize || fromName && fromName !== field || fieldName !== field;\n                            name = fromName || fieldName;\n                            getters[field] = name.indexOf('.') !== -1 ? getter(name, true) : getter(name);\n                            serializeGetters[field] = getter(field);\n                            originalFieldNames[fromName || fieldName] = field;\n                            fieldNames[field] = fromName || fieldName;\n                        });\n                        if (!schema.serialize && shouldSerialize) {\n                            that.serialize = wrapDataAccess(serializeFunction, model, serializeRecords, serializeGetters, originalFieldNames, fieldNames);\n                        }\n                    }\n                    that._dataAccessFunction = dataFunction;\n                    that._wrapDataAccessBase = wrapDataAccessBase(model, convertRecords, getters, originalFieldNames, fieldNames);\n                    that.data = wrapDataAccess(dataFunction, model, convertRecords, getters, originalFieldNames, fieldNames);\n                    that.groups = wrapDataAccess(groupsFunction, model, convertGroup, getters, originalFieldNames, fieldNames);\n                }\n            },\n            errors: function (data) {\n                return data ? data.errors : null;\n            },\n            parse: identity,\n            data: identity,\n            total: function (data) {\n                return data.length;\n            },\n            groups: identity,\n            aggregates: function () {\n                return {};\n            },\n            serialize: function (data) {\n                return data;\n            }\n        });\n        function fillLastGroup(originalGroup, newGroup) {\n            var currOriginal;\n            var currentNew;\n            if (newGroup.items && newGroup.items.length) {\n                for (var i = 0; i < newGroup.items.length; i++) {\n                    currOriginal = originalGroup.items[i];\n                    currentNew = newGroup.items[i];\n                    if (currOriginal && currentNew) {\n                        if (currOriginal.hasSubgroups) {\n                            fillLastGroup(currOriginal, currentNew);\n                        } else if (currOriginal.field && currOriginal.value == currentNew.value) {\n                            currOriginal.items.push.apply(currOriginal.items, currentNew.items);\n                        } else {\n                            originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                        }\n                    } else if (currentNew) {\n                        originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                    }\n                }\n            }\n        }\n        function mergeGroups(target, dest, skip, take) {\n            var group, idx = 0, items;\n            while (dest.length && take) {\n                group = dest[idx];\n                items = group.items;\n                var length = items.length;\n                if (target && target.field === group.field && target.value === group.value) {\n                    if (target.hasSubgroups && target.items.length) {\n                        mergeGroups(target.items[target.items.length - 1], group.items, skip, take);\n                    } else {\n                        items = items.slice(skip, skip + take);\n                        target.items = target.items.concat(items);\n                    }\n                    dest.splice(idx--, 1);\n                } else if (group.hasSubgroups && items.length) {\n                    mergeGroups(group, items, skip, take);\n                    if (!group.items.length) {\n                        dest.splice(idx--, 1);\n                    }\n                } else {\n                    items = items.slice(skip, skip + take);\n                    group.items = items;\n                    if (!group.items.length) {\n                        dest.splice(idx--, 1);\n                    }\n                }\n                if (items.length === 0) {\n                    skip -= length;\n                } else {\n                    skip = 0;\n                    take -= items.length;\n                }\n                if (++idx >= dest.length) {\n                    break;\n                }\n            }\n            if (idx < dest.length) {\n                dest.splice(idx, dest.length - idx);\n            }\n        }\n        function flatGroups(groups, indexFunction) {\n            var result = [];\n            var groupsLength = (groups || []).length;\n            var group;\n            var items;\n            var indexFn = isFunction(indexFunction) ? indexFunction : function (array, index) {\n                return array[index];\n            };\n            for (var groupIndex = 0; groupIndex < groupsLength; groupIndex++) {\n                group = indexFn(groups, groupIndex);\n                if (group.hasSubgroups) {\n                    result = result.concat(flatGroups(group.items));\n                } else {\n                    items = group.items;\n                    for (var itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                        result.push(indexFn(items, itemIndex));\n                    }\n                }\n            }\n            return result;\n        }\n        function flattenGroups(data) {\n            var idx, result = [], length, items, itemIndex;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                var group = data.at(idx);\n                if (group.items) {\n                    if (group.hasSubgroups) {\n                        result = result.concat(flattenGroups(group.items));\n                    } else {\n                        items = group.items;\n                        for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                            result.push(items.at(itemIndex));\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n        function wrapGroupItems(data, model) {\n            var idx, length, group;\n            if (model) {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    group = data.at(idx);\n                    if (group.items) {\n                        if (group.hasSubgroups) {\n                            wrapGroupItems(group.items, model);\n                        } else {\n                            group.items = new LazyObservableArray(group.items, model, group.items._events);\n                        }\n                    }\n                }\n            }\n        }\n        function eachGroupItems(data, func) {\n            for (var idx = 0; idx < data.length; idx++) {\n                if (data[idx].hasSubgroups) {\n                    if (eachGroupItems(data[idx].items, func)) {\n                        return true;\n                    }\n                } else if (func(data[idx].items, data[idx])) {\n                    return true;\n                }\n            }\n        }\n        function replaceInRanges(ranges, data, item, observable) {\n            for (var idx = 0; idx < ranges.length; idx++) {\n                if (ranges[idx].data === data) {\n                    break;\n                }\n                if (replaceInRange(ranges[idx].data, item, observable)) {\n                    break;\n                }\n            }\n        }\n        function replaceInRange(items, item, observable) {\n            for (var idx = 0, length = items.length; idx < length; idx++) {\n                if (items[idx] && items[idx].hasSubgroups) {\n                    return replaceInRange(items[idx].items, item, observable);\n                } else if (items[idx] === item || items[idx] === observable) {\n                    items[idx] = observable;\n                    return true;\n                }\n            }\n        }\n        function replaceWithObservable(view, data, ranges, type, serverGrouping) {\n            for (var viewIndex = 0, length = view.length; viewIndex < length; viewIndex++) {\n                var item = view[viewIndex];\n                if (!item || item instanceof type) {\n                    continue;\n                }\n                if (item.hasSubgroups !== undefined && !serverGrouping) {\n                    replaceWithObservable(item.items, data, ranges, type, serverGrouping);\n                } else {\n                    for (var idx = 0; idx < data.length; idx++) {\n                        if (data[idx] === item) {\n                            view[viewIndex] = data.at(idx);\n                            replaceInRanges(ranges, data, item, view[viewIndex]);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        function removeModel(data, model) {\n            if (!data) {\n                return;\n            }\n            var length = data.length;\n            var dataItem;\n            var idx;\n            for (idx = 0; idx < length; idx++) {\n                dataItem = data[idx];\n                if (dataItem.uid && dataItem.uid == model.uid) {\n                    data.splice(idx, 1);\n                    return dataItem;\n                }\n            }\n        }\n        function indexOfPristineModel(data, model) {\n            if (model) {\n                return indexOf(data, function (item) {\n                    return item.uid && item.uid == model.uid || item[model.idField] === model.id && model.id !== model._defaultId;\n                });\n            }\n            return -1;\n        }\n        function indexOfModel(data, model) {\n            if (model) {\n                return indexOf(data, function (item) {\n                    return item.uid == model.uid;\n                });\n            }\n            return -1;\n        }\n        function indexOf(data, comparer) {\n            var idx, length;\n            if (!data) {\n                return;\n            }\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (comparer(data[idx])) {\n                    return idx;\n                }\n            }\n            return -1;\n        }\n        function fieldNameFromModel(fields, name) {\n            if (fields && !isEmptyObject(fields)) {\n                var descriptor = fields[name];\n                var fieldName;\n                if (isPlainObject(descriptor)) {\n                    fieldName = descriptor.from || descriptor.field || name;\n                } else {\n                    fieldName = fields[name] || name;\n                }\n                if (isFunction(fieldName)) {\n                    return name;\n                }\n                return fieldName;\n            }\n            return name;\n        }\n        function convertFilterDescriptorsField(descriptor, model) {\n            var idx, length, target = {};\n            for (var field in descriptor) {\n                if (field !== 'filters') {\n                    target[field] = descriptor[field];\n                }\n            }\n            if (descriptor.filters) {\n                target.filters = [];\n                for (idx = 0, length = descriptor.filters.length; idx < length; idx++) {\n                    target.filters[idx] = convertFilterDescriptorsField(descriptor.filters[idx], model);\n                }\n            } else {\n                target.field = fieldNameFromModel(model.fields, target.field);\n            }\n            return target;\n        }\n        function convertDescriptorsField(descriptors, model) {\n            var idx, length, result = [], target, descriptor;\n            for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                target = {};\n                descriptor = descriptors[idx];\n                for (var field in descriptor) {\n                    target[field] = descriptor[field];\n                }\n                target.field = fieldNameFromModel(model.fields, target.field);\n                if (target.aggregates && isArray(target.aggregates)) {\n                    target.aggregates = convertDescriptorsField(target.aggregates, model);\n                }\n                result.push(target);\n            }\n            return result;\n        }\n        var DataSource = Observable.extend({\n            init: function (options) {\n                var that = this, model, data;\n                if (options) {\n                    data = options.data;\n                }\n                options = that.options = extend({}, that.options, options);\n                that._map = {};\n                that._prefetch = {};\n                that._data = [];\n                that._pristineData = [];\n                that._ranges = [];\n                that._view = [];\n                that._pristineTotal = 0;\n                that._destroyed = [];\n                that._pageSize = options.pageSize;\n                that._page = options.page || (options.pageSize ? 1 : undefined);\n                that._sort = normalizeSort(options.sort);\n                that._sortFields = sortFields(options.sort);\n                that._filter = normalizeFilter(options.filter);\n                that._group = normalizeGroup(options.group);\n                that._aggregate = options.aggregate;\n                that._total = options.total;\n                that._groupPaging = options.groupPaging;\n                if (that._groupPaging) {\n                    that._groupsState = {};\n                }\n                that._shouldDetachObservableParents = true;\n                Observable.fn.init.call(that);\n                that.transport = Transport.create(options, data, that);\n                if (isFunction(that.transport.push)) {\n                    that.transport.push({\n                        pushCreate: proxy(that._pushCreate, that),\n                        pushUpdate: proxy(that._pushUpdate, that),\n                        pushDestroy: proxy(that._pushDestroy, that)\n                    });\n                }\n                if (options.offlineStorage != null) {\n                    if (typeof options.offlineStorage == 'string') {\n                        var key = options.offlineStorage;\n                        that._storage = {\n                            getItem: function () {\n                                return JSON.parse(localStorage.getItem(key));\n                            },\n                            setItem: function (item) {\n                                localStorage.setItem(key, stringify(that.reader.serialize(item)));\n                            }\n                        };\n                    } else {\n                        that._storage = options.offlineStorage;\n                    }\n                }\n                that.reader = new kendo.data.readers[options.schema.type || 'json'](options.schema);\n                model = that.reader.model || {};\n                that._detachObservableParents();\n                that._data = that._observe(that._data);\n                that._online = true;\n                that.bind([\n                    'push',\n                    ERROR,\n                    CHANGE,\n                    REQUESTSTART,\n                    SYNC,\n                    REQUESTEND,\n                    PROGRESS\n                ], options);\n            },\n            options: {\n                data: null,\n                schema: { modelBase: Model },\n                offlineStorage: null,\n                serverSorting: false,\n                serverPaging: false,\n                serverFiltering: false,\n                serverGrouping: false,\n                serverAggregates: false,\n                batch: false,\n                inPlaceSort: false\n            },\n            clone: function () {\n                return this;\n            },\n            online: function (value) {\n                if (value !== undefined) {\n                    if (this._online != value) {\n                        this._online = value;\n                        if (value) {\n                            return this.sync();\n                        }\n                    }\n                    return $.Deferred().resolve().promise();\n                } else {\n                    return this._online;\n                }\n            },\n            offlineData: function (state) {\n                if (this.options.offlineStorage == null) {\n                    return null;\n                }\n                if (state !== undefined) {\n                    return this._storage.setItem(state);\n                }\n                return this._storage.getItem() || [];\n            },\n            _isServerGrouped: function () {\n                var group = this.group() || [];\n                return this.options.serverGrouping && group.length;\n            },\n            _isServerGroupPaged: function () {\n                return this._isServerGrouped() && this._groupPaging;\n            },\n            _isGroupPaged: function () {\n                var group = this._group || [];\n                return this._groupPaging && group.length;\n            },\n            _pushCreate: function (result) {\n                this._push(result, 'pushCreate');\n            },\n            _pushUpdate: function (result) {\n                this._push(result, 'pushUpdate');\n            },\n            _pushDestroy: function (result) {\n                this._push(result, 'pushDestroy');\n            },\n            _push: function (result, operation) {\n                var data = this._readData(result);\n                if (!data) {\n                    data = result;\n                }\n                this[operation](data);\n            },\n            _flatData: function (data, skip) {\n                if (data) {\n                    if (this._isServerGrouped()) {\n                        return flattenGroups(data);\n                    }\n                    if (!skip) {\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data.at(idx);\n                        }\n                    }\n                }\n                return data;\n            },\n            parent: noop,\n            get: function (id) {\n                var idx, length, data = this._flatData(this._data, this.options.useRanges);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].id == id) {\n                        return data[idx];\n                    }\n                }\n            },\n            getByUid: function (id) {\n                return this._getByUid(id, this._data);\n            },\n            _getByUid: function (id, dataItems) {\n                var idx, length, data = this._flatData(dataItems, this.options.useRanges);\n                if (!data) {\n                    return;\n                }\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].uid == id) {\n                        return data[idx];\n                    }\n                }\n            },\n            indexOf: function (model) {\n                return indexOfModel(this._data, model);\n            },\n            at: function (index) {\n                return this._data.at(index);\n            },\n            data: function (value) {\n                var that = this;\n                if (value !== undefined) {\n                    that._detachObservableParents();\n                    that._data = this._observe(value);\n                    that._pristineData = value.slice(0);\n                    that._storeData();\n                    that._ranges = [];\n                    that.trigger('reset');\n                    that._addRange(that._data);\n                    that._total = that._data.length;\n                    that._pristineTotal = that._total;\n                    that._process(that._data);\n                } else {\n                    if (that._data) {\n                        for (var idx = 0; idx < that._data.length; idx++) {\n                            that._data.at(idx);\n                        }\n                    }\n                    return that._data;\n                }\n            },\n            view: function (value) {\n                if (value === undefined) {\n                    return this._view;\n                } else {\n                    this._view = this._observeView(value);\n                }\n            },\n            _observeView: function (data) {\n                var that = this;\n                replaceWithObservable(data, that._data, that._ranges, that.reader.model || ObservableObject, that._isServerGrouped());\n                var view = new LazyObservableArray(data, that.reader.model);\n                view.parent = function () {\n                    return that.parent();\n                };\n                return view;\n            },\n            flatView: function () {\n                var groups = this.group() || [];\n                if (groups.length) {\n                    return flattenGroups(this._view);\n                } else {\n                    return this._view;\n                }\n            },\n            add: function (model) {\n                return this.insert(this._data.length, model);\n            },\n            _createNewModel: function (model) {\n                if (this.reader.model) {\n                    return new this.reader.model(model);\n                }\n                if (model instanceof ObservableObject) {\n                    return model;\n                }\n                return new ObservableObject(model);\n            },\n            insert: function (index, model) {\n                if (!model) {\n                    model = index;\n                    index = 0;\n                }\n                if (!(model instanceof Model)) {\n                    model = this._createNewModel(model);\n                }\n                if (this._isServerGrouped()) {\n                    this._data.splice(index, 0, this._wrapInEmptyGroup(model));\n                } else {\n                    this._data.splice(index, 0, model);\n                }\n                this._insertModelInRange(index, model);\n                return model;\n            },\n            pushInsert: function (index, items) {\n                var that = this;\n                var rangeSpan = that._getCurrentRangeSpan();\n                if (!items) {\n                    items = index;\n                    index = 0;\n                }\n                if (!isArray(items)) {\n                    items = [items];\n                }\n                var pushed = [];\n                var autoSync = this.options.autoSync;\n                this.options.autoSync = false;\n                try {\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items[idx];\n                        var result = this.insert(index, item);\n                        pushed.push(result);\n                        var pristine = result.toJSON();\n                        if (this._isServerGrouped()) {\n                            pristine = this._wrapInEmptyGroup(pristine);\n                        }\n                        this._pristineData.push(pristine);\n                        if (rangeSpan && rangeSpan.length) {\n                            $(rangeSpan).last()[0].pristineData.push(pristine);\n                        }\n                        index++;\n                    }\n                } finally {\n                    this.options.autoSync = autoSync;\n                }\n                if (pushed.length) {\n                    this.trigger('push', {\n                        type: 'create',\n                        items: pushed\n                    });\n                }\n            },\n            pushCreate: function (items) {\n                this.pushInsert(this._data.length, items);\n            },\n            pushUpdate: function (items) {\n                if (!isArray(items)) {\n                    items = [items];\n                }\n                var pushed = [];\n                for (var idx = 0; idx < items.length; idx++) {\n                    var item = items[idx];\n                    var model = this._createNewModel(item);\n                    var target = this.get(model.id);\n                    if (target) {\n                        pushed.push(target);\n                        target.accept(item);\n                        target.trigger(CHANGE);\n                        this._updatePristineForModel(target, item);\n                    } else {\n                        this.pushCreate(item);\n                    }\n                }\n                if (pushed.length) {\n                    this.trigger('push', {\n                        type: 'update',\n                        items: pushed\n                    });\n                }\n            },\n            pushDestroy: function (items) {\n                var pushed = this._removeItems(items);\n                if (pushed.length) {\n                    this.trigger('push', {\n                        type: 'destroy',\n                        items: pushed\n                    });\n                }\n            },\n            _removeItems: function (items, removePristine) {\n                if (!isArray(items)) {\n                    items = [items];\n                }\n                var shouldRemovePristine = typeof removePristine !== 'undefined' ? removePristine : true;\n                var destroyed = [];\n                var autoSync = this.options.autoSync;\n                this.options.autoSync = false;\n                try {\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items[idx];\n                        var model = this._createNewModel(item);\n                        var found = false;\n                        this._eachItem(this._data, function (items) {\n                            for (var idx = 0; idx < items.length; idx++) {\n                                var item = items.at(idx);\n                                if (item.id === model.id) {\n                                    destroyed.push(item);\n                                    items.splice(idx, 1);\n                                    found = true;\n                                    break;\n                                }\n                            }\n                        });\n                        if (found && shouldRemovePristine) {\n                            this._removePristineForModel(model);\n                            this._destroyed.pop();\n                        }\n                    }\n                } finally {\n                    this.options.autoSync = autoSync;\n                }\n                return destroyed;\n            },\n            remove: function (model) {\n                var result, that = this, hasGroups = that._isServerGrouped();\n                this._eachItem(that._data, function (items) {\n                    result = removeModel(items, model);\n                    if (result && hasGroups) {\n                        if (!result.isNew || !result.isNew()) {\n                            that._destroyed.push(result);\n                        }\n                        return true;\n                    }\n                });\n                this._removeModelFromRanges(model);\n                return model;\n            },\n            destroyed: function () {\n                return this._destroyed;\n            },\n            created: function () {\n                var idx, length, result = [], data = this._flatData(this._data, this.options.useRanges);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].isNew && data[idx].isNew()) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            updated: function () {\n                var idx, length, result = [], data = this._flatData(this._data, this.options.useRanges);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].isNew && !data[idx].isNew() && data[idx].dirty) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            sync: function () {\n                var that = this, created = [], updated = [], destroyed = that._destroyed;\n                var promise = $.Deferred().resolve().promise();\n                if (that.online()) {\n                    if (!that.reader.model) {\n                        return promise;\n                    }\n                    created = that.created();\n                    updated = that.updated();\n                    var promises = [];\n                    if (that.options.batch && that.transport.submit) {\n                        promises = that._sendSubmit(created, updated, destroyed);\n                    } else {\n                        promises.push.apply(promises, that._send('create', created));\n                        promises.push.apply(promises, that._send('update', updated));\n                        promises.push.apply(promises, that._send('destroy', destroyed));\n                    }\n                    promise = $.when.apply(null, promises).then(function () {\n                        var idx, length;\n                        for (idx = 0, length = arguments.length; idx < length; idx++) {\n                            if (arguments[idx]) {\n                                that._accept(arguments[idx]);\n                            }\n                        }\n                        that._storeData(true);\n                        that._syncEnd();\n                        that._change({ action: 'sync' });\n                        that.trigger(SYNC);\n                        if (that._isServerGroupPaged()) {\n                            that.read();\n                        }\n                    });\n                } else {\n                    that._storeData(true);\n                    that._syncEnd();\n                    that._change({ action: 'sync' });\n                }\n                return promise;\n            },\n            _syncEnd: noop,\n            cancelChanges: function (model) {\n                var that = this;\n                if (model instanceof kendo.data.Model) {\n                    that._cancelModel(model);\n                } else {\n                    that._destroyed = [];\n                    that._detachObservableParents();\n                    that._data = that._observe(that._pristineData);\n                    if (that.options.serverPaging) {\n                        that._total = that._pristineTotal;\n                    }\n                    that._ranges = [];\n                    that._addRange(that._data, 0);\n                    that._changesCanceled();\n                    that._change();\n                    that._markOfflineUpdatesAsDirty();\n                    if (that._isServerGrouped()) {\n                        that.read();\n                    }\n                }\n            },\n            _changesCanceled: noop,\n            _markOfflineUpdatesAsDirty: function () {\n                var that = this;\n                if (that.options.offlineStorage != null) {\n                    that._eachItem(that._data, function (items) {\n                        for (var idx = 0; idx < items.length; idx++) {\n                            var item = items.at(idx);\n                            if (item.__state__ == 'update' || item.__state__ == 'create') {\n                                item.dirty = true;\n                            }\n                        }\n                    });\n                }\n            },\n            hasChanges: function () {\n                var idx, length, data = this._flatData(this._data, this.options.useRanges);\n                if (this._destroyed.length) {\n                    return true;\n                }\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].isNew && data[idx].isNew() || data[idx].dirty) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _accept: function (result) {\n                var that = this, models = result.models, response = result.response, idx = 0, serverGroup = that._isServerGrouped(), pristine = that._pristineData, type = result.type, length;\n                that.trigger(REQUESTEND, {\n                    response: response,\n                    type: type\n                });\n                if (response && !isEmptyObject(response)) {\n                    response = that.reader.parse(response);\n                    if (that._handleCustomErrors(response)) {\n                        return;\n                    }\n                    response = that.reader.data(response);\n                    if (!isArray(response)) {\n                        response = [response];\n                    }\n                } else {\n                    response = $.map(models, function (model) {\n                        return model.toJSON();\n                    });\n                }\n                if (type === 'destroy') {\n                    that._destroyed = [];\n                }\n                for (idx = 0, length = models.length; idx < length; idx++) {\n                    if (type !== 'destroy') {\n                        models[idx].accept(response[idx]);\n                        if (type === 'create') {\n                            pristine.push(serverGroup ? that._wrapInEmptyGroup(models[idx].toJSON()) : response[idx]);\n                        } else if (type === 'update') {\n                            that._updatePristineForModel(models[idx], response[idx]);\n                        }\n                    } else {\n                        that._removePristineForModel(models[idx]);\n                    }\n                }\n            },\n            _updatePristineForModel: function (model, values) {\n                this._executeOnPristineForModel(model, function (index, items) {\n                    kendo.deepExtend(items[index], values);\n                });\n            },\n            _executeOnPristineForModel: function (model, callback) {\n                this._eachPristineItem(function (items) {\n                    var index = indexOfPristineModel(items, model);\n                    if (index > -1) {\n                        callback(index, items);\n                        return true;\n                    }\n                });\n            },\n            _removePristineForModel: function (model) {\n                this._executeOnPristineForModel(model, function (index, items) {\n                    items.splice(index, 1);\n                });\n            },\n            _readData: function (data) {\n                var read = !this._isServerGrouped() ? this.reader.data : this.reader.groups;\n                return read.call(this.reader, data);\n            },\n            _eachPristineItem: function (callback) {\n                var that = this;\n                var options = that.options;\n                var rangeSpan = that._getCurrentRangeSpan();\n                that._eachItem(that._pristineData, callback);\n                if (options.serverPaging && options.useRanges) {\n                    each(rangeSpan, function (i, range) {\n                        that._eachItem(range.pristineData, callback);\n                    });\n                }\n            },\n            _eachItem: function (data, callback) {\n                if (data && data.length) {\n                    if (this._isServerGrouped()) {\n                        eachGroupItems(data, callback);\n                    } else {\n                        callback(data);\n                    }\n                }\n            },\n            _pristineForModel: function (model) {\n                var pristine, idx, callback = function (items) {\n                        idx = indexOfPristineModel(items, model);\n                        if (idx > -1) {\n                            pristine = items[idx];\n                            return true;\n                        }\n                    };\n                this._eachPristineItem(callback);\n                return pristine;\n            },\n            _cancelModel: function (model) {\n                var that = this;\n                var pristine = this._pristineForModel(model);\n                this._eachItem(this._data, function (items) {\n                    var idx = indexOfModel(items, model);\n                    if (idx >= 0) {\n                        if (pristine && (!model.isNew() || pristine.__state__)) {\n                            items[idx].accept(pristine);\n                            if (pristine.__state__ == 'update') {\n                                items[idx].dirty = true;\n                            }\n                        } else {\n                            that._modelCanceled(model);\n                            items.splice(idx, 1);\n                            that._removeModelFromRanges(model);\n                        }\n                    }\n                });\n            },\n            _modelCanceled: noop,\n            _submit: function (promises, data) {\n                var that = this;\n                that.trigger(REQUESTSTART, { type: 'submit' });\n                that.trigger(PROGRESS);\n                that.transport.submit(extend({\n                    success: function (response, type) {\n                        var promise = $.grep(promises, function (x) {\n                            return x.type == type;\n                        })[0];\n                        if (promise) {\n                            promise.resolve({\n                                response: response,\n                                models: promise.models,\n                                type: type\n                            });\n                        }\n                    },\n                    error: function (response, status, error) {\n                        for (var idx = 0; idx < promises.length; idx++) {\n                            promises[idx].reject(response);\n                        }\n                        that.error(response, status, error);\n                    }\n                }, data));\n            },\n            _sendSubmit: function (created, updated, destroyed) {\n                var that = this, promises = [];\n                if (that.options.batch) {\n                    if (created.length) {\n                        promises.push($.Deferred(function (deferred) {\n                            deferred.type = 'create';\n                            deferred.models = created;\n                        }));\n                    }\n                    if (updated.length) {\n                        promises.push($.Deferred(function (deferred) {\n                            deferred.type = 'update';\n                            deferred.models = updated;\n                        }));\n                    }\n                    if (destroyed.length) {\n                        promises.push($.Deferred(function (deferred) {\n                            deferred.type = 'destroy';\n                            deferred.models = destroyed;\n                        }));\n                    }\n                    that._submit(promises, {\n                        data: {\n                            created: that.reader.serialize(toJSON(created)),\n                            updated: that.reader.serialize(toJSON(updated)),\n                            destroyed: that.reader.serialize(toJSON(destroyed))\n                        }\n                    });\n                }\n                return promises;\n            },\n            _promise: function (data, models, type) {\n                var that = this;\n                return $.Deferred(function (deferred) {\n                    that.trigger(REQUESTSTART, { type: type });\n                    that.trigger(PROGRESS);\n                    that.transport[type].call(that.transport, extend({\n                        success: function (response) {\n                            deferred.resolve({\n                                response: response,\n                                models: models,\n                                type: type\n                            });\n                        },\n                        error: function (response, status, error) {\n                            deferred.reject(response);\n                            that.error(response, status, error);\n                        }\n                    }, data));\n                }).promise();\n            },\n            _send: function (method, data) {\n                var that = this, idx, length, promises = [], converted = that.reader.serialize(toJSON(data));\n                if (that.options.batch) {\n                    if (data.length) {\n                        promises.push(that._promise({ data: { models: converted } }, data, method));\n                    }\n                } else {\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        promises.push(that._promise({ data: converted[idx] }, [data[idx]], method));\n                    }\n                }\n                return promises;\n            },\n            read: function (data) {\n                var that = this, params = that._params(data);\n                var deferred = $.Deferred();\n                that._queueRequest(params, function () {\n                    var isPrevented = that.trigger(REQUESTSTART, { type: 'read' });\n                    if (!isPrevented) {\n                        that.trigger(PROGRESS);\n                        that._ranges = [];\n                        that.trigger('reset');\n                        if (that.online()) {\n                            that.transport.read({\n                                data: params,\n                                success: function (data) {\n                                    that._ranges = [];\n                                    that.success(data, params);\n                                    deferred.resolve();\n                                },\n                                error: function () {\n                                    var args = slice.call(arguments);\n                                    that.error.apply(that, args);\n                                    deferred.reject.apply(deferred, args);\n                                }\n                            });\n                        } else if (that.options.offlineStorage != null) {\n                            that.success(that.offlineData(), params);\n                            deferred.resolve();\n                        }\n                    } else {\n                        that._dequeueRequest();\n                        deferred.resolve(isPrevented);\n                    }\n                });\n                return deferred.promise();\n            },\n            _readAggregates: function (data) {\n                return this.reader.aggregates(data);\n            },\n            success: function (data) {\n                var that = this, options = that.options, items, replaceSubset;\n                that.trigger(REQUESTEND, {\n                    response: data,\n                    type: 'read'\n                });\n                if (that.online()) {\n                    data = that.reader.parse(data);\n                    if (that._handleCustomErrors(data)) {\n                        that._dequeueRequest();\n                        return;\n                    }\n                    that._total = that.reader.total(data);\n                    if (that._isServerGroupPaged()) {\n                        that._serverGroupsTotal = that._total;\n                    }\n                    if (that._pageSize > that._total) {\n                        that._pageSize = that._total;\n                        if (that.options.pageSize && that.options.pageSize > that._pageSize) {\n                            that._pageSize = that.options.pageSize;\n                        }\n                    }\n                    if (that._aggregate && options.serverAggregates) {\n                        that._aggregateResult = that._readAggregates(data);\n                    }\n                    data = that._readData(data);\n                    that._destroyed = [];\n                } else {\n                    data = that._readData(data);\n                    items = [];\n                    var itemIds = {};\n                    var model = that.reader.model;\n                    var idField = model ? model.idField : 'id';\n                    var idx;\n                    for (idx = 0; idx < this._destroyed.length; idx++) {\n                        var id = this._destroyed[idx][idField];\n                        itemIds[id] = id;\n                    }\n                    for (idx = 0; idx < data.length; idx++) {\n                        var item = data[idx];\n                        var state = item.__state__;\n                        if (state == 'destroy') {\n                            if (!itemIds[item[idField]]) {\n                                this._destroyed.push(this._createNewModel(item));\n                            }\n                        } else {\n                            items.push(item);\n                        }\n                    }\n                    data = items;\n                    that._total = data.length;\n                }\n                that._pristineTotal = that._total;\n                replaceSubset = that._skip && that._data.length && that._skip < that._data.length;\n                if (that.options.endless) {\n                    if (replaceSubset) {\n                        that._pristineData.splice(that._skip, that._pristineData.length);\n                    }\n                    items = data.slice(0);\n                    for (var j = 0; j < items.length; j++) {\n                        that._pristineData.push(items[j]);\n                    }\n                } else {\n                    that._pristineData = data.slice(0);\n                }\n                that._detachObservableParents();\n                if (that.options.endless) {\n                    that._data.unbind(CHANGE, that._changeHandler);\n                    if (that._isServerGrouped() && that._data[that._data.length - 1].value === data[0].value) {\n                        fillLastGroup(that._data[that._data.length - 1], data[0]);\n                        data.shift();\n                    }\n                    data = that._observe(data);\n                    if (replaceSubset) {\n                        that._data.splice(that._skip, that._data.length);\n                    }\n                    for (var i = 0; i < data.length; i++) {\n                        that._data.push(data[i]);\n                    }\n                    that._data.bind(CHANGE, that._changeHandler);\n                } else {\n                    that._data = that._observe(data);\n                }\n                that._markOfflineUpdatesAsDirty();\n                that._storeData();\n                that._addRange(that._data);\n                that._process(that._data);\n                that._dequeueRequest();\n            },\n            _detachObservableParents: function () {\n                if (this._data && this._shouldDetachObservableParents) {\n                    for (var idx = 0; idx < this._data.length; idx++) {\n                        if (this._data[idx].parent) {\n                            this._data[idx].parent = noop;\n                        }\n                    }\n                }\n            },\n            _storeData: function (updatePristine) {\n                var serverGrouping = this._isServerGrouped();\n                var model = this.reader.model;\n                function items(data) {\n                    var state = [];\n                    for (var idx = 0; idx < data.length; idx++) {\n                        var dataItem = data.at(idx);\n                        var item = dataItem.toJSON();\n                        if (serverGrouping && dataItem.items) {\n                            item.items = items(dataItem.items);\n                        } else {\n                            item.uid = dataItem.uid;\n                            if (model) {\n                                if (dataItem.isNew()) {\n                                    item.__state__ = 'create';\n                                } else if (dataItem.dirty) {\n                                    item.__state__ = 'update';\n                                }\n                            }\n                        }\n                        state.push(item);\n                    }\n                    return state;\n                }\n                if (this.options.offlineStorage != null) {\n                    var state = items(this._data);\n                    var destroyed = [];\n                    for (var idx = 0; idx < this._destroyed.length; idx++) {\n                        var item = this._destroyed[idx].toJSON();\n                        item.__state__ = 'destroy';\n                        destroyed.push(item);\n                    }\n                    this.offlineData(state.concat(destroyed));\n                    if (updatePristine) {\n                        this._pristineData = this.reader.reader ? this.reader.reader._wrapDataAccessBase(state) : this.reader._wrapDataAccessBase(state);\n                    }\n                }\n            },\n            _addRange: function (data, skip) {\n                var that = this, start = typeof skip !== 'undefined' ? skip : that._skip || 0, end, range = {\n                        data: data,\n                        pristineData: data.toJSON(),\n                        timestamp: that._timeStamp()\n                    };\n                if (this._isGroupPaged()) {\n                    end = start + data.length;\n                    range.outerStart = start;\n                    range.outerEnd = end;\n                } else {\n                    end = start + that._flatData(data, true).length;\n                }\n                range.start = start;\n                range.end = end;\n                that._ranges.push(range);\n                that._sortRanges();\n                if (that._isGroupPaged()) {\n                    if (!that._groupsFlat) {\n                        that._groupsFlat = [];\n                    }\n                    that._appendToGroupsFlat(range.data);\n                    that._updateOuterRangesLength();\n                }\n            },\n            _appendToGroupsFlat: function (data) {\n                var length = data.length;\n                for (var i = 0; i < length; i++) {\n                    this._groupsFlat.push(data[i]);\n                }\n            },\n            _getGroupByUid: function (uid) {\n                var length = this._groupsFlat.length;\n                var group;\n                for (var i = 0; i < length; i++) {\n                    group = this._groupsFlat[i];\n                    if (group.uid === uid) {\n                        return group;\n                    }\n                }\n            },\n            _sortRanges: function () {\n                this._ranges.sort(function (x, y) {\n                    return x.start - y.start;\n                });\n            },\n            error: function (xhr, status, errorThrown) {\n                this._dequeueRequest();\n                this.trigger(REQUESTEND, {});\n                this.trigger(ERROR, {\n                    xhr: xhr,\n                    status: status,\n                    errorThrown: errorThrown\n                });\n            },\n            _params: function (data) {\n                var that = this, options = extend({\n                        take: that.take(),\n                        skip: that.skip(),\n                        page: that.page(),\n                        pageSize: that.pageSize(),\n                        sort: that._sort,\n                        filter: that._filter,\n                        group: that._group,\n                        aggregate: that._aggregate,\n                        groupPaging: !!that._groupPaging\n                    }, data);\n                if (!that.options.serverPaging) {\n                    delete options.take;\n                    delete options.skip;\n                    delete options.page;\n                    delete options.pageSize;\n                }\n                if (!that.options.serverGrouping) {\n                    delete options.group;\n                } else if (that.reader.model && options.group) {\n                    options.group = convertDescriptorsField(options.group, that.reader.model);\n                }\n                if (!that.options.serverFiltering) {\n                    delete options.filter;\n                } else if (that.reader.model && options.filter) {\n                    options.filter = convertFilterDescriptorsField(options.filter, that.reader.model);\n                }\n                if (!that.options.serverSorting) {\n                    delete options.sort;\n                } else if (that.reader.model && options.sort) {\n                    options.sort = convertDescriptorsField(options.sort, that.reader.model);\n                }\n                if (!that.options.serverAggregates) {\n                    delete options.aggregate;\n                } else if (that.reader.model && options.aggregate) {\n                    options.aggregate = convertDescriptorsField(options.aggregate, that.reader.model);\n                }\n                if (!that.options.groupPaging) {\n                    delete options.groupPaging;\n                }\n                return options;\n            },\n            _queueRequest: function (options, callback) {\n                var that = this;\n                if (!that._requestInProgress) {\n                    that._requestInProgress = true;\n                    that._pending = undefined;\n                    callback();\n                } else {\n                    that._pending = {\n                        callback: proxy(callback, that),\n                        options: options\n                    };\n                }\n            },\n            _dequeueRequest: function () {\n                var that = this;\n                that._requestInProgress = false;\n                if (that._pending) {\n                    that._queueRequest(that._pending.options, that._pending.callback);\n                }\n            },\n            _handleCustomErrors: function (response) {\n                if (this.reader.errors) {\n                    var errors = this.reader.errors(response);\n                    if (errors) {\n                        this.trigger(ERROR, {\n                            xhr: null,\n                            status: 'customerror',\n                            errorThrown: 'custom error',\n                            errors: errors\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _shouldWrap: function (data) {\n                var model = this.reader.model;\n                if (model && data.length) {\n                    return !(data[0] instanceof model);\n                }\n                return false;\n            },\n            _observe: function (data) {\n                var that = this, model = that.reader.model;\n                that._shouldDetachObservableParents = true;\n                if (data instanceof ObservableArray) {\n                    that._shouldDetachObservableParents = false;\n                    if (that._shouldWrap(data)) {\n                        data.type = that.reader.model;\n                        data.wrapAll(data, data);\n                    }\n                } else {\n                    var arrayType = that.pageSize() && !that.options.serverPaging ? LazyObservableArray : ObservableArray;\n                    data = new arrayType(data, that.reader.model);\n                    data.parent = function () {\n                        return that.parent();\n                    };\n                }\n                if (that._isServerGrouped()) {\n                    wrapGroupItems(data, model);\n                }\n                if (that._changeHandler && that._data && that._data instanceof ObservableArray && !(that.options.useRanges && that.options.serverPaging)) {\n                    that._data.unbind(CHANGE, that._changeHandler);\n                } else {\n                    that._changeHandler = proxy(that._change, that);\n                }\n                return data.bind(CHANGE, that._changeHandler);\n            },\n            _updateTotalForAction: function (action, items) {\n                var that = this;\n                var total = parseInt(that._total, 10);\n                if (!isNumber(that._total)) {\n                    total = parseInt(that._pristineTotal, 10);\n                }\n                if (action === 'add') {\n                    total += items.length;\n                } else if (action === 'remove') {\n                    total -= items.length;\n                } else if (action !== 'itemchange' && action !== 'sync' && !that.options.serverPaging) {\n                    total = that._pristineTotal;\n                } else if (action === 'sync') {\n                    total = that._pristineTotal = parseInt(that._total, 10);\n                }\n                that._total = total;\n            },\n            _change: function (e) {\n                var that = this, idx, length, action = e ? e.action : '';\n                if (action === 'remove') {\n                    for (idx = 0, length = e.items.length; idx < length; idx++) {\n                        if (!e.items[idx].isNew || !e.items[idx].isNew()) {\n                            that._destroyed.push(e.items[idx]);\n                        }\n                    }\n                }\n                if (that.options.autoSync && (action === 'add' || action === 'remove' || action === 'itemchange')) {\n                    var handler = function (args) {\n                        if (args.action === 'sync') {\n                            that.unbind('change', handler);\n                            that._updateTotalForAction(action, e.items);\n                        }\n                    };\n                    that.first('change', handler);\n                    that.sync();\n                } else {\n                    that._updateTotalForAction(action, e ? e.items : []);\n                    that._process(that._data, e);\n                }\n            },\n            _calculateAggregates: function (data, options) {\n                options = options || {};\n                var query = new Query(data), aggregates = options.aggregate, filter = options.filter;\n                if (filter) {\n                    query = query.filter(filter);\n                }\n                return query.aggregate(aggregates);\n            },\n            _process: function (data, e) {\n                var that = this, options = {}, result;\n                if (that.options.serverPaging !== true) {\n                    options.skip = that._skip;\n                    options.take = that._take || that._pageSize;\n                    if (options.skip === undefined && that._page !== undefined && that._pageSize !== undefined) {\n                        options.skip = (that._page - 1) * that._pageSize;\n                    }\n                    if (that.options.useRanges) {\n                        options.skip = that.currentRangeStart();\n                    }\n                }\n                if (that.options.serverSorting !== true) {\n                    options.sort = that._sort;\n                }\n                if (that.options.serverFiltering !== true) {\n                    options.filter = that._filter;\n                }\n                if (that.options.serverGrouping !== true) {\n                    options.group = that._group;\n                }\n                if (that.options.serverAggregates !== true) {\n                    options.aggregate = that._aggregate;\n                }\n                if (that.options.serverGrouping) {\n                    that._clearEmptyGroups(data);\n                }\n                options.groupPaging = that._groupPaging;\n                if (that._isGroupPaged() && e && (e.action === 'page' || e.action === 'expandGroup' || e.action === 'collapseGroup')) {\n                    result = that._queryProcess(data, { aggregate: that._aggregate });\n                } else {\n                    result = that._queryProcess(data, options);\n                }\n                if (that.options.serverAggregates !== true) {\n                    that._aggregateResult = that._calculateAggregates(result.dataToAggregate || data, options);\n                }\n                that._setView(result, options, e);\n                that._setFilterTotal(result.total, false);\n                e = e || {};\n                e.items = e.items || that._view;\n                that.trigger(CHANGE, e);\n            },\n            _setView: function (result, options, e) {\n                var that = this;\n                if (that._isGroupPaged() && !that._isServerGrouped()) {\n                    if (e && (e.action === 'page' || e.action === 'expandGroup' || e.action === 'collapseGroup')) {\n                        that.view(result.data);\n                        that._updateOuterRangesLength();\n                    } else {\n                        that._ranges = [];\n                        var query = new Query(result.data);\n                        that._addRange(that._observe(result.data));\n                        if (options.skip + options.take > result.data.length) {\n                            options.skip = result.data.length - options.take;\n                        }\n                        that.view(query.range(options.skip, options.take).toArray());\n                    }\n                } else {\n                    that.view(result.data);\n                }\n            },\n            _clearEmptyGroups: function (data) {\n                for (var idx = data.length - 1; idx >= 0; idx--) {\n                    var group = data[idx];\n                    if (group.hasSubgroups) {\n                        this._clearEmptyGroups(group.items);\n                    } else {\n                        if (group.items && !group.items.length) {\n                            splice.apply(group.parent(), [\n                                idx,\n                                1\n                            ]);\n                        }\n                    }\n                }\n            },\n            _queryProcess: function (data, options) {\n                if (this.options.inPlaceSort) {\n                    return Query.process(data, options, this.options.inPlaceSort);\n                } else {\n                    return Query.process(data, options);\n                }\n            },\n            _mergeState: function (options) {\n                var that = this;\n                if (options !== undefined) {\n                    that._pageSize = options.pageSize;\n                    that._page = options.page;\n                    that._sort = options.sort;\n                    that._filter = options.filter;\n                    that._group = options.group;\n                    that._aggregate = options.aggregate;\n                    that._skip = that._currentRangeStart = options.skip;\n                    that._take = options.take;\n                    if (that._skip === undefined) {\n                        that._skip = that._currentRangeStart = that.skip();\n                        options.skip = that.skip();\n                    }\n                    if (that._take === undefined && that._pageSize !== undefined) {\n                        that._take = that._pageSize;\n                        options.take = that._take;\n                    }\n                    if (options.sort) {\n                        that._sort = options.sort = normalizeSort(options.sort);\n                        that._sortFields = sortFields(options.sort);\n                    }\n                    if (options.filter) {\n                        that._filter = options.filter = that.options.accentFoldingFiltering && !$.isEmptyObject(options.filter) ? $.extend({}, normalizeFilter(options.filter), { accentFoldingFiltering: that.options.accentFoldingFiltering }) : normalizeFilter(options.filter);\n                    }\n                    if (options.group) {\n                        that._group = options.group = normalizeGroup(options.group);\n                    }\n                    if (options.aggregate) {\n                        that._aggregate = options.aggregate = normalizeAggregate(options.aggregate);\n                    }\n                }\n                return options;\n            },\n            query: function (options) {\n                var result;\n                var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n                if (remote || (this._data === undefined || this._data.length === 0) && !this._destroyed.length) {\n                    if (this.options.endless) {\n                        var moreItemsCount = options.pageSize - this.pageSize();\n                        if (moreItemsCount > 0) {\n                            moreItemsCount = this.pageSize();\n                            options.page = options.pageSize / moreItemsCount;\n                            options.pageSize = moreItemsCount;\n                        } else {\n                            options.page = 1;\n                            this.options.endless = false;\n                        }\n                    }\n                    return this.read(this._mergeState(options));\n                }\n                var isPrevented = this.trigger(REQUESTSTART, { type: 'read' });\n                if (!isPrevented) {\n                    this.trigger(PROGRESS);\n                    if (options) {\n                        options.groupPaging = this._groupPaging;\n                    }\n                    result = this._queryProcess(this._data, this._mergeState(options));\n                    this._setFilterTotal(result.total, true);\n                    this._aggregateResult = this._calculateAggregates(result.dataToAggregate || this._data, options);\n                    this._setView(result, options);\n                    this.trigger(REQUESTEND, { type: 'read' });\n                    this.trigger(CHANGE, {\n                        items: result.data,\n                        action: options ? options.action : ''\n                    });\n                }\n                return $.Deferred().resolve(isPrevented).promise();\n            },\n            _hasExpandedSubGroups: function (group) {\n                var result = false;\n                var length = group.items ? group.items.length : 0;\n                if (!group.hasSubgroups) {\n                    return false;\n                }\n                for (var i = 0; i < length; i++) {\n                    if (this._groupsState[group.items[i].uid]) {\n                        result = true;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _findGroupedRange: function (data, result, options, parents, callback) {\n                var that = this;\n                var length = data.length;\n                var group;\n                var current;\n                var itemsLength;\n                var hasNotRequestedItems;\n                var groupCount;\n                var itemsToSkip;\n                for (var i = 0; i < length; i++) {\n                    group = data[i];\n                    if (options.taken >= options.take) {\n                        break;\n                    }\n                    if (!that._getGroupByUid(group.uid)) {\n                        that._groupsFlat.push(group);\n                    }\n                    if (that._groupsState[group.uid]) {\n                        if (that._isServerGroupPaged()) {\n                            if (group.hasSubgroups && !group.subgroupCount) {\n                                that.getGroupSubGroupCount(group, options, parents, callback);\n                                that._fetchingGroupItems = true;\n                                return;\n                            }\n                            groupCount = (group.subgroupCount || group.itemCount) + 1;\n                            itemsToSkip = options.skip - options.skipped;\n                            hasNotRequestedItems = !group.items || group.items.length - itemsToSkip < options.take - options.taken;\n                            if (!that._hasExpandedSubGroups(group) && itemsToSkip > groupCount) {\n                                options.skipped += groupCount;\n                                continue;\n                            }\n                            if (group.hasSubgroups && (!group.items || hasNotRequestedItems && group.items.length < group.subgroupCount) || !group.hasSubgroups && (!group.items || hasNotRequestedItems && group.items.length < group.itemCount)) {\n                                that.getGroupItems(group, options, parents, callback);\n                                that._fetchingGroupItems = true;\n                                return;\n                            }\n                        }\n                        if (options.includeParents && options.skipped < options.skip) {\n                            options.skipped++;\n                            group.excludeHeader = true;\n                        } else if (options.includeParents) {\n                            options.taken++;\n                        }\n                        if (group.hasSubgroups && group.items && group.items.length) {\n                            group.currentItems = [];\n                            if (!parents) {\n                                parents = [];\n                            }\n                            parents.push(group);\n                            that._findGroupedRange(group.items, group.currentItems, options, parents, callback);\n                            parents.pop();\n                            if (group.currentItems.length || options.taken > 0) {\n                                result.push(group);\n                            } else {\n                                group.excludeHeader = false;\n                            }\n                        } else {\n                            current = [];\n                            itemsLength = group.items.length;\n                            for (var j = 0; j < itemsLength; j++) {\n                                if (options.skipped < options.skip) {\n                                    options.skipped++;\n                                    continue;\n                                }\n                                if (options.taken >= options.take) {\n                                    break;\n                                }\n                                current.push(group.items[j]);\n                                options.taken++;\n                            }\n                            if (current.length || options.taken > 0) {\n                                group.currentItems = current;\n                                result.push(group);\n                            } else {\n                                group.excludeHeader = false;\n                            }\n                        }\n                    } else {\n                        if (options.skipped < options.skip) {\n                            options.skipped++;\n                            continue;\n                        }\n                        result.push(group);\n                        options.taken++;\n                    }\n                }\n            },\n            getGroupItems: function (group, options, parents, callback) {\n                var that = this;\n                var skip;\n                var take;\n                var filter;\n                var data;\n                var subgroups;\n                if (!group.items) {\n                    group.items = [];\n                }\n                skip = group.items.length;\n                take = that.take();\n                filter = this._composeItemsFilter(group, parents);\n                data = {\n                    page: math.floor((skip || 0) / (take || 1)) || 1,\n                    pageSize: take,\n                    skip: skip,\n                    take: take,\n                    filter: filter,\n                    aggregate: that._aggregate,\n                    sort: that._sort\n                };\n                subgroups = that.findSubgroups(group);\n                if (subgroups && subgroups.length) {\n                    data.group = subgroups;\n                    data.groupPaging = true;\n                }\n                clearTimeout(that._timeout);\n                that._timeout = setTimeout(function () {\n                    that._queueRequest(data, function () {\n                        if (!that.trigger(REQUESTSTART, { type: 'read' })) {\n                            that.transport.read({\n                                data: data,\n                                success: that._groupItemsSuccessHandler(group, options.skip, that.take(), callback),\n                                error: function () {\n                                    var args = slice.call(arguments);\n                                    that.error.apply(that, args);\n                                }\n                            });\n                        } else {\n                            that._dequeueRequest();\n                        }\n                    });\n                }, 100);\n            },\n            getGroupSubGroupCount: function (group, options, parents, callback) {\n                var that = this;\n                var filter;\n                var groupIndex;\n                var data;\n                if (!group.items) {\n                    group.items = [];\n                }\n                filter = this._composeItemsFilter(group, parents);\n                groupIndex = this._group.map(function (g) {\n                    return g.field;\n                }).indexOf(group.field);\n                data = {\n                    filter: filter,\n                    group: [that._group[groupIndex + 1]],\n                    groupPaging: true,\n                    includeSubGroupCount: true\n                };\n                clearTimeout(that._timeout);\n                that._timeout = setTimeout(function () {\n                    that._queueRequest(data, function () {\n                        if (!that.trigger(REQUESTSTART, { type: 'read' })) {\n                            that.transport.read({\n                                data: data,\n                                success: that._subGroupCountSuccessHandler(group, options.skip, that.take(), callback),\n                                error: function () {\n                                    var args = slice.call(arguments);\n                                    that.error.apply(that, args);\n                                }\n                            });\n                        } else {\n                            that._dequeueRequest();\n                        }\n                    });\n                }, 100);\n            },\n            _subGroupCountSuccessHandler: function (group, skip, take, callback) {\n                var that = this;\n                callback = isFunction(callback) ? callback : noop;\n                var totalField = that.options.schema && that.options.schema.total ? that.options.schema.total : 'Total';\n                return function (data) {\n                    that._dequeueRequest();\n                    that.trigger(REQUESTEND, {\n                        response: data,\n                        type: 'read'\n                    });\n                    that._fetchingGroupItems = false;\n                    if (isFunction(totalField)) {\n                        group.subgroupCount = totalField(data);\n                    } else {\n                        group.subgroupCount = data[totalField];\n                    }\n                    that.range(skip, take, callback, 'expandGroup');\n                };\n            },\n            _groupItemsSuccessHandler: function (group, skip, take, callback) {\n                var that = this;\n                var timestamp = that._timeStamp();\n                callback = isFunction(callback) ? callback : noop;\n                return function (data) {\n                    var temp;\n                    var model = Model.define(that.options.schema.model);\n                    that._dequeueRequest();\n                    that.trigger(REQUESTEND, {\n                        response: data,\n                        type: 'read'\n                    });\n                    data = that.reader.parse(data);\n                    if (group.hasSubgroups) {\n                        temp = that.reader.groups(data);\n                    } else {\n                        temp = that.reader.data(data);\n                        temp = temp.map(function (item) {\n                            return new model(item);\n                        });\n                    }\n                    group.items.omitChangeEvent = true;\n                    for (var i = 0; i < temp.length; i++) {\n                        group.items.push(temp[i]);\n                    }\n                    group.items.omitChangeEvent = false;\n                    that._updateRangePristineData(group);\n                    that._fetchingGroupItems = false;\n                    that._serverGroupsTotal += temp.length;\n                    that.range(skip, take, callback, 'expandGroup');\n                    if (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress) {\n                        that.trigger(CHANGE, {});\n                    }\n                };\n            },\n            findSubgroups: function (group) {\n                var indexOfCurrentGroup = this._group.map(function (g) {\n                    return g.field;\n                }).indexOf(group.field);\n                return this._group.slice(indexOfCurrentGroup + 1, this._group.length);\n            },\n            _composeItemsFilter: function (group, parents) {\n                var filter = this.filter() || {\n                    logic: 'and',\n                    filters: []\n                };\n                filter = extend(true, {}, filter);\n                filter.filters.push({\n                    field: group.field,\n                    operator: 'eq',\n                    value: group.value\n                });\n                if (parents) {\n                    for (var i = 0; i < parents.length; i++) {\n                        filter.filters.push({\n                            field: parents[i].field,\n                            operator: 'eq',\n                            value: parents[i].value\n                        });\n                    }\n                }\n                return filter;\n            },\n            _updateRangePristineData: function (group) {\n                var that = this;\n                var ranges = that._ranges;\n                var rangesLength = ranges.length;\n                var temp;\n                var currentGroup;\n                var range;\n                var dataLength;\n                var indexes;\n                for (var i = 0; i < rangesLength; i++) {\n                    range = ranges[i];\n                    dataLength = range.data.length;\n                    indexes = [];\n                    for (var j = 0; j < dataLength; j++) {\n                        currentGroup = range.data[j];\n                        indexes.push(j);\n                        if (currentGroup.uid === group.uid || currentGroup.hasSubgroups && currentGroup.items.length && that._containsSubGroup(currentGroup, group, indexes)) {\n                            break;\n                        }\n                        indexes.pop();\n                    }\n                    if (indexes.length) {\n                        temp = ranges[i].pristineData;\n                        while (indexes.length > 1) {\n                            temp = temp[indexes.splice(0, 1)[0]].items;\n                        }\n                        temp[indexes[0]] = that._cloneGroup(group);\n                        break;\n                    }\n                }\n            },\n            _containsSubGroup: function (group, subgroup, indexes) {\n                var that = this;\n                var length = group.items.length;\n                var currentSubGroup;\n                if (group.hasSubgroups && length) {\n                    for (var i = 0; i < length; i++) {\n                        currentSubGroup = group.items[i];\n                        indexes.push(i);\n                        if (currentSubGroup.uid === subgroup.uid) {\n                            return true;\n                        } else if (currentSubGroup.hasSubgroups && currentSubGroup.items.length) {\n                            return that._containsSubGroup(currentSubGroup, subgroup, indexes);\n                        }\n                        indexes.pop();\n                    }\n                }\n            },\n            _cloneGroup: function (group) {\n                var that = this;\n                group = typeof group.toJSON == 'function' ? group.toJSON() : group;\n                if (group.items && group.items.length) {\n                    group.items = group.items.map(function (item) {\n                        return that._cloneGroup(item);\n                    });\n                }\n                return group;\n            },\n            _setFilterTotal: function (filterTotal, setDefaultValue) {\n                var that = this;\n                if (!that.options.serverFiltering) {\n                    if (filterTotal !== undefined) {\n                        that._total = filterTotal;\n                    } else if (setDefaultValue) {\n                        that._total = that._data.length;\n                    }\n                }\n            },\n            fetch: function (callback) {\n                var that = this;\n                var fn = function (isPrevented) {\n                    if (isPrevented !== true && isFunction(callback)) {\n                        callback.call(that);\n                    }\n                };\n                return this._query().done(fn);\n            },\n            _query: function (options) {\n                var that = this;\n                return that.query(extend({}, {\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that.sort(),\n                    filter: that.filter(),\n                    group: that.group(),\n                    aggregate: that.aggregate()\n                }, options));\n            },\n            next: function (options) {\n                var that = this, page = that.page(), total = that.total();\n                options = options || {};\n                if (!page || total && page + 1 > that.totalPages()) {\n                    return;\n                }\n                that._skip = that._currentRangeStart = page * that.take();\n                page += 1;\n                options.page = page;\n                that._query(options);\n                return page;\n            },\n            prev: function (options) {\n                var that = this, page = that.page();\n                options = options || {};\n                if (!page || page === 1) {\n                    return;\n                }\n                that._skip = that._currentRangeStart = that._skip - that.take();\n                page -= 1;\n                options.page = page;\n                that._query(options);\n                return page;\n            },\n            page: function (val) {\n                var that = this, skip;\n                if (val !== undefined) {\n                    val = math.max(math.min(math.max(val, 1), that.totalPages()), 1);\n                    var take = that.take();\n                    if (that._isGroupPaged()) {\n                        val -= 1;\n                        that.range(val * take, take, null, 'page');\n                        return;\n                    }\n                    that._query(that._pageableQueryOptions({ page: val }));\n                    return;\n                }\n                skip = that.skip();\n                return skip !== undefined ? math.round((skip || 0) / (that.take() || 1)) + 1 : undefined;\n            },\n            pageSize: function (val) {\n                var that = this;\n                if (val !== undefined) {\n                    that._query(that._pageableQueryOptions({\n                        pageSize: val,\n                        page: 1\n                    }));\n                    return;\n                }\n                return that.take();\n            },\n            sort: function (val) {\n                var that = this;\n                if (val !== undefined) {\n                    that.trigger('sort');\n                    that._query({ sort: val });\n                    return;\n                }\n                return that._sort;\n            },\n            filter: function (val) {\n                var that = this;\n                if (val === undefined) {\n                    return that._filter;\n                }\n                that.trigger('reset');\n                that._query({\n                    filter: val,\n                    page: 1\n                });\n            },\n            group: function (val) {\n                var that = this;\n                var options = { group: val };\n                if (that._groupPaging) {\n                    options.page = 1;\n                }\n                if (val !== undefined) {\n                    that._query(options);\n                    return;\n                }\n                return that._group;\n            },\n            getGroupsFlat: function (data) {\n                var idx, result = [], length;\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    var group = data[idx];\n                    if (group.hasSubgroups) {\n                        result = result.concat(this.getGroupsFlat(group.items));\n                    }\n                    result.push(group);\n                }\n                return result;\n            },\n            total: function () {\n                return parseInt(this._total || 0, 10);\n            },\n            groupsTotal: function (includeExpanded) {\n                var that = this;\n                if (!that._group.length) {\n                    return that.total();\n                }\n                if (that._isServerGrouped()) {\n                    if (that._serverGroupsTotal) {\n                        return that._serverGroupsTotal;\n                    }\n                    that._serverGroupsTotal = that.total();\n                    return that._serverGroupsTotal;\n                }\n                return that._calculateGroupsTotal(that._ranges.length ? that._ranges[0].data : [], includeExpanded);\n            },\n            _calculateGroupsTotal: function (groups, includeExpanded, itemsField, ignoreState) {\n                var that = this;\n                itemsField = itemsField || 'items';\n                var total;\n                var length;\n                if (that._group.length && groups) {\n                    total = 0;\n                    length = groups.length;\n                    for (var i = 0; i < length; i++) {\n                        total += that.groupCount(groups[i], includeExpanded, itemsField, ignoreState);\n                    }\n                    that._groupsTotal = total;\n                    return total;\n                }\n                that._groupsTotal = that._data.length;\n                return that._groupsTotal;\n            },\n            groupCount: function (group, includeExpanded, itemsField, ignoreState) {\n                var that = this;\n                var total = 0;\n                if (group.hasSubgroups && that._groupsState[group.uid]) {\n                    if (includeExpanded && !group.excludeHeader || ignoreState) {\n                        total += 1;\n                    }\n                    group[itemsField].forEach(function (subgroup) {\n                        total += that.groupCount(subgroup, includeExpanded, itemsField, ignoreState);\n                    });\n                } else {\n                    if (that._groupsState[group.uid]) {\n                        if (includeExpanded && !group.excludeHeader || ignoreState) {\n                            total++;\n                        }\n                        total += group[itemsField] ? group[itemsField].length : 0;\n                    } else {\n                        total++;\n                    }\n                }\n                return total;\n            },\n            countGroupRange: function (range) {\n                var total = 0;\n                var length = range.length;\n                for (var i = 0; i < length; i++) {\n                    total += this.groupCount(range[i], true);\n                }\n                return total;\n            },\n            aggregate: function (val) {\n                var that = this;\n                if (val !== undefined) {\n                    that._query({ aggregate: val });\n                    return;\n                }\n                return that._aggregate;\n            },\n            aggregates: function () {\n                var result = this._aggregateResult;\n                if (isEmptyObject(result)) {\n                    result = this._emptyAggregates(this.aggregate());\n                }\n                return result;\n            },\n            _emptyAggregates: function (aggregates) {\n                var result = {};\n                if (!isEmptyObject(aggregates)) {\n                    var aggregate = {};\n                    if (!isArray(aggregates)) {\n                        aggregates = [aggregates];\n                    }\n                    for (var idx = 0; idx < aggregates.length; idx++) {\n                        aggregate[aggregates[idx].aggregate] = 0;\n                        result[aggregates[idx].field] = aggregate;\n                    }\n                }\n                return result;\n            },\n            _pageableQueryOptions: function (options) {\n                return options;\n            },\n            _wrapInEmptyGroup: function (model) {\n                var groups = this.group(), parent, group, idx, length;\n                for (idx = groups.length - 1, length = 0; idx >= length; idx--) {\n                    group = groups[idx];\n                    parent = {\n                        value: model.get ? model.get(group.field) : model[group.field],\n                        field: group.field,\n                        items: parent ? [parent] : [model],\n                        hasSubgroups: !!parent,\n                        aggregates: this._emptyAggregates(group.aggregates)\n                    };\n                }\n                return parent;\n            },\n            totalPages: function () {\n                var that = this, pageSize = that.pageSize() || that.total(), total = that._isGroupPaged() ? that.groupsTotal(true) : that.total();\n                return math.ceil((total || 0) / pageSize);\n            },\n            inRange: function (skip, take) {\n                var that = this, end = math.min(skip + take, that.total());\n                if (!that.options.serverPaging && that._data.length > 0) {\n                    return true;\n                }\n                return that._findRange(skip, end).length > 0;\n            },\n            lastRange: function () {\n                var ranges = this._ranges;\n                return ranges[ranges.length - 1] || {\n                    start: 0,\n                    end: 0,\n                    data: []\n                };\n            },\n            firstItemUid: function () {\n                var ranges = this._ranges;\n                return ranges.length && ranges[0].data.length && ranges[0].data[0].uid;\n            },\n            enableRequestsInProgress: function () {\n                this._skipRequestsInProgress = false;\n            },\n            _timeStamp: function () {\n                return new Date().getTime();\n            },\n            range: function (skip, take, callback, action) {\n                this._currentRequestTimeStamp = this._timeStamp();\n                this._skipRequestsInProgress = true;\n                var total = this._isGroupPaged() ? this.groupsTotal(true) : this.total();\n                if (action === 'expandGroup' || action === 'collapseGroup') {\n                    this._updateOuterRangesLength();\n                }\n                skip = math.min(skip || 0, total);\n                callback = isFunction(callback) ? callback : noop;\n                var that = this, pageSkip = math.max(math.floor(skip / take), 0) * take, size = math.min(pageSkip + take, total), data;\n                data = that._findRange(skip, math.min(skip + take, total), callback);\n                if ((data.length || total === 0) && !that._fetchingGroupItems) {\n                    that._processRangeData(data, skip, take, that._originalPageSkip || pageSkip, that._originalSize || size, { action: action });\n                    that._originalPageSkip = null;\n                    that._originalSize = null;\n                    callback();\n                    return;\n                }\n                if (that._isGroupPaged()) {\n                    that._originalPageSkip = pageSkip;\n                    that._originalSize = size;\n                    pageSkip = math.max(math.floor(that._adjustPageSkip(skip, take) / take), 0) * take;\n                    size = math.min(pageSkip + take, total);\n                }\n                if (take !== undefined && !that._fetchingGroupItems) {\n                    if (that._isGroupPaged() && !that._groupRangeExists(pageSkip, take) || !that._rangeExists(pageSkip, size)) {\n                        that.prefetch(pageSkip, take, function () {\n                            if (skip > pageSkip && size < that.total() && !that._rangeExists(size, math.min(size + take, that.total()))) {\n                                that.prefetch(size, take, function () {\n                                    that.range(skip, take, callback);\n                                });\n                            } else {\n                                that.range(skip, take, callback);\n                            }\n                        });\n                    } else if (pageSkip < skip) {\n                        that.prefetch(size, take, function () {\n                            that.range(skip, take, callback);\n                        });\n                    }\n                }\n            },\n            _findRange: function (start, end, callback) {\n                var that = this, ranges = that._ranges, range, data = [], skipIdx, takeIdx, startIndex, endIndex, rangeData, rangeEnd, processed, options = that.options, remote = options.serverSorting || options.serverPaging || options.serverFiltering || options.serverGrouping || options.serverAggregates, flatData, count, length, groupMapOptions = {\n                        take: end - start,\n                        skip: start,\n                        skipped: 0,\n                        taken: 0,\n                        includeParents: true\n                    }, prevRangeEnd, isGroupPaged = that._isGroupPaged(), startField = isGroupPaged ? 'outerStart' : 'start', endField = isGroupPaged ? 'outerEnd' : 'end', currentDataLength;\n                for (skipIdx = 0, length = ranges.length; skipIdx < length; skipIdx++) {\n                    range = ranges[skipIdx];\n                    if (isGroupPaged) {\n                        if (range.outerStart >= end) {\n                            return [];\n                        }\n                        if (start > range.outerEnd) {\n                            groupMapOptions.skipped += range.outerEnd - (prevRangeEnd || 0);\n                            prevRangeEnd = range.outerEnd;\n                            continue;\n                        }\n                        if (typeof prevRangeEnd !== 'undefined' && prevRangeEnd != range.outerStart) {\n                            groupMapOptions.skipped += range.outerStart - prevRangeEnd;\n                        }\n                        if (groupMapOptions.skipped > groupMapOptions.skip) {\n                            return [];\n                        }\n                        if (typeof prevRangeEnd === 'undefined' && start > 0 && range.start > 0) {\n                            groupMapOptions.skipped = range.outerStart;\n                        }\n                        takeIdx = skipIdx;\n                        while (true) {\n                            this._findGroupedRange(range.data, data, groupMapOptions, null, callback);\n                            currentDataLength = that._calculateGroupsTotal(data, true, 'currentItems');\n                            if (currentDataLength >= groupMapOptions.take) {\n                                return data;\n                            }\n                            if (that._fetchingGroupItems) {\n                                return [];\n                            }\n                            takeIdx++;\n                            if (ranges[takeIdx] && ranges[takeIdx].outerStart === range.outerEnd) {\n                                range = ranges[takeIdx];\n                            } else {\n                                break;\n                            }\n                        }\n                    } else if (start >= range[startField] && start <= range[endField]) {\n                        count = 0;\n                        for (takeIdx = skipIdx; takeIdx < length; takeIdx++) {\n                            range = ranges[takeIdx];\n                            flatData = that._flatData(range.data, true);\n                            if (flatData.length && start + count >= range.start) {\n                                rangeData = range.data;\n                                rangeEnd = range.end;\n                                if (!remote) {\n                                    if (options.inPlaceSort) {\n                                        processed = that._queryProcess(range.data, { filter: that.filter() });\n                                    } else {\n                                        var sort = normalizeGroupWithoutCompare(that.group() || []).concat(normalizeSort(that.sort() || []));\n                                        processed = that._queryProcess(range.data, {\n                                            sort: sort,\n                                            filter: that.filter()\n                                        });\n                                    }\n                                    flatData = rangeData = processed.data;\n                                    if (processed.total !== undefined) {\n                                        rangeEnd = processed.total;\n                                    }\n                                }\n                                startIndex = 0;\n                                if (start + count > range.start) {\n                                    startIndex = start + count - range.start;\n                                }\n                                endIndex = flatData.length;\n                                if (rangeEnd > end) {\n                                    endIndex = endIndex - (rangeEnd - end);\n                                }\n                                count += endIndex - startIndex;\n                                data = that._mergeGroups(data, rangeData, startIndex, endIndex);\n                                if (end <= range.end && count == end - start) {\n                                    return data;\n                                }\n                            }\n                        }\n                        break;\n                    }\n                    prevRangeEnd = range.outerEnd;\n                }\n                return [];\n            },\n            _getRangesMismatch: function (pageSkip) {\n                var that = this;\n                var ranges = that._ranges;\n                var mismatch = 0;\n                var i = 0;\n                while (true) {\n                    var range = ranges[i];\n                    if (!range || range.outerStart > pageSkip) {\n                        break;\n                    }\n                    if (range.outerEnd != range.end) {\n                        mismatch = range.outerEnd - range.end;\n                    }\n                    i++;\n                }\n                return mismatch;\n            },\n            _mergeGroups: function (data, range, skip, take) {\n                if (this._isServerGrouped()) {\n                    var temp = range.toJSON(), prevGroup;\n                    if (data.length) {\n                        prevGroup = data[data.length - 1];\n                    }\n                    mergeGroups(prevGroup, temp, skip, take);\n                    return data.concat(temp);\n                }\n                return data.concat(range.slice(skip, take));\n            },\n            _processRangeData: function (data, skip, take, pageSkip, size, eventData) {\n                var that = this;\n                that._pending = undefined;\n                that._skip = skip > that.skip() && !that._omitPrefetch ? math.min(size, (that.totalPages() - 1) * that.take()) : pageSkip;\n                that._currentRangeStart = skip;\n                that._take = take;\n                var paging = that.options.serverPaging;\n                var sorting = that.options.serverSorting;\n                var filtering = that.options.serverFiltering;\n                var aggregates = that.options.serverAggregates;\n                try {\n                    that.options.serverPaging = true;\n                    if (!that._isServerGrouped() && !(that.group() && that.group().length)) {\n                        that.options.serverSorting = true;\n                    }\n                    that.options.serverFiltering = true;\n                    that.options.serverPaging = true;\n                    that.options.serverAggregates = true;\n                    if (paging) {\n                        that._detachObservableParents();\n                        that._data = data = that._observe(data);\n                    }\n                    that._process(data, eventData);\n                } finally {\n                    that.options.serverPaging = paging;\n                    that.options.serverSorting = sorting;\n                    that.options.serverFiltering = filtering;\n                    that.options.serverAggregates = aggregates;\n                }\n            },\n            skip: function () {\n                var that = this;\n                if (that._skip === undefined) {\n                    return that._page !== undefined ? (that._page - 1) * (that.take() || 1) : undefined;\n                }\n                return that._skip;\n            },\n            currentRangeStart: function () {\n                return this._currentRangeStart || 0;\n            },\n            take: function () {\n                return this._take || this._pageSize;\n            },\n            _prefetchSuccessHandler: function (skip, size, callback, force) {\n                var that = this;\n                var timestamp = that._timeStamp();\n                return function (data) {\n                    var found = false, range = {\n                            start: skip,\n                            end: size,\n                            data: [],\n                            timestamp: that._timeStamp()\n                        }, idx, length, temp;\n                    that._dequeueRequest();\n                    that.trigger(REQUESTEND, {\n                        response: data,\n                        type: 'read'\n                    });\n                    data = that.reader.parse(data);\n                    temp = that._readData(data);\n                    if (temp.length) {\n                        for (idx = 0, length = that._ranges.length; idx < length; idx++) {\n                            if (that._ranges[idx].start === skip) {\n                                found = true;\n                                range = that._ranges[idx];\n                                if (!that._isGroupPaged()) {\n                                    range.pristineData = temp;\n                                    range.data = that._observe(temp);\n                                    range.end = range.start + that._flatData(range.data, true).length;\n                                    that._sortRanges();\n                                }\n                                break;\n                            }\n                        }\n                        if (!found) {\n                            that._addRange(that._observe(temp), skip);\n                        }\n                    }\n                    that._total = that.reader.total(data);\n                    if (force || (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress)) {\n                        if (callback && temp.length) {\n                            callback();\n                        } else {\n                            that.trigger(CHANGE, {});\n                        }\n                    }\n                };\n            },\n            prefetch: function (skip, take, callback) {\n                var that = this, size = math.min(skip + take, that.total()), options = {\n                        take: take,\n                        skip: skip,\n                        page: skip / take + 1,\n                        pageSize: take,\n                        sort: that._sort,\n                        filter: that._filter,\n                        group: that._group,\n                        aggregate: that._aggregate\n                    };\n                if (that._isGroupPaged() && !that._isServerGrouped() && that._groupRangeExists(skip, size)) {\n                    if (callback) {\n                        callback();\n                    }\n                    return;\n                }\n                if (that._isServerGroupPaged() && !that._groupRangeExists(skip, size) || !that._rangeExists(skip, size)) {\n                    clearTimeout(that._timeout);\n                    that._timeout = setTimeout(function () {\n                        that._queueRequest(options, function () {\n                            if (!that.trigger(REQUESTSTART, { type: 'read' })) {\n                                if (that._omitPrefetch) {\n                                    that.trigger(PROGRESS);\n                                }\n                                that.transport.read({\n                                    data: that._params(options),\n                                    success: that._prefetchSuccessHandler(skip, size, callback),\n                                    error: function () {\n                                        var args = slice.call(arguments);\n                                        that.error.apply(that, args);\n                                    }\n                                });\n                            } else {\n                                that._dequeueRequest();\n                            }\n                        });\n                    }, 100);\n                } else if (callback) {\n                    callback();\n                }\n            },\n            _multiplePrefetch: function (skip, take, callback) {\n                var that = this, size = math.min(skip + take, that.total()), options = {\n                        take: take,\n                        skip: skip,\n                        page: skip / take + 1,\n                        pageSize: take,\n                        sort: that._sort,\n                        filter: that._filter,\n                        group: that._group,\n                        aggregate: that._aggregate\n                    };\n                if (!that._rangeExists(skip, size)) {\n                    if (!that.trigger(REQUESTSTART, { type: 'read' })) {\n                        that.transport.read({\n                            data: that._params(options),\n                            success: that._prefetchSuccessHandler(skip, size, callback, true)\n                        });\n                    }\n                } else if (callback) {\n                    callback();\n                }\n            },\n            _adjustPageSkip: function (start, take) {\n                var that = this;\n                var prevRange = that._getPrevRange(start);\n                var result;\n                var total = that.total();\n                var mismatch;\n                if (prevRange) {\n                    mismatch = that._getRangesMismatch(start);\n                    if (!mismatch) {\n                        return start;\n                    }\n                    start -= mismatch;\n                }\n                result = math.max(math.floor(start / take), 0) * take;\n                if (result > total) {\n                    while (true) {\n                        result -= take;\n                        if (result < total) {\n                            break;\n                        }\n                    }\n                }\n                return result;\n            },\n            _getNextRange: function (end) {\n                var that = this, ranges = that._ranges, idx, length;\n                for (idx = 0, length = ranges.length; idx < length; idx++) {\n                    if (ranges[idx].start <= end && ranges[idx].end >= end) {\n                        return ranges[idx];\n                    }\n                }\n            },\n            _getPrevRange: function (start) {\n                var that = this, ranges = that._ranges, idx, range, length = ranges.length;\n                for (idx = length - 1; idx >= 0; idx--) {\n                    if (ranges[idx].outerStart <= start) {\n                        range = ranges[idx];\n                        break;\n                    }\n                }\n                return range;\n            },\n            _rangeExists: function (start, end) {\n                var that = this, ranges = that._ranges, idx, length;\n                for (idx = 0, length = ranges.length; idx < length; idx++) {\n                    if (ranges[idx].start <= start && ranges[idx].end >= end) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _groupRangeExists: function (start, end) {\n                var that = this, ranges = that._ranges, idx, length, availableItemsCount = 0, total = that.groupsTotal(true);\n                if (end > total && !that._isServerGrouped()) {\n                    end = total;\n                }\n                for (idx = 0, length = ranges.length; idx < length; idx++) {\n                    var range = ranges[idx];\n                    if (range.outerStart <= start && range.outerEnd >= start) {\n                        availableItemsCount += range.outerEnd - start;\n                    } else if (range.outerStart <= end && range.outerEnd >= end) {\n                        availableItemsCount += end - range.outerStart;\n                    }\n                }\n                return availableItemsCount >= end - start;\n            },\n            _getCurrentRangeSpan: function () {\n                var that = this;\n                var ranges = that._ranges;\n                var start = that.currentRangeStart();\n                var end = start + (that.take() || 0);\n                var rangeSpan = [];\n                var range;\n                var idx;\n                var length = ranges.length;\n                for (idx = 0; idx < length; idx++) {\n                    range = ranges[idx];\n                    if (range.start <= start && range.end >= start || range.start >= start && range.start <= end) {\n                        rangeSpan.push(range);\n                    }\n                }\n                return rangeSpan;\n            },\n            _removeModelFromRanges: function (model) {\n                var that = this;\n                var range;\n                for (var idx = 0, length = this._ranges.length; idx < length; idx++) {\n                    range = this._ranges[idx];\n                    that._removeModelFromRange(range, model);\n                }\n                that._updateRangesLength();\n            },\n            _removeModelFromRange: function (range, model) {\n                this._eachItem(range.data, function (data) {\n                    if (!data) {\n                        return;\n                    }\n                    for (var idx = 0; idx < data.length; idx++) {\n                        var dataItem = data[idx];\n                        if (dataItem.uid && dataItem.uid == model.uid) {\n                            [].splice.call(data, idx, 1);\n                            break;\n                        }\n                    }\n                });\n            },\n            _insertModelInRange: function (index, model) {\n                var that = this;\n                var ranges = that._ranges || [];\n                var rangesLength = ranges.length;\n                var range;\n                var i;\n                for (i = 0; i < rangesLength; i++) {\n                    range = ranges[i];\n                    if (range.start <= index && range.end >= index) {\n                        if (!that._getByUid(model.uid, range.data)) {\n                            if (that._isServerGrouped()) {\n                                range.data.splice(index, 0, that._wrapInEmptyGroup(model));\n                            } else {\n                                range.data.splice(index, 0, model);\n                            }\n                        }\n                        break;\n                    }\n                }\n                that._updateRangesLength();\n            },\n            _updateRangesLength: function () {\n                var that = this;\n                var ranges = that._ranges || [];\n                var rangesLength = ranges.length;\n                var mismatchFound = false;\n                var mismatchLength = 0;\n                var lengthDifference = 0;\n                var rangeLength;\n                var range;\n                var i;\n                for (i = 0; i < rangesLength; i++) {\n                    range = ranges[i];\n                    rangeLength = that._isGroupPaged() ? range.data.length : that._flatData(range.data, true).length;\n                    lengthDifference = rangeLength - math.abs(range.end - range.start);\n                    if (!mismatchFound && lengthDifference !== 0) {\n                        mismatchFound = true;\n                        mismatchLength = lengthDifference;\n                        range.end += mismatchLength;\n                        continue;\n                    }\n                    if (mismatchFound) {\n                        range.start += mismatchLength;\n                        range.end += mismatchLength;\n                    }\n                }\n            },\n            _updateOuterRangesLength: function () {\n                var that = this;\n                var ranges = that._ranges || [];\n                var rangesLength = ranges.length;\n                var mismatchLength = 0;\n                var range;\n                var i;\n                var prevRange;\n                var rangeLength;\n                for (i = 0; i < rangesLength; i++) {\n                    range = ranges[i];\n                    rangeLength = that._isGroupPaged() ? that._calculateGroupsTotal(range.data, true, 'items', true) : that._flatData(range.data, true).length;\n                    if (prevRange) {\n                        if (prevRange.end != range.start) {\n                            mismatchLength = range.start - prevRange.end;\n                        }\n                        range.outerStart = prevRange.outerEnd + mismatchLength;\n                        mismatchLength = 0;\n                    } else {\n                        range.outerStart = range.start;\n                    }\n                    range.outerEnd = range.outerStart + rangeLength;\n                    prevRange = range;\n                }\n            }\n        });\n        var Transport = {};\n        Transport.create = function (options, data, dataSource) {\n            var transport, transportOptions = options.transport ? $.extend({}, options.transport) : null;\n            if (transportOptions) {\n                transportOptions.read = typeof transportOptions.read === STRING ? { url: transportOptions.read } : transportOptions.read;\n                if (options.type === 'jsdo') {\n                    transportOptions.dataSource = dataSource;\n                }\n                if (options.type) {\n                    kendo.data.transports = kendo.data.transports || {};\n                    kendo.data.schemas = kendo.data.schemas || {};\n                    if (!kendo.data.transports[options.type]) {\n                        kendo.logToConsole('Unknown DataSource transport type \\'' + options.type + '\\'.\\nVerify that registration scripts for this type are included after Kendo UI on the page.', 'warn');\n                    } else if (!isPlainObject(kendo.data.transports[options.type])) {\n                        transport = new kendo.data.transports[options.type](extend(transportOptions, { data: data }));\n                    } else {\n                        transportOptions = extend(true, {}, kendo.data.transports[options.type], transportOptions);\n                    }\n                    options.schema = extend(true, {}, kendo.data.schemas[options.type], options.schema);\n                }\n                if (!transport) {\n                    transport = isFunction(transportOptions.read) ? transportOptions : new RemoteTransport(transportOptions);\n                }\n            } else {\n                transport = new LocalTransport({ data: options.data || [] });\n            }\n            return transport;\n        };\n        DataSource.create = function (options) {\n            if (isArray(options) || options instanceof ObservableArray) {\n                options = { data: options };\n            }\n            var dataSource = options || {}, data = dataSource.data, fields = dataSource.fields, table = dataSource.table, select = dataSource.select, idx, length, model = {}, field;\n            if (!data && fields && !dataSource.transport) {\n                if (table) {\n                    data = inferTable(table, fields);\n                } else if (select) {\n                    data = inferSelect(select, fields);\n                    if (dataSource.group === undefined && data[0] && data[0].optgroup !== undefined) {\n                        dataSource.group = 'optgroup';\n                    }\n                }\n            }\n            if (kendo.data.Model && fields && (!dataSource.schema || !dataSource.schema.model)) {\n                for (idx = 0, length = fields.length; idx < length; idx++) {\n                    field = fields[idx];\n                    if (field.type) {\n                        model[field.field] = field;\n                    }\n                }\n                if (!isEmptyObject(model)) {\n                    dataSource.schema = extend(true, dataSource.schema, { model: { fields: model } });\n                }\n            }\n            dataSource.data = data;\n            select = null;\n            dataSource.select = null;\n            table = null;\n            dataSource.table = null;\n            return dataSource instanceof DataSource ? dataSource : new DataSource(dataSource);\n        };\n        function inferSelect(select, fields) {\n            select = $(select)[0];\n            var options = select.options;\n            var firstField = fields[0];\n            var secondField = fields[1];\n            var data = [];\n            var idx, length;\n            var optgroup;\n            var option;\n            var record;\n            var value;\n            for (idx = 0, length = options.length; idx < length; idx++) {\n                record = {};\n                option = options[idx];\n                optgroup = option.parentNode;\n                if (optgroup === select) {\n                    optgroup = null;\n                }\n                if (option.disabled || optgroup && optgroup.disabled) {\n                    continue;\n                }\n                if (optgroup) {\n                    record.optgroup = optgroup.label;\n                }\n                record[firstField.field] = option.text;\n                value = option.attributes.value;\n                if (value && value.specified) {\n                    value = option.value;\n                } else {\n                    value = option.text;\n                }\n                record[secondField.field] = value;\n                data.push(record);\n            }\n            return data;\n        }\n        function inferTable(table, fields) {\n            var tbody = $(table)[0].tBodies[0], rows = tbody ? tbody.rows : [], idx, length, fieldIndex, fieldCount = fields.length, data = [], cells, record, cell, empty;\n            for (idx = 0, length = rows.length; idx < length; idx++) {\n                record = {};\n                empty = true;\n                cells = rows[idx].cells;\n                for (fieldIndex = 0; fieldIndex < fieldCount; fieldIndex++) {\n                    cell = cells[fieldIndex];\n                    if (cell.nodeName.toLowerCase() !== 'th') {\n                        empty = false;\n                        record[fields[fieldIndex].field] = cell.innerHTML;\n                    }\n                }\n                if (!empty) {\n                    data.push(record);\n                }\n            }\n            return data;\n        }\n        var Node = Model.define({\n            idField: 'id',\n            init: function (value) {\n                var that = this, hasChildren = that.hasChildren || value && value.hasChildren, childrenField = 'items', childrenOptions = {};\n                kendo.data.Model.fn.init.call(that, value);\n                if (typeof that.children === STRING) {\n                    childrenField = that.children;\n                }\n                childrenOptions = {\n                    schema: {\n                        data: childrenField,\n                        model: {\n                            hasChildren: hasChildren,\n                            id: that.idField,\n                            fields: that.fields\n                        }\n                    }\n                };\n                if (typeof that.children !== STRING) {\n                    extend(childrenOptions, that.children);\n                }\n                childrenOptions.data = value;\n                if (!hasChildren) {\n                    hasChildren = childrenOptions.schema.data;\n                }\n                if (typeof hasChildren === STRING) {\n                    hasChildren = kendo.getter(hasChildren);\n                }\n                if (isFunction(hasChildren)) {\n                    var hasChildrenObject = hasChildren.call(that, that);\n                    if (hasChildrenObject && hasChildrenObject.length === 0) {\n                        that.hasChildren = false;\n                    } else {\n                        that.hasChildren = !!hasChildrenObject;\n                    }\n                }\n                that._childrenOptions = childrenOptions;\n                if (that.hasChildren) {\n                    that._initChildren();\n                }\n                that._loaded = !!(value && value._loaded);\n            },\n            _initChildren: function () {\n                var that = this;\n                var children, transport, parameterMap;\n                if (!(that.children instanceof HierarchicalDataSource)) {\n                    children = that.children = new HierarchicalDataSource(that._childrenOptions);\n                    transport = children.transport;\n                    parameterMap = transport.parameterMap;\n                    transport.parameterMap = function (data, type) {\n                        data[that.idField || 'id'] = that.id;\n                        if (parameterMap) {\n                            data = parameterMap.call(that, data, type);\n                        }\n                        return data;\n                    };\n                    children.parent = function () {\n                        return that;\n                    };\n                    children.bind(CHANGE, function (e) {\n                        e.node = e.node || that;\n                        that.trigger(CHANGE, e);\n                    });\n                    children.bind(ERROR, function (e) {\n                        var collection = that.parent();\n                        if (collection) {\n                            e.node = e.node || that;\n                            collection.trigger(ERROR, e);\n                        }\n                    });\n                    that._updateChildrenField();\n                }\n            },\n            append: function (model) {\n                this._initChildren();\n                this.loaded(true);\n                this.children.add(model);\n            },\n            hasChildren: false,\n            level: function () {\n                var parentNode = this.parentNode(), level = 0;\n                while (parentNode && parentNode.parentNode) {\n                    level++;\n                    parentNode = parentNode.parentNode ? parentNode.parentNode() : null;\n                }\n                return level;\n            },\n            _updateChildrenField: function () {\n                var fieldName = this._childrenOptions.schema.data;\n                this[fieldName || 'items'] = this.children.data();\n            },\n            _childrenLoaded: function () {\n                this._loaded = true;\n                this._updateChildrenField();\n            },\n            load: function () {\n                var options = {};\n                var method = '_query';\n                var children, promise;\n                if (this.hasChildren) {\n                    this._initChildren();\n                    children = this.children;\n                    options[this.idField || 'id'] = this.id;\n                    if (!this._loaded) {\n                        children._data = undefined;\n                        method = 'read';\n                    }\n                    children.one(CHANGE, proxy(this._childrenLoaded, this));\n                    if (this._matchFilter) {\n                        options.filter = {\n                            field: '_matchFilter',\n                            operator: 'eq',\n                            value: true\n                        };\n                    }\n                    promise = children[method](options);\n                } else {\n                    this.loaded(true);\n                }\n                return promise || $.Deferred().resolve().promise();\n            },\n            parentNode: function () {\n                var array = this.parent();\n                return array.parent();\n            },\n            loaded: function (value) {\n                if (value !== undefined) {\n                    this._loaded = value;\n                } else {\n                    return this._loaded;\n                }\n            },\n            shouldSerialize: function (field) {\n                return Model.fn.shouldSerialize.call(this, field) && field !== 'children' && field !== '_loaded' && field !== 'hasChildren' && field !== '_childrenOptions';\n            }\n        });\n        function dataMethod(name) {\n            return function () {\n                var data = this._data, result = DataSource.fn[name].apply(this, slice.call(arguments));\n                if (this._data != data) {\n                    this._attachBubbleHandlers();\n                }\n                return result;\n            };\n        }\n        var HierarchicalDataSource = DataSource.extend({\n            init: function (options) {\n                var node = Node.define({ children: options });\n                if (options.filter && !options.serverFiltering) {\n                    this._hierarchicalFilter = options.filter;\n                    options.filter = null;\n                }\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    schema: {\n                        modelBase: node,\n                        model: node\n                    }\n                }, options));\n                this._attachBubbleHandlers();\n            },\n            _attachBubbleHandlers: function () {\n                var that = this;\n                that._data.bind(ERROR, function (e) {\n                    that.trigger(ERROR, e);\n                });\n            },\n            read: function (data) {\n                var result = DataSource.fn.read.call(this, data);\n                if (this._hierarchicalFilter) {\n                    if (this._data && this._data.length > 0) {\n                        this.filter(this._hierarchicalFilter);\n                    } else {\n                        this.options.filter = this._hierarchicalFilter;\n                        this._filter = normalizeFilter(this.options.filter);\n                        this._hierarchicalFilter = null;\n                    }\n                }\n                return result;\n            },\n            remove: function (node) {\n                var parentNode = node.parentNode(), dataSource = this, result;\n                if (parentNode && parentNode._initChildren) {\n                    dataSource = parentNode.children;\n                }\n                result = DataSource.fn.remove.call(dataSource, node);\n                if (parentNode && !dataSource.data().length) {\n                    parentNode.hasChildren = false;\n                }\n                return result;\n            },\n            success: dataMethod('success'),\n            data: dataMethod('data'),\n            insert: function (index, model) {\n                var parentNode = this.parent();\n                if (parentNode && parentNode._initChildren) {\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n                return DataSource.fn.insert.call(this, index, model);\n            },\n            filter: function (val) {\n                if (val === undefined) {\n                    return this._filter;\n                }\n                if (!this.options.serverFiltering && this._markHierarchicalQuery(val)) {\n                    val = {\n                        logic: 'or',\n                        filters: [\n                            val,\n                            {\n                                field: '_matchFilter',\n                                operator: 'equals',\n                                value: true\n                            }\n                        ]\n                    };\n                }\n                this.trigger('reset');\n                this._query({\n                    filter: val,\n                    page: 1\n                });\n            },\n            _markHierarchicalQuery: function (expressions) {\n                var compiled;\n                var predicate;\n                var fields;\n                var operators;\n                var filter;\n                var accentFoldingFiltering = this.options.accentFoldingFiltering;\n                expressions = accentFoldingFiltering ? $.extend({}, normalizeFilter(expressions), { accentFoldingFiltering: accentFoldingFiltering }) : normalizeFilter(expressions);\n                if (!expressions || expressions.filters.length === 0) {\n                    this._updateHierarchicalFilter(function () {\n                        return true;\n                    });\n                    return false;\n                }\n                compiled = Query.filterExpr(expressions);\n                fields = compiled.fields;\n                operators = compiled.operators;\n                predicate = filter = new Function('d, __f, __o', 'return ' + compiled.expression);\n                if (fields.length || operators.length) {\n                    filter = function (d) {\n                        return predicate(d, fields, operators);\n                    };\n                }\n                this._updateHierarchicalFilter(filter);\n                return true;\n            },\n            _updateHierarchicalFilter: function (filter) {\n                var current;\n                var data = this._data;\n                var result = false;\n                for (var idx = 0; idx < data.length; idx++) {\n                    current = data[idx];\n                    if (current.hasChildren) {\n                        current._matchFilter = current.children._updateHierarchicalFilter(filter);\n                        if (!current._matchFilter) {\n                            current._matchFilter = filter(current);\n                        }\n                    } else {\n                        current._matchFilter = filter(current);\n                    }\n                    if (current._matchFilter) {\n                        result = true;\n                    }\n                }\n                return result;\n            },\n            _find: function (method, value) {\n                var idx, length, node, children;\n                var data = this._data;\n                if (!data) {\n                    return;\n                }\n                node = DataSource.fn[method].call(this, value);\n                if (node) {\n                    return node;\n                }\n                data = this._flatData(this._data);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    children = data[idx].children;\n                    if (!(children instanceof HierarchicalDataSource)) {\n                        continue;\n                    }\n                    node = children[method](value);\n                    if (node) {\n                        return node;\n                    }\n                }\n            },\n            get: function (id) {\n                return this._find('get', id);\n            },\n            getByUid: function (uid) {\n                return this._find('getByUid', uid);\n            }\n        });\n        function inferList(list, fields) {\n            var items = $(list).children(), idx, length, data = [], record, textField = fields[0].field, urlField = fields[1] && fields[1].field, spriteCssClassField = fields[2] && fields[2].field, imageUrlField = fields[3] && fields[3].field, item, id, textChild, className, children;\n            function elements(collection, tagName) {\n                return collection.filter(tagName).add(collection.find(tagName));\n            }\n            for (idx = 0, length = items.length; idx < length; idx++) {\n                record = { _loaded: true };\n                item = items.eq(idx);\n                textChild = item[0].firstChild;\n                children = item.children();\n                list = children.filter('ul');\n                children = children.filter(':not(ul)');\n                id = item.attr('data-id');\n                if (id) {\n                    record.id = id;\n                }\n                if (textChild) {\n                    record[textField] = textChild.nodeType == 3 ? textChild.nodeValue : children.text();\n                }\n                if (urlField) {\n                    record[urlField] = elements(children, 'a').attr('href');\n                }\n                if (imageUrlField) {\n                    record[imageUrlField] = elements(children, 'img').attr('src');\n                }\n                if (spriteCssClassField) {\n                    className = elements(children, '.k-sprite').prop('className');\n                    record[spriteCssClassField] = className && kendo.trim(className.replace('k-sprite', ''));\n                }\n                if (list.length) {\n                    record.items = inferList(list.eq(0), fields);\n                }\n                if (item.attr('data-hasChildren') == 'true') {\n                    record.hasChildren = true;\n                }\n                data.push(record);\n            }\n            return data;\n        }\n        HierarchicalDataSource.create = function (options) {\n            options = options && options.push ? { data: options } : options;\n            var dataSource = options || {}, data = dataSource.data, fields = dataSource.fields, list = dataSource.list;\n            if (data && data._dataSource) {\n                return data._dataSource;\n            }\n            if (!data && fields && !dataSource.transport) {\n                if (list) {\n                    data = inferList(list, fields);\n                }\n            }\n            dataSource.data = data;\n            return dataSource instanceof HierarchicalDataSource ? dataSource : new HierarchicalDataSource(dataSource);\n        };\n        var Buffer = kendo.Observable.extend({\n            init: function (dataSource, viewSize, disablePrefetch) {\n                kendo.Observable.fn.init.call(this);\n                this._prefetching = false;\n                this.dataSource = dataSource;\n                this.prefetch = !disablePrefetch;\n                var buffer = this;\n                dataSource.bind('change', function () {\n                    buffer._change();\n                });\n                dataSource.bind('reset', function () {\n                    buffer._reset();\n                });\n                this._syncWithDataSource();\n                this.setViewSize(viewSize);\n            },\n            setViewSize: function (viewSize) {\n                this.viewSize = viewSize;\n                this._recalculate();\n            },\n            at: function (index) {\n                var pageSize = this.pageSize, itemPresent = true;\n                if (index >= this.total()) {\n                    this.trigger('endreached', { index: index });\n                    return null;\n                }\n                if (!this.useRanges) {\n                    return this.dataSource.view()[index];\n                }\n                if (this.useRanges) {\n                    if (index < this.dataOffset || index >= this.skip + pageSize) {\n                        itemPresent = this.range(Math.floor(index / pageSize) * pageSize);\n                    }\n                    if (index === this.prefetchThreshold) {\n                        this._prefetch();\n                    }\n                    if (index === this.midPageThreshold) {\n                        this.range(this.nextMidRange, true);\n                    } else if (index === this.nextPageThreshold) {\n                        this.range(this.nextFullRange);\n                    } else if (index === this.pullBackThreshold) {\n                        if (this.offset === this.skip) {\n                            this.range(this.previousMidRange);\n                        } else {\n                            this.range(this.previousFullRange);\n                        }\n                    }\n                    if (itemPresent) {\n                        return this.dataSource.at(index - this.dataOffset);\n                    } else {\n                        this.trigger('endreached', { index: index });\n                        return null;\n                    }\n                }\n            },\n            indexOf: function (item) {\n                return this.dataSource.data().indexOf(item) + this.dataOffset;\n            },\n            total: function () {\n                return parseInt(this.dataSource.total(), 10);\n            },\n            next: function () {\n                var buffer = this, pageSize = buffer.pageSize, offset = buffer.skip - buffer.viewSize + pageSize, pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize;\n                this.offset = offset;\n                this.dataSource.prefetch(pageSkip, pageSize, function () {\n                    buffer._goToRange(offset, true);\n                });\n            },\n            range: function (offset, nextRange) {\n                if (this.offset === offset) {\n                    return true;\n                }\n                var buffer = this, pageSize = this.pageSize, pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize, dataSource = this.dataSource;\n                if (nextRange) {\n                    pageSkip += pageSize;\n                }\n                if (dataSource.inRange(offset, pageSize)) {\n                    this.offset = offset;\n                    this._recalculate();\n                    this._goToRange(offset);\n                    return true;\n                } else if (this.prefetch) {\n                    dataSource.prefetch(pageSkip, pageSize, function () {\n                        buffer.offset = offset;\n                        buffer._recalculate();\n                        buffer._goToRange(offset, true);\n                    });\n                    return false;\n                }\n                return true;\n            },\n            syncDataSource: function () {\n                var offset = this.offset;\n                this.offset = null;\n                this.range(offset);\n            },\n            destroy: function () {\n                this.unbind();\n            },\n            _prefetch: function () {\n                var buffer = this, pageSize = this.pageSize, prefetchOffset = this.skip + pageSize, dataSource = this.dataSource;\n                if (!dataSource.inRange(prefetchOffset, pageSize) && !this._prefetching && this.prefetch) {\n                    this._prefetching = true;\n                    this.trigger('prefetching', {\n                        skip: prefetchOffset,\n                        take: pageSize\n                    });\n                    dataSource.prefetch(prefetchOffset, pageSize, function () {\n                        buffer._prefetching = false;\n                        buffer.trigger('prefetched', {\n                            skip: prefetchOffset,\n                            take: pageSize\n                        });\n                    });\n                }\n            },\n            _goToRange: function (offset, expanding) {\n                if (this.offset !== offset) {\n                    return;\n                }\n                this.dataOffset = offset;\n                this._expanding = expanding;\n                this.dataSource.range(offset, this.pageSize);\n                this.dataSource.enableRequestsInProgress();\n            },\n            _reset: function () {\n                this._syncPending = true;\n            },\n            _change: function () {\n                var dataSource = this.dataSource;\n                this.length = this.useRanges ? dataSource.lastRange().end : dataSource.view().length;\n                if (this._syncPending) {\n                    this._syncWithDataSource();\n                    this._recalculate();\n                    this._syncPending = false;\n                    this.trigger('reset', { offset: this.offset });\n                }\n                this.trigger('resize');\n                if (this._expanding) {\n                    this.trigger('expand');\n                }\n                delete this._expanding;\n            },\n            _syncWithDataSource: function () {\n                var dataSource = this.dataSource;\n                this._firstItemUid = dataSource.firstItemUid();\n                this.dataOffset = this.offset = dataSource.skip() || 0;\n                this.pageSize = dataSource.pageSize();\n                this.useRanges = dataSource.options.serverPaging;\n            },\n            _recalculate: function () {\n                var pageSize = this.pageSize, offset = this.offset, viewSize = this.viewSize, skip = Math.ceil(offset / pageSize) * pageSize;\n                this.skip = skip;\n                this.midPageThreshold = skip + pageSize - 1;\n                this.nextPageThreshold = skip + viewSize - 1;\n                this.prefetchThreshold = skip + Math.floor(pageSize / 3 * 2);\n                this.pullBackThreshold = this.offset - 1;\n                this.nextMidRange = skip + pageSize - viewSize;\n                this.nextFullRange = skip;\n                this.previousMidRange = offset - viewSize;\n                this.previousFullRange = skip - pageSize;\n            }\n        });\n        var BatchBuffer = kendo.Observable.extend({\n            init: function (dataSource, batchSize) {\n                var batchBuffer = this;\n                kendo.Observable.fn.init.call(batchBuffer);\n                this.dataSource = dataSource;\n                this.batchSize = batchSize;\n                this._total = 0;\n                this.buffer = new Buffer(dataSource, batchSize * 3);\n                this.buffer.bind({\n                    'endreached': function (e) {\n                        batchBuffer.trigger('endreached', { index: e.index });\n                    },\n                    'prefetching': function (e) {\n                        batchBuffer.trigger('prefetching', {\n                            skip: e.skip,\n                            take: e.take\n                        });\n                    },\n                    'prefetched': function (e) {\n                        batchBuffer.trigger('prefetched', {\n                            skip: e.skip,\n                            take: e.take\n                        });\n                    },\n                    'reset': function () {\n                        batchBuffer._total = 0;\n                        batchBuffer.trigger('reset');\n                    },\n                    'resize': function () {\n                        batchBuffer._total = Math.ceil(this.length / batchBuffer.batchSize);\n                        batchBuffer.trigger('resize', {\n                            total: batchBuffer.total(),\n                            offset: this.offset\n                        });\n                    }\n                });\n            },\n            syncDataSource: function () {\n                this.buffer.syncDataSource();\n            },\n            at: function (index) {\n                var buffer = this.buffer, skip = index * this.batchSize, take = this.batchSize, view = [], item;\n                if (buffer.offset > skip) {\n                    buffer.at(buffer.offset - 1);\n                }\n                for (var i = 0; i < take; i++) {\n                    item = buffer.at(skip + i);\n                    if (item === null) {\n                        break;\n                    }\n                    view.push(item);\n                }\n                return view;\n            },\n            total: function () {\n                return this._total;\n            },\n            destroy: function () {\n                this.buffer.destroy();\n                this.unbind();\n            }\n        });\n        extend(true, kendo.data, {\n            readers: { json: DataReader },\n            Query: Query,\n            DataSource: DataSource,\n            HierarchicalDataSource: HierarchicalDataSource,\n            Node: Node,\n            Comparer: Comparer,\n            ObservableObject: ObservableObject,\n            ObservableArray: ObservableArray,\n            LazyObservableArray: LazyObservableArray,\n            LocalTransport: LocalTransport,\n            RemoteTransport: RemoteTransport,\n            Cache: Cache,\n            DataReader: DataReader,\n            Model: Model,\n            Buffer: Buffer,\n            BatchBuffer: BatchBuffer\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}