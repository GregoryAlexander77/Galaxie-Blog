{"version":3,"sources":["kendo.validator.js"],"names":["f","define","$","undefined","resolveRules","element","name","resolvers","kendo","ui","validator","ruleResolvers","rules","extend","resolve","decode","value","replace","numberOfDecimalDigits","split","length","parseHtml","text","parseHTML","searchForMessageContainer","elements","fieldName","attr","idx","containers","invalidMsgRegExp","test","className","getAttribute","add","isLabelFor","label","nodeName","SUMMARYTEMPLATE","Validator","window","Widget","NS","INVALIDMSG","RegExp","INVALIDINPUT","VALIDINPUT","VALIDATIONSUMMARY","INVALIDLABEL","MESSAGEBOX","ARIAINVALID","ARIADESCRIBEDBY","emailRegExp","urlRegExp","INPUTSELECTOR","CHECKBOXSELECTOR","NUMBERINPUTSELECTOR","BLUR","NAME","FORM","NOVALIDATE","VALIDATE","CHANGE","VALIDATE_INPUT","proxy","patternMatcher","pattern","matcher","input","selector","val","filter","hasAttribute","attributes","messages","allowSubmit","noop","validateOnInit","init","options","that","this","resolved","validateAttributeSelector","fn","call","_errorTemplate","template","errorTemplate","_summaryTemplate","validationSummary","is","_inputSelector","_checkboxSelector","_errors","_attachEvents","_isValidated","_validateOnInit","validate","events","required","min","max","step","email","url","date","dateCompare","checkbox","parseFloat","raise","decimals","Math","pow","floor","parseDate","validateOnBlur","_allowSubmit","errors","destroy","off","_submit","e","stopPropagation","stopImmediatePropagation","preventDefault","_checkElement","state","validateInput","trigger","on","inputs","invalid","result","isValid","find","eq","showValidationSummary","valid","lbl","messageText","messageLabel","wasValid","lblId","widgetInstance","parentElement","nextElement","prevElement","inputWrap","inputLabel","errorId","_checkValidity","_findMessageContainer","next","addClass","_extractMessage","key","message","field","removeAttr","_decorateMessageContainer","replaceWith","parent","get","prev","insertAfter","wrapper","removeClass","error","toggleClass","_inputWrapper","_inputLabel","_associateMessageContainer","hideMessages","_disassociateMessageContainers","reset","labels","hideValidationSummary","locators","messageLocators","getElementsByTagName","locate","container","decorate","ruleKey","nonDefaultMessage","customMessage","prototype","isFunction","format","rule","results","push","setOptions","deepExtend","_setEvents","_getInputNames","sorted","nextFocusable","getWidgetFocusableElement","toggleAttribute","i","addBack","_errorsByName","inputNames","_renderSummary","hasClass","insertBefore","join","_summaryClick","link","target","data","focus","errorsList","summary","html","plugin","jQuery","amd","a1","a2","a3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,mBAAoB,cAAeD,IAC5C,WA0fE,MAlfC,UAAUE,EAAGC,GA0BV,QAASC,GAAaC,GAClB,GAAoEC,GAAhEC,EAAYC,EAAMC,GAAGC,UAAUC,kBAAqBC,IACxD,KAAKN,IAAQC,GACTL,EAAEW,QAAO,EAAMD,EAAOL,EAAUD,GAAMQ,QAAQT,GAElD,OAAOO,GAEX,QAASG,GAAOC,GACZ,MAAOA,GAAMC,QAAQ,QAAS,SAASA,QAAQ,UAAW,KAAKA,QAAQ,SAAU,KAAMA,QAAQ,QAAS,KAAKA,QAAQ,QAAS,KAElI,QAASC,GAAsBF,GAE3B,MADAA,IAASA,EAAQ,IAAIG,MAAM,KACvBH,EAAMI,OAAS,EACRJ,EAAM,GAAGI,OAEb,EAEX,QAASC,GAAUC,GACf,MACWpB,GADPA,EAAEqB,UACOrB,EAAEqB,UAAUD,GAEhBA,GAEb,QAASE,GAA0BC,EAAUC,GAA7C,GAC0BrB,GAASsB,EACtBC,EAASR,EADdS,EAAa3B,GACjB,KAAS0B,EAAM,EAAGR,EAASK,EAASL,OAAQQ,EAAMR,EAAQQ,IACtDvB,EAAUoB,EAASG,GACfE,EAAiBC,KAAK1B,EAAQ2B,aAC9BL,EAAOtB,EAAQ4B,aAAazB,EAAMmB,KAAK,QACnCA,IAASD,IACTG,EAAaA,EAAWK,IAAI7B,IAIxC,OAAOwB,GAEX,QAASM,GAAWC,EAAO/B,GACvB,QAAK+B,IAGyB,gBAAnBA,GAAMC,UAA4C,UAAnBD,EAAMC,WAGP,gBAA9BD,GAAMH,aAAa,QAA6D,gBAA/B5B,GAAQ4B,aAAa,OAG7EG,EAAMH,aAAa,SAAW5B,EAAQ4B,aAAa,QAxE9D,GA6EOK,GACAC,EA7EA/B,EAAQgC,OAAOhC,MAAOiC,EAASjC,EAAMC,GAAGgC,OAAQC,EAAK,kBAAmBC,EAAa,gBAAiBb,EAAuBc,OAAOD,EAAY,KAAME,EAAe,YAAaC,EAAa,UAAWC,EAAoB,uBAAwBC,EAAe,eAAgBC,EAAa,kCAAmCC,EAAc,eAAgBC,EAAkB,mBAAoBC,EAAc,yIAA0IC,EAAY,sqCAAuqCC,EAAgB,uEAAwEC,EAAmB,uCAAwCC,EAAsB,6BAA8BC,EAAO,OAAQC,EAAO,OAAQC,EAAO,OAAQC,EAAa,aAAcC,EAAW,WAAYC,EAAS,SAAUC,EAAiB,gBAAiBC,EAAQ9D,EAAE8D,MAAOC,EAAiB,SAAUjD,EAAOkD,GAI9lE,MAHuB,gBAAZA,KACPA,EAActB,OAAO,OAASsB,EAAU,OAErCA,EAAQnC,KAAKf,IACrBmD,EAAU,SAAUC,EAAOC,EAAUH,GACpC,GAAIlD,GAAQoD,EAAME,KAClB,QAAIF,EAAMG,OAAOF,GAAUjD,QAAoB,KAAVJ,GAC1BiD,EAAejD,EAAOkD,IAGlCM,EAAe,SAAUJ,EAAO9D,GAC/B,QAAI8D,EAAMhD,QAC8B,MAA7BgD,EAAM,GAAGK,WAAWnE,GAIlCE,GAAMC,GAAGC,YACVF,EAAMC,GAAGC,WACLE,SACA8D,YACAC,YAAazE,EAAE0E,KACfC,eAAgB3E,EAAE0E,OAsDtBtC,EAAkB,8IAClBC,EAAYE,EAAO5B,QACnBiE,KAAM,SAAUzE,EAAS0E,GACrB,GAAIC,GAAOC,KAAMC,EAAW9E,EAAaC,GAAU8E,EAA4B,IAAM3E,EAAMmB,KAAK,YAAc,UAC9GoD,GAAUA,MACVA,EAAQnE,MAAQV,EAAEW,UAAWL,EAAMC,GAAGC,UAAUE,MAAOsE,EAAStE,MAAOmE,EAAQnE,OAC/EmE,EAAQL,SAAWxE,EAAEW,UAAWL,EAAMC,GAAGC,UAAUgE,SAAUQ,EAASR,SAAUK,EAAQL,UACxFjC,EAAO2C,GAAGN,KAAKO,KAAKL,EAAM3E,EAAS0E,GACnCC,EAAKM,eAAiB9E,EAAM+E,SAASP,EAAKD,QAAQS,eAClDR,EAAKS,iBAAmBjF,EAAM+E,SAASP,EAAKD,QAAQW,kBAAkBH,UAAYjD,GAC9E0C,EAAK3E,QAAQsF,GAAGhC,IAChBqB,EAAK3E,QAAQsB,KAAKiC,EAAYA,GAElCoB,EAAKY,eAAiBtC,EAAgB6B,EACtCH,EAAKa,kBAAoBtC,EAAmB4B,EAC5CH,EAAKc,WACLd,EAAKe,gBACLf,EAAKgB,cAAe,EAChBhB,EAAKiB,mBACLjB,EAAKkB,YAGbC,QACItC,EACAC,EACAC,GAEJgB,SACIzE,KAAM,YACNkF,cAAe,iDACfd,UACI0B,SAAU,kBACVlC,QAAS,mBACTmC,IAAK,6CACLC,IAAK,6CACLC,KAAM,mBACNC,MAAO,yBACPC,IAAK,uBACLC,KAAM,wBACNC,YAAa,8DAEjB/F,OACIwF,SAAU,SAAUhC,GAChB,GAAIwC,GAAWxC,EAAMG,OAAO,mBAAmBnD,SAAWgD,EAAMuB,GAAG,YAAa3E,EAAQoD,EAAME,KAC9F,SAASE,EAAaJ,EAAO,eAAiBpD,GAAmB,KAAVA,GAAiC,IAAjBA,EAAMI,QAAgBwF,KAEjG1C,QAAS,SAAUE,GACf,OAAIA,EAAMG,OAAO,gFAAgFA,OAAO,aAAanD,QAA0B,KAAhBgD,EAAME,OAC1HL,EAAeG,EAAME,MAAOF,EAAMzC,KAAK,aAItD0E,IAAK,SAAUjC,GACX,GAAIA,EAAMG,OAAOf,EAAsB,KAAOhD,EAAMmB,KAAK,QAAU,YAAY4C,OAAO,SAASnD,QAA0B,KAAhBgD,EAAME,MAAc,CACzH,GAAI+B,GAAMQ,WAAWzC,EAAMzC,KAAK,SAAW,EAAG2C,EAAM9D,EAAMqG,WAAWzC,EAAME,MAC3E,OAAO+B,IAAO/B,EAElB,OAAO,GAEXgC,IAAK,SAAUlC,GACX,GAAIA,EAAMG,OAAOf,EAAsB,KAAOhD,EAAMmB,KAAK,QAAU,YAAY4C,OAAO,SAASnD,QAA0B,KAAhBgD,EAAME,MAAc,CACzH,GAAIgC,GAAMO,WAAWzC,EAAMzC,KAAK,SAAW,EAAG2C,EAAM9D,EAAMqG,WAAWzC,EAAME,MAC3E,OAAOgC,IAAOhC,EAElB,OAAO,GAEXiC,KAAM,SAAUnC,GACZ,GAAIA,EAAMG,OAAOf,EAAsB,KAAOhD,EAAMmB,KAAK,QAAU,YAAY4C,OAAO,UAAUnD,QAA0B,KAAhBgD,EAAME,MAAc,CAC1H,GAAiKwC,GAA7JT,EAAMQ,WAAWzC,EAAMzC,KAAK,SAAW,EAAG4E,EAAOM,WAAWzC,EAAMzC,KAAK,UAAY,EAAG2C,EAAMuC,WAAWzC,EAAME,OAAQyC,EAAW7F,EAAsBqF,EAC1J,OAAIQ,IACAD,EAAQE,KAAKC,IAAI,GAAIF,GACdC,KAAKE,OAAO5C,EAAM+B,GAAOS,IAAUP,EAAOO,GAASE,KAAKC,IAAI,IAAKF,KAAc,IAElFzC,EAAM+B,GAAOE,IAAS,EAElC,OAAO,GAEXC,MAAO,SAAUpC,GACb,MAAOD,GAAQC,EAAO,iBAAmB5D,EAAMmB,KAAK,QAAU,UAAWyB,IAE7EqD,IAAK,SAAUrC,GACX,MAAOD,GAAQC,EAAO,eAAiB5D,EAAMmB,KAAK,QAAU,QAAS0B,IAEzEqD,KAAM,SAAUtC,GACZ,OAAIA,EAAMG,OAAO,iBAAmB/D,EAAMmB,KAAK,QAAU,UAAUP,QAA0B,KAAhBgD,EAAME,OACL,OAAnE9D,EAAM2G,UAAU/C,EAAME,MAAOF,EAAMzC,KAAKnB,EAAMmB,KAAK,cAKtEyF,gBAAgB,EAChB1B,mBAAmB,GAEvB2B,aAAc,WACV,MAAO7G,GAAMC,GAAGC,UAAUiE,YAAYM,KAAK5E,QAAS4E,KAAKqC,WAE7DrB,gBAAiB,WACb,MAAOzF,GAAMC,GAAGC,UAAUmE,eAAeI,KAAK5E,UAElDkH,QAAS,WACL9E,EAAO2C,GAAGmC,QAAQlC,KAAKJ,MACvBA,KAAK5E,QAAQmH,IAAI9E,GACbuC,KAAKS,oBACLT,KAAKS,kBAAkB8B,IAAI9E,GAC3BuC,KAAKS,kBAAoB,OAGjC1E,MAAO,WACH,QAAKiE,KAAKe,cAGsB,IAAzBf,KAAKqC,SAASlG,QAEzBqG,QAAS,SAAUC,GACf,SAAKzC,KAAKiB,aAAejB,KAAKoC,kBAC1BK,EAAEC,kBACFD,EAAEE,2BACFF,EAAEG,kBACK,IAIfC,cAAe,SAAUzH,GACrB,GAAI0H,GAAQ9C,KAAKjE,OACjBiE,MAAK+C,cAAc3H,GACf4E,KAAKjE,UAAY+G,GACjB9C,KAAKgD,QAAQnE,IAGrBiC,cAAe,WACX,GAAIf,GAAOC,IACPD,GAAK3E,QAAQsF,GAAGhC,IAChBqB,EAAK3E,QAAQ6H,GAAG,SAAWxF,EAAIsB,EAAMgB,EAAKyC,QAASzC,IAEnDA,EAAKD,QAAQqC,iBACRpC,EAAK3E,QAAQsF,GAAGrC,IAQjB0B,EAAK3E,QAAQ6H,GAAGzE,EAAOf,EAAI,WACvBsC,EAAK8C,cAAc9C,EAAK3E,WAExB2E,EAAK3E,QAAQsF,GAAGpC,IAChByB,EAAK3E,QAAQ6H,GAAG,QAAUxF,EAAI,WAC1BsC,EAAK8C,cAAc9C,EAAK3E,aAZhC2E,EAAK3E,QAAQ6H,GAAGzE,EAAOf,EAAIsC,EAAKY,eAAgB,WAC5CZ,EAAK8C,cAAc5H,EAAE+E,SAEzBD,EAAK3E,QAAQ6H,GAAG,QAAUxF,EAAIsC,EAAKa,kBAAmB,WAClDb,EAAK8C,cAAc5H,EAAE+E,YAcrCiB,SAAU,WAAA,GACFiC,GACAvG,EAEAR,EAIIgH,EALJC,GAAS,EAETC,EAAUrD,KAAKjE,OAEnB,IADAiE,KAAKa,WACAb,KAAK5E,QAAQsF,GAAGrC,GAUjB+E,EAASpD,KAAK+C,cAAc/C,KAAK5E,aAVA,CAGjC,IAFI+H,GAAU,EACdD,EAASlD,KAAK5E,QAAQkI,KAAKtD,KAAKW,gBAC3BhE,EAAM,EAAGR,EAAS+G,EAAO/G,OAAQQ,EAAMR,EAAQQ,IAC3CqD,KAAK+C,cAAcG,EAAOK,GAAG5G,MAC9BwG,GAAU,EAGlBC,IAAUD,EAcd,MAVInD,MAAKF,QAAQW,oBAAsB4C,GACnCrD,KAAKwD,wBAETxD,KAAKgD,QAAQpE,GACT6E,MAAOL,EACPf,OAAQrC,KAAKqC,WAEbgB,IAAYD,GACZpD,KAAKgD,QAAQnE,GAEVuE,GAEXL,cAAe,SAAU5D,GAAV,GAGPY,GAAaO,EAAgC8C,EAAqCK,EAAsB1G,EAA8BN,EAAoCiH,EAMhJC,EAAqEC,EAGrFC,EAINC,EAQIC,EACAC,EACAC,EACAC,EA6BJC,EACAC,EAUAC,CAMR,OAxEAlF,GAAQlE,EAAEkE,GACVa,KAAKe,cAAe,EAChBhB,EAAOC,KAAMM,EAAWP,EAAKM,eAAgB+C,EAASrD,EAAKuE,eAAenF,GAAQsE,EAAQL,EAAOK,MAAO1G,EAAY,IAAMW,EAAYjB,EAAY0C,EAAMzC,KAAK+B,IAAS,GAAIiF,EAAM3D,EAAKwE,sBAAsB9H,GAAWQ,IAAIkC,EAAMqF,KAAKzH,GAAWuC,OAAO,WACnP,GAAIlE,GAAUH,EAAE+E,KAChB,QAAI5E,EAAQkE,OAAO,IAAM/D,EAAMmB,KAAK,OAAS,KAAKP,QACvCf,EAAQsB,KAAKnB,EAAMmB,KAAK,UAAYD,KAG/CgI,SAAS,YAAad,EAAeF,EAAkD,GAA1C1D,EAAK2E,gBAAgBvF,EAAOiE,EAAOuB,KAAWf,EAAgBH,EAGzG,GAHiHrH,EAAUkE,GAC7HsE,QAAS9I,EAAO6H,GAChBkB,MAAOpI,KACDoH,GAAY1E,EAAMzC,KAAKuB,GACrCkB,EAAM2F,WAAW7G,GACZwF,QA6BM1D,GAAKc,QAAQpE,IA5BpBsD,EAAKc,QAAQpE,GAAakH,EACtBG,EAAQJ,EAAIhH,KAAK,MACrBqD,EAAKgF,0BAA0BnB,EAAcnH,GACzCqH,GACAF,EAAalH,KAAK,KAAMoH,GAET,IAAfJ,EAAIvH,OACJuH,EAAIsB,YAAYpB,IAEZG,EAAiBxI,EAAMwI,eAAe5E,GACtC6E,EAAgB7E,EAAM8F,SAASC,IAAI,GACnCjB,EAAc9E,EAAMqF,OAAOU,IAAI,GAC/BhB,EAAc/E,EAAMgG,OAAOD,IAAI,GAE/BtB,EAAawB,YADbrB,GAAkBA,EAAesB,QACRtB,EAAesB,QACjCrB,GAA4C,UAA3BA,EAAc5G,SACb4G,EAClBC,GAAe/G,EAAW+G,EAAa9E,EAAM,IAC3B8E,EAClBC,GAAehH,EAAWgH,EAAa/E,EAAM,IAC3BA,EAEAA,IAGjCyE,EAAa0B,YAAY,YACzBnG,EAAMzC,KAAKuB,GAAa,IAIxB4F,IAAaJ,GACbzD,KAAKgD,QAAQlE,GACT2E,MAAOA,EACPtE,MAAOA,EACPoG,MAAO5B,EACPkB,MAAOpI,IAGf0C,EAAMqG,YAAY5H,GAAe6F,GACjCtE,EAAMqG,YAAY3H,EAAY4F,GAC1BlI,EAAMwI,eAAe5E,KACjBgF,EAAY5I,EAAMwI,eAAe5E,GAAOsG,cACxCrB,EAAa7I,EAAMwI,eAAe5E,GAAOuG,YACzCvB,IACAA,EAAUqB,YAAY5H,GAAe6F,GACrCU,EAAUqB,YAAY3H,EAAY4F,IAElCW,GACAA,EAAWoB,YAAYzH,GAAe0F,IAG1CI,IAAaJ,IACTY,EAAUT,EAAeA,EAAalH,KAAK,MAAQgH,EAAIhH,KAAK,MAChEqD,EAAK4F,2BAA2BxG,EAAOkF,GACnCrE,KAAKF,QAAQW,mBAAqBT,KAAKF,QAAQqC,gBAC/CnC,KAAKwD,yBAGNC,GAEXmC,aAAc,WACV,GAAI7F,GAAOC,KAAMjD,EAAY,IAAMW,EAAYtC,EAAU2E,EAAK3E,OAC9D2E,GAAK8F,iCACAzK,EAAQsF,GAAGrC,GAGZjD,EAAQoJ,KAAKzH,GAAW0H,SAAS,YAFjCrJ,EAAQkI,KAAKvG,GAAW0H,SAAS,aAKzCqB,MAAO,WACH,GAAI/F,GAAOC,KAAMkD,EAASnD,EAAK3E,QAAQkI,KAAK,IAAM1F,GAAemI,EAAShG,EAAK3E,QAAQkI,KAAK,IAAMvF,EAClGgC,GAAKc,WACLd,EAAK6F,eACL7F,EAAKiG,wBACL9C,EAAO4B,WAAW7G,GAClBiF,EAAOoC,YAAY1H,GACnBmI,EAAOT,YAAYvH,IAEvBwG,sBAAuB,SAAU9H,GAAV,GACgCpB,GAC1CsB,EAASR,EADd8J,EAAW1K,EAAMC,GAAGC,UAAUyK,gBAAuBtJ,EAAa3B,GACtE,KAAS0B,EAAM,EAAGR,EAAS6D,KAAK5E,QAAQe,OAAQQ,EAAMR,EAAQQ,IAC1DC,EAAaA,EAAWK,IAAIV,EAA0ByD,KAAK5E,QAAQuB,GAAKwJ,qBAAqB,KAAM1J,GAEvG,KAAKpB,IAAQ4K,GACTrJ,EAAaA,EAAWK,IAAIgJ,EAAS5K,GAAM+K,OAAOpG,KAAK5E,QAASqB,GAEpE,OAAOG,IAEXmI,0BAA2B,SAAUsB,EAAW5J,GAC5C,GAAmDpB,GAA/C4K,EAAW1K,EAAMC,GAAGC,UAAUyK,eAClCG,GAAU5B,SAAS/G,GAAYhB,KAAKnB,EAAMmB,KAAK,OAAQD,GAAa,IAC/D4J,EAAU3J,KAAK,OAChB2J,EAAU3J,KAAK,KAAMD,EAAY,SAErC,KAAKpB,IAAQ4K,GACTA,EAAS5K,GAAMiL,SAASD,EAAW5J,IAG3CiI,gBAAiB,SAAUvF,EAAOoH,GAC9B,GAA+FC,GAA3FzG,EAAOC,KAAMyG,EAAgB1G,EAAKD,QAAQL,SAAS8G,GAAU9J,EAAY0C,EAAMzC,KAAK+B,EAKxF,OAJKlD,GAAMC,GAAG8B,UAAUoJ,UAAU5G,QAAQL,SAAS8G,KAC/CC,EAAoBjL,EAAMoL,WAAWF,GAAiBA,EAActH,GAASsH,GAEjFA,EAAgBlL,EAAMoL,WAAWF,GAAiBA,EAActH,GAASsH,EAClElL,EAAMqL,OAAOzH,EAAMzC,KAAKnB,EAAMmB,KAAK6J,EAAU,UAAYpH,EAAMzC,KAAK,sBAAwB8J,GAAqBC,GAAiBtH,EAAMzC,KAAK,UAAY,GAAID,EAAW0C,EAAMzC,KAAK6J,IAAYpH,EAAMzC,KAAKnB,EAAMmB,KAAK6J,MAEhOjC,eAAgB,SAAUnF,GACtB,GAAgC0H,GAA5BlL,EAAQqE,KAAKF,QAAQnE,KACzB,KAAKkL,IAAQlL,GACT,IAAKA,EAAMkL,GAAMzG,KAAKJ,KAAMb,GACxB,OACIsE,OAAO,EACPkB,IAAKkC,EAIjB,QAASpD,OAAO,IAEpBpB,OAAQ,WACJ,GAAyCkD,GAArCuB,KAAczE,EAASrC,KAAKa,OAChC,KAAK0E,IAASlD,GACVyE,EAAQC,KAAK1E,EAAOkD,GAExB,OAAOuB,IAEXE,WAAY,SAAUlH,GACdA,EAAQW,mBACRT,KAAKgG,wBAETzK,EAAM0L,WAAWjH,KAAKF,QAASA,GAC/BE,KAAKsC,UACLtC,KAAKH,KAAKG,KAAK5E,QAAS4E,KAAKF,SAC7BE,KAAKkH,WAAWlH,KAAKF,UAEzBqH,eAAgB,WAAA,GAEHxK,GAASR,EACVgD,EAFJY,EAAOC,KAAMkD,EAASnD,EAAK3E,QAAQkI,KAAKvD,EAAKY,gBAAiByG,IAClE,KAASzK,EAAM,EAAGR,EAAS+G,EAAO/G,OAAQQ,EAAMR,EAAQQ,IAChDwC,EAAQlE,EAAEiI,EAAOvG,IACjB4C,EAAaJ,EAAOV,IACpB2I,EAAOL,KAAK5H,EAAMzC,KAAK+B,GAG/B,OAAO2I,IAEXzB,2BAA4B,SAAUxG,EAAOkF,GACzC,GAAIgD,GAAgB9L,EAAM+L,0BAA0BnI,EAC/CkI,IAAkBhD,GAGvB9I,EAAMgM,gBAAgBF,EAAenJ,EAAiBmG,IAE1DwB,+BAAgC,WAAA,GAC+C1G,GAAOkF,EACzEmD,EADLzH,EAAOC,KAAMkD,EAASnD,EAAK3E,QAAQkI,KAAK,IAAM1F,GAAc6J,SAChE,KAASD,EAAI,EAAGA,EAAItE,EAAO/G,OAAQqL,GAAK,EACpCrI,EAAQlE,EAAEiI,EAAOsE,IACbrI,EAAMuB,GAAG,WACT2D,EAAUtE,EAAKwE,sBAAsBpF,EAAMzC,KAAK+B,IAAOxB,IAAIkC,EAAMqF,KAAK,IAAM9G,IAAahB,KAAK,MAC9FqD,EAAK4F,2BAA2BxG,EAAOkF,KAInDqD,cAAe,WAAA,GAEFF,GACDnM,EAFJ0E,EAAOC,KAAM2H,EAAa5H,EAAKoH,iBAAkBC,IACrD,KAASI,EAAI,EAAGA,EAAIG,EAAWxL,OAAQqL,GAAK,EACpCnM,EAAOsM,EAAWH,GAClBzH,EAAKc,QAAQxF,IACb+L,EAAOL,MACHlC,MAAOxJ,EACPuJ,QAAS7E,EAAKc,QAAQxF,IAIlC,OAAO+L,IAEXQ,eAAgB,WACZ,GAAiHvB,GAA7GtG,EAAOC,KAAMF,EAAUE,KAAKF,QAAQW,kBAAmBrF,EAAU4E,KAAK5E,QAAS8I,EAAc9I,EAAQ+J,MAczG,OAZIkB,GADAvG,EAAQuG,UACIpL,EAAE6E,EAAQuG,WACfnC,GAAeA,EAAY2D,SAAS/J,GAC/BoG,EAEAjJ,EAAE,WAAW6M,aAAa/H,EAAK3E,SAE/CiL,EAAU5B,UACN3G,EACAE,GACF+J,KAAK,MACP1B,EAAU3J,KAAK,OAAQ,SACvB2J,EAAUpD,GAAG,QAAUxF,EAAIsB,EAAMgB,EAAKiI,cAAejI,IAC9CsG,GAEX2B,cAAe,SAAUvF,GACrBA,EAAEG,gBACF,IAA0GyE,GAAtGtH,EAAOC,KAAMiI,EAAOhN,EAAEwH,EAAEyF,QAASA,EAASnI,EAAK3E,QAAQkI,KAAK,UAAa2E,EAAKE,KAAK,SAAW,KAC7FD,GAAO/L,SAGZkL,EAAgB9L,EAAM+L,0BAA0BY,GAC5Cb,GACAA,EAAce,UAGtB5E,sBAAuB,WACnB,GAAkF6E,GAA9EtI,EAAOC,KAAMsI,EAAUvI,EAAKU,kBAAmB4B,EAAStC,EAAK2H,eAC5DY,KACDA,EAAUvI,EAAKU,kBAAoBV,EAAK6H,kBAE5CS,EAAajM,EAAU2D,EAAKS,kBAAmB6B,OAAQA,KACvDiG,EAAQC,KAAKF,GACbC,EAAQ9C,YAAY,YAAanD,EAAOlG,SAE5C6J,sBAAuB,WACnB,GAAIjG,GAAOC,KAAMsI,EAAUvI,EAAKU,iBAC3B6H,IAGLA,EAAQ7D,SAAS,eAGzBlJ,EAAMC,GAAGgN,OAAOlL,IAClBC,OAAOhC,MAAMkN,QACRlL,OAAOhC,OACE,kBAAVP,SAAwBA,OAAO0N,IAAM1N,OAAS,SAAU2N,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.validator.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.validator', ['kendo.core'], f);\n}(function () {\n    var __meta__ = {\n        id: 'validator',\n        name: 'Validator',\n        category: 'web',\n        description: 'The Validator offers an easy way to do a client-side form validation.',\n        depends: ['core']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, NS = '.kendoValidator', INVALIDMSG = 'k-invalid-msg', invalidMsgRegExp = new RegExp(INVALIDMSG, 'i'), INVALIDINPUT = 'k-invalid', VALIDINPUT = 'k-valid', VALIDATIONSUMMARY = 'k-validation-summary', INVALIDLABEL = 'k-text-error', MESSAGEBOX = 'k-messagebox k-messagebox-error', ARIAINVALID = 'aria-invalid', ARIADESCRIBEDBY = 'aria-describedby', emailRegExp = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i, urlRegExp = /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i, INPUTSELECTOR = ':input:not(:button,[type=submit],[type=reset],[disabled],[readonly])', CHECKBOXSELECTOR = ':checkbox:not([disabled],[readonly])', NUMBERINPUTSELECTOR = '[type=number],[type=range]', BLUR = 'blur', NAME = 'name', FORM = 'form', NOVALIDATE = 'novalidate', VALIDATE = 'validate', CHANGE = 'change', VALIDATE_INPUT = 'validateInput', proxy = $.proxy, patternMatcher = function (value, pattern) {\n                if (typeof pattern === 'string') {\n                    pattern = new RegExp('^(?:' + pattern + ')$');\n                }\n                return pattern.test(value);\n            }, matcher = function (input, selector, pattern) {\n                var value = input.val();\n                if (input.filter(selector).length && value !== '') {\n                    return patternMatcher(value, pattern);\n                }\n                return true;\n            }, hasAttribute = function (input, name) {\n                if (input.length) {\n                    return input[0].attributes[name] != null;\n                }\n                return false;\n            };\n        if (!kendo.ui.validator) {\n            kendo.ui.validator = {\n                rules: {},\n                messages: {},\n                allowSubmit: $.noop,\n                validateOnInit: $.noop\n            };\n        }\n        function resolveRules(element) {\n            var resolvers = kendo.ui.validator.ruleResolvers || {}, rules = {}, name;\n            for (name in resolvers) {\n                $.extend(true, rules, resolvers[name].resolve(element));\n            }\n            return rules;\n        }\n        function decode(value) {\n            return value.replace(/&amp/g, '&amp;').replace(/&quot;/g, '\"').replace(/&#39;/g, '\\'').replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n        }\n        function numberOfDecimalDigits(value) {\n            value = (value + '').split('.');\n            if (value.length > 1) {\n                return value[1].length;\n            }\n            return 0;\n        }\n        function parseHtml(text) {\n            if ($.parseHTML) {\n                return $($.parseHTML(text));\n            }\n            return $(text);\n        }\n        function searchForMessageContainer(elements, fieldName) {\n            var containers = $(), element, attr;\n            for (var idx = 0, length = elements.length; idx < length; idx++) {\n                element = elements[idx];\n                if (invalidMsgRegExp.test(element.className)) {\n                    attr = element.getAttribute(kendo.attr('for'));\n                    if (attr === fieldName) {\n                        containers = containers.add(element);\n                    }\n                }\n            }\n            return containers;\n        }\n        function isLabelFor(label, element) {\n            if (!label) {\n                return false;\n            }\n            if (typeof label.nodeName !== 'string' || label.nodeName !== 'LABEL') {\n                return false;\n            }\n            if (typeof label.getAttribute('for') !== 'string' || typeof element.getAttribute('id') !== 'string') {\n                return false;\n            }\n            if (label.getAttribute('for') !== element.getAttribute('id')) {\n                return false;\n            }\n            return true;\n        }\n        var SUMMARYTEMPLATE = '<ul>' + '#for(var i = 0; i < errors.length; i += 1){#' + '<li><a data-field=\"#=errors[i].field#\" href=\"\\\\#\">#= errors[i].message #</a></li>' + '# } #' + '</ul>';\n        var Validator = Widget.extend({\n            init: function (element, options) {\n                var that = this, resolved = resolveRules(element), validateAttributeSelector = '[' + kendo.attr('validate') + '!=false]';\n                options = options || {};\n                options.rules = $.extend({}, kendo.ui.validator.rules, resolved.rules, options.rules);\n                options.messages = $.extend({}, kendo.ui.validator.messages, resolved.messages, options.messages);\n                Widget.fn.init.call(that, element, options);\n                that._errorTemplate = kendo.template(that.options.errorTemplate);\n                that._summaryTemplate = kendo.template(that.options.validationSummary.template || SUMMARYTEMPLATE);\n                if (that.element.is(FORM)) {\n                    that.element.attr(NOVALIDATE, NOVALIDATE);\n                }\n                that._inputSelector = INPUTSELECTOR + validateAttributeSelector;\n                that._checkboxSelector = CHECKBOXSELECTOR + validateAttributeSelector;\n                that._errors = {};\n                that._attachEvents();\n                that._isValidated = false;\n                if (that._validateOnInit()) {\n                    that.validate();\n                }\n            },\n            events: [\n                VALIDATE,\n                CHANGE,\n                VALIDATE_INPUT\n            ],\n            options: {\n                name: 'Validator',\n                errorTemplate: '<span class=\"k-form-error\">#= message #</span>',\n                messages: {\n                    required: '{0} is required',\n                    pattern: '{0} is not valid',\n                    min: '{0} should be greater than or equal to {1}',\n                    max: '{0} should be smaller than or equal to {1}',\n                    step: '{0} is not valid',\n                    email: '{0} is not valid email',\n                    url: '{0} is not valid URL',\n                    date: '{0} is not valid date',\n                    dateCompare: 'End date should be greater than or equal to the start date'\n                },\n                rules: {\n                    required: function (input) {\n                        var checkbox = input.filter('[type=checkbox]').length && !input.is(':checked'), value = input.val();\n                        return !(hasAttribute(input, 'required') && (!value || value === '' || value.length === 0 || checkbox));\n                    },\n                    pattern: function (input) {\n                        if (input.filter('[type=text],[type=email],[type=url],[type=tel],[type=search],[type=password]').filter('[pattern]').length && input.val() !== '') {\n                            return patternMatcher(input.val(), input.attr('pattern'));\n                        }\n                        return true;\n                    },\n                    min: function (input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + ',[' + kendo.attr('type') + '=number]').filter('[min]').length && input.val() !== '') {\n                            var min = parseFloat(input.attr('min')) || 0, val = kendo.parseFloat(input.val());\n                            return min <= val;\n                        }\n                        return true;\n                    },\n                    max: function (input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + ',[' + kendo.attr('type') + '=number]').filter('[max]').length && input.val() !== '') {\n                            var max = parseFloat(input.attr('max')) || 0, val = kendo.parseFloat(input.val());\n                            return max >= val;\n                        }\n                        return true;\n                    },\n                    step: function (input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + ',[' + kendo.attr('type') + '=number]').filter('[step]').length && input.val() !== '') {\n                            var min = parseFloat(input.attr('min')) || 0, step = parseFloat(input.attr('step')) || 1, val = parseFloat(input.val()), decimals = numberOfDecimalDigits(step), raise;\n                            if (decimals) {\n                                raise = Math.pow(10, decimals);\n                                return Math.floor((val - min) * raise) % (step * raise) / Math.pow(100, decimals) === 0;\n                            }\n                            return (val - min) % step === 0;\n                        }\n                        return true;\n                    },\n                    email: function (input) {\n                        return matcher(input, '[type=email],[' + kendo.attr('type') + '=email]', emailRegExp);\n                    },\n                    url: function (input) {\n                        return matcher(input, '[type=url],[' + kendo.attr('type') + '=url]', urlRegExp);\n                    },\n                    date: function (input) {\n                        if (input.filter('[type^=date],[' + kendo.attr('type') + '=date]').length && input.val() !== '') {\n                            return kendo.parseDate(input.val(), input.attr(kendo.attr('format'))) !== null;\n                        }\n                        return true;\n                    }\n                },\n                validateOnBlur: true,\n                validationSummary: false\n            },\n            _allowSubmit: function () {\n                return kendo.ui.validator.allowSubmit(this.element, this.errors());\n            },\n            _validateOnInit: function () {\n                return kendo.ui.validator.validateOnInit(this.element);\n            },\n            destroy: function () {\n                Widget.fn.destroy.call(this);\n                this.element.off(NS);\n                if (this.validationSummary) {\n                    this.validationSummary.off(NS);\n                    this.validationSummary = null;\n                }\n            },\n            value: function () {\n                if (!this._isValidated) {\n                    return false;\n                }\n                return this.errors().length === 0;\n            },\n            _submit: function (e) {\n                if (!this.validate() && !this._allowSubmit()) {\n                    e.stopPropagation();\n                    e.stopImmediatePropagation();\n                    e.preventDefault();\n                    return false;\n                }\n                return true;\n            },\n            _checkElement: function (element) {\n                var state = this.value();\n                this.validateInput(element);\n                if (this.value() !== state) {\n                    this.trigger(CHANGE);\n                }\n            },\n            _attachEvents: function () {\n                var that = this;\n                if (that.element.is(FORM)) {\n                    that.element.on('submit' + NS, proxy(that._submit, that));\n                }\n                if (that.options.validateOnBlur) {\n                    if (!that.element.is(INPUTSELECTOR)) {\n                        that.element.on(BLUR + NS, that._inputSelector, function () {\n                            that._checkElement($(this));\n                        });\n                        that.element.on('click' + NS, that._checkboxSelector, function () {\n                            that._checkElement($(this));\n                        });\n                    } else {\n                        that.element.on(BLUR + NS, function () {\n                            that._checkElement(that.element);\n                        });\n                        if (that.element.is(CHECKBOXSELECTOR)) {\n                            that.element.on('click' + NS, function () {\n                                that._checkElement(that.element);\n                            });\n                        }\n                    }\n                }\n            },\n            validate: function () {\n                var inputs;\n                var idx;\n                var result = false;\n                var length;\n                var isValid = this.value();\n                this._errors = {};\n                if (!this.element.is(INPUTSELECTOR)) {\n                    var invalid = false;\n                    inputs = this.element.find(this._inputSelector);\n                    for (idx = 0, length = inputs.length; idx < length; idx++) {\n                        if (!this.validateInput(inputs.eq(idx))) {\n                            invalid = true;\n                        }\n                    }\n                    result = !invalid;\n                } else {\n                    result = this.validateInput(this.element);\n                }\n                if (this.options.validationSummary && !isValid) {\n                    this.showValidationSummary();\n                }\n                this.trigger(VALIDATE, {\n                    valid: result,\n                    errors: this.errors()\n                });\n                if (isValid !== result) {\n                    this.trigger(CHANGE);\n                }\n                return result;\n            },\n            validateInput: function (input) {\n                input = $(input);\n                this._isValidated = true;\n                var that = this, template = that._errorTemplate, result = that._checkValidity(input), valid = result.valid, className = '.' + INVALIDMSG, fieldName = input.attr(NAME) || '', lbl = that._findMessageContainer(fieldName).add(input.next(className).filter(function () {\n                        var element = $(this);\n                        if (element.filter('[' + kendo.attr('for') + ']').length) {\n                            return element.attr(kendo.attr('for')) === fieldName;\n                        }\n                        return true;\n                    })).addClass('k-hidden'), messageText = !valid ? that._extractMessage(input, result.key) : '', messageLabel = !valid ? parseHtml(template({\n                        message: decode(messageText),\n                        field: fieldName\n                    })) : '', wasValid = !input.attr(ARIAINVALID);\n                input.removeAttr(ARIAINVALID);\n                if (!valid) {\n                    that._errors[fieldName] = messageText;\n                    var lblId = lbl.attr('id');\n                    that._decorateMessageContainer(messageLabel, fieldName);\n                    if (lblId) {\n                        messageLabel.attr('id', lblId);\n                    }\n                    if (lbl.length !== 0) {\n                        lbl.replaceWith(messageLabel);\n                    } else {\n                        var widgetInstance = kendo.widgetInstance(input);\n                        var parentElement = input.parent().get(0);\n                        var nextElement = input.next().get(0);\n                        var prevElement = input.prev().get(0);\n                        if (widgetInstance && widgetInstance.wrapper) {\n                            messageLabel.insertAfter(widgetInstance.wrapper);\n                        } else if (parentElement && parentElement.nodeName === 'LABEL') {\n                            messageLabel.insertAfter(parentElement);\n                        } else if (nextElement && isLabelFor(nextElement, input[0])) {\n                            messageLabel.insertAfter(nextElement);\n                        } else if (prevElement && isLabelFor(prevElement, input[0])) {\n                            messageLabel.insertAfter(input);\n                        } else {\n                            messageLabel.insertAfter(input);\n                        }\n                    }\n                    messageLabel.removeClass('k-hidden');\n                    input.attr(ARIAINVALID, true);\n                } else {\n                    delete that._errors[fieldName];\n                }\n                if (wasValid !== valid) {\n                    this.trigger(VALIDATE_INPUT, {\n                        valid: valid,\n                        input: input,\n                        error: messageText,\n                        field: fieldName\n                    });\n                }\n                input.toggleClass(INVALIDINPUT, !valid);\n                input.toggleClass(VALIDINPUT, valid);\n                if (kendo.widgetInstance(input)) {\n                    var inputWrap = kendo.widgetInstance(input)._inputWrapper;\n                    var inputLabel = kendo.widgetInstance(input)._inputLabel;\n                    if (inputWrap) {\n                        inputWrap.toggleClass(INVALIDINPUT, !valid);\n                        inputWrap.toggleClass(VALIDINPUT, valid);\n                    }\n                    if (inputLabel) {\n                        inputLabel.toggleClass(INVALIDLABEL, !valid);\n                    }\n                }\n                if (wasValid !== valid) {\n                    var errorId = messageLabel ? messageLabel.attr('id') : lbl.attr('id');\n                    that._associateMessageContainer(input, errorId);\n                    if (this.options.validationSummary && this.options.validateOnBlur) {\n                        this.showValidationSummary();\n                    }\n                }\n                return valid;\n            },\n            hideMessages: function () {\n                var that = this, className = '.' + INVALIDMSG, element = that.element;\n                that._disassociateMessageContainers();\n                if (!element.is(INPUTSELECTOR)) {\n                    element.find(className).addClass('k-hidden');\n                } else {\n                    element.next(className).addClass('k-hidden');\n                }\n            },\n            reset: function () {\n                var that = this, inputs = that.element.find('.' + INVALIDINPUT), labels = that.element.find('.' + INVALIDLABEL);\n                that._errors = [];\n                that.hideMessages();\n                that.hideValidationSummary();\n                inputs.removeAttr(ARIAINVALID);\n                inputs.removeClass(INVALIDINPUT);\n                labels.removeClass(INVALIDLABEL);\n            },\n            _findMessageContainer: function (fieldName) {\n                var locators = kendo.ui.validator.messageLocators, name, containers = $();\n                for (var idx = 0, length = this.element.length; idx < length; idx++) {\n                    containers = containers.add(searchForMessageContainer(this.element[idx].getElementsByTagName('*'), fieldName));\n                }\n                for (name in locators) {\n                    containers = containers.add(locators[name].locate(this.element, fieldName));\n                }\n                return containers;\n            },\n            _decorateMessageContainer: function (container, fieldName) {\n                var locators = kendo.ui.validator.messageLocators, name;\n                container.addClass(INVALIDMSG).attr(kendo.attr('for'), fieldName || '');\n                if (!container.attr('id')) {\n                    container.attr('id', fieldName + '-error');\n                }\n                for (name in locators) {\n                    locators[name].decorate(container, fieldName);\n                }\n            },\n            _extractMessage: function (input, ruleKey) {\n                var that = this, customMessage = that.options.messages[ruleKey], fieldName = input.attr(NAME), nonDefaultMessage;\n                if (!kendo.ui.Validator.prototype.options.messages[ruleKey]) {\n                    nonDefaultMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n                }\n                customMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n                return kendo.format(input.attr(kendo.attr(ruleKey + '-msg')) || input.attr('validationMessage') || nonDefaultMessage || customMessage || input.attr('title') || '', fieldName, input.attr(ruleKey) || input.attr(kendo.attr(ruleKey)));\n            },\n            _checkValidity: function (input) {\n                var rules = this.options.rules, rule;\n                for (rule in rules) {\n                    if (!rules[rule].call(this, input)) {\n                        return {\n                            valid: false,\n                            key: rule\n                        };\n                    }\n                }\n                return { valid: true };\n            },\n            errors: function () {\n                var results = [], errors = this._errors, error;\n                for (error in errors) {\n                    results.push(errors[error]);\n                }\n                return results;\n            },\n            setOptions: function (options) {\n                if (options.validationSummary) {\n                    this.hideValidationSummary();\n                }\n                kendo.deepExtend(this.options, options);\n                this.destroy();\n                this.init(this.element, this.options);\n                this._setEvents(this.options);\n            },\n            _getInputNames: function () {\n                var that = this, inputs = that.element.find(that._inputSelector), sorted = [];\n                for (var idx = 0, length = inputs.length; idx < length; idx++) {\n                    var input = $(inputs[idx]);\n                    if (hasAttribute(input, NAME)) {\n                        sorted.push(input.attr(NAME));\n                    }\n                }\n                return sorted;\n            },\n            _associateMessageContainer: function (input, errorId) {\n                var nextFocusable = kendo.getWidgetFocusableElement(input);\n                if (!nextFocusable || !errorId) {\n                    return;\n                }\n                kendo.toggleAttribute(nextFocusable, ARIADESCRIBEDBY, errorId);\n            },\n            _disassociateMessageContainers: function () {\n                var that = this, inputs = that.element.find('.' + INVALIDINPUT).addBack(), input, errorId;\n                for (var i = 0; i < inputs.length; i += 1) {\n                    input = $(inputs[i]);\n                    if (input.is('input')) {\n                        errorId = that._findMessageContainer(input.attr(NAME)).add(input.next('.' + INVALIDMSG)).attr('id');\n                        that._associateMessageContainer(input, errorId);\n                    }\n                }\n            },\n            _errorsByName: function () {\n                var that = this, inputNames = that._getInputNames(), sorted = [];\n                for (var i = 0; i < inputNames.length; i += 1) {\n                    var name = inputNames[i];\n                    if (that._errors[name]) {\n                        sorted.push({\n                            field: name,\n                            message: that._errors[name]\n                        });\n                    }\n                }\n                return sorted;\n            },\n            _renderSummary: function () {\n                var that = this, options = this.options.validationSummary, element = this.element, prevElement = element.prev(), container;\n                if (options.container) {\n                    container = $(options.container);\n                } else if (prevElement && prevElement.hasClass(VALIDATIONSUMMARY)) {\n                    container = prevElement;\n                } else {\n                    container = $('<div />').insertBefore(that.element);\n                }\n                container.addClass([\n                    VALIDATIONSUMMARY,\n                    MESSAGEBOX\n                ].join(' '));\n                container.attr('role', 'alert');\n                container.on('click' + NS, proxy(that._summaryClick, that));\n                return container;\n            },\n            _summaryClick: function (e) {\n                e.preventDefault();\n                var that = this, link = $(e.target), target = that.element.find('[name=\\'' + link.data('field') + '\\']'), nextFocusable;\n                if (!target.length) {\n                    return;\n                }\n                nextFocusable = kendo.getWidgetFocusableElement(target);\n                if (nextFocusable) {\n                    nextFocusable.focus();\n                }\n            },\n            showValidationSummary: function () {\n                var that = this, summary = that.validationSummary, errors = that._errorsByName(), errorsList;\n                if (!summary) {\n                    summary = that.validationSummary = that._renderSummary();\n                }\n                errorsList = parseHtml(that._summaryTemplate({ errors: errors }));\n                summary.html(errorsList);\n                summary.toggleClass('k-hidden', !errors.length);\n            },\n            hideValidationSummary: function () {\n                var that = this, summary = that.validationSummary;\n                if (!summary) {\n                    return;\n                }\n                summary.addClass('k-hidden');\n            }\n        });\n        kendo.ui.plugin(Validator);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}